{
  "version": 3,
  "sources": ["../../../../../../node_modules/ol/TileRange.js"],
  "sourcesContent": ["/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /** @class */function () {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  function TileRange(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  TileRange.prototype.contains = function (tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  };\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  TileRange.prototype.containsTileRange = function (tileRange) {\n    return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX && this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n  };\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  TileRange.prototype.containsXY = function (x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  };\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  TileRange.prototype.equals = function (tileRange) {\n    return this.minX == tileRange.minX && this.minY == tileRange.minY && this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n  };\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  TileRange.prototype.extend = function (tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  };\n  /**\n   * @return {number} Height.\n   */\n  TileRange.prototype.getHeight = function () {\n    return this.maxY - this.minY + 1;\n  };\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  TileRange.prototype.getSize = function () {\n    return [this.getWidth(), this.getHeight()];\n  };\n  /**\n   * @return {number} Width.\n   */\n  TileRange.prototype.getWidth = function () {\n    return this.maxX - this.minX + 1;\n  };\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  TileRange.prototype.intersects = function (tileRange) {\n    return this.minX <= tileRange.maxX && this.maxX >= tileRange.minX && this.minY <= tileRange.maxY && this.maxY >= tileRange.minY;\n  };\n  return TileRange;\n}();\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\nexport default TileRange;\n"],
  "mappings": ";AAOA,IAAI;AAAA;AAAA,EAAyB,WAAY;AAOvC,aAASA,WAAU,MAAM,MAAM,MAAM,MAAM;AAIzC,WAAK,OAAO;AAIZ,WAAK,OAAO;AAIZ,WAAK,OAAO;AAIZ,WAAK,OAAO;AAAA,IACd;AAKA,IAAAA,WAAU,UAAU,WAAW,SAAU,WAAW;AAClD,aAAO,KAAK,WAAW,UAAU,CAAC,GAAG,UAAU,CAAC,CAAC;AAAA,IACnD;AAKA,IAAAA,WAAU,UAAU,oBAAoB,SAAU,WAAW;AAC3D,aAAO,KAAK,QAAQ,UAAU,QAAQ,UAAU,QAAQ,KAAK,QAAQ,KAAK,QAAQ,UAAU,QAAQ,UAAU,QAAQ,KAAK;AAAA,IAC7H;AAMA,IAAAA,WAAU,UAAU,aAAa,SAAU,GAAG,GAAG;AAC/C,aAAO,KAAK,QAAQ,KAAK,KAAK,KAAK,QAAQ,KAAK,QAAQ,KAAK,KAAK,KAAK;AAAA,IACzE;AAKA,IAAAA,WAAU,UAAU,SAAS,SAAU,WAAW;AAChD,aAAO,KAAK,QAAQ,UAAU,QAAQ,KAAK,QAAQ,UAAU,QAAQ,KAAK,QAAQ,UAAU,QAAQ,KAAK,QAAQ,UAAU;AAAA,IAC7H;AAIA,IAAAA,WAAU,UAAU,SAAS,SAAU,WAAW;AAChD,UAAI,UAAU,OAAO,KAAK,MAAM;AAC9B,aAAK,OAAO,UAAU;AAAA,MACxB;AACA,UAAI,UAAU,OAAO,KAAK,MAAM;AAC9B,aAAK,OAAO,UAAU;AAAA,MACxB;AACA,UAAI,UAAU,OAAO,KAAK,MAAM;AAC9B,aAAK,OAAO,UAAU;AAAA,MACxB;AACA,UAAI,UAAU,OAAO,KAAK,MAAM;AAC9B,aAAK,OAAO,UAAU;AAAA,MACxB;AAAA,IACF;AAIA,IAAAA,WAAU,UAAU,YAAY,WAAY;AAC1C,aAAO,KAAK,OAAO,KAAK,OAAO;AAAA,IACjC;AAIA,IAAAA,WAAU,UAAU,UAAU,WAAY;AACxC,aAAO,CAAC,KAAK,SAAS,GAAG,KAAK,UAAU,CAAC;AAAA,IAC3C;AAIA,IAAAA,WAAU,UAAU,WAAW,WAAY;AACzC,aAAO,KAAK,OAAO,KAAK,OAAO;AAAA,IACjC;AAKA,IAAAA,WAAU,UAAU,aAAa,SAAU,WAAW;AACpD,aAAO,KAAK,QAAQ,UAAU,QAAQ,KAAK,QAAQ,UAAU,QAAQ,KAAK,QAAQ,UAAU,QAAQ,KAAK,QAAQ,UAAU;AAAA,IAC7H;AACA,WAAOA;AAAA,EACT,EAAE;AAAA;AASK,SAAS,eAAe,MAAM,MAAM,MAAM,MAAM,WAAW;AAChE,MAAI,cAAc,QAAW;AAC3B,cAAU,OAAO;AACjB,cAAU,OAAO;AACjB,cAAU,OAAO;AACjB,cAAU,OAAO;AACjB,WAAO;AAAA,EACT,OAAO;AACL,WAAO,IAAI,UAAU,MAAM,MAAM,MAAM,IAAI;AAAA,EAC7C;AACF;AACA,IAAO,oBAAQ;",
  "names": ["TileRange"]
}

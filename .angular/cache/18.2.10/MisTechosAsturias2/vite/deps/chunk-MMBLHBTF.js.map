{
  "version": 3,
  "sources": ["../../../../../../node_modules/ol/style/Image.js", "../../../../../../node_modules/ol/colorlike.js", "../../../../../../node_modules/ol/style/RegularShape.js", "../../../../../../node_modules/ol/style/Circle.js", "../../../../../../node_modules/ol/style/Fill.js", "../../../../../../node_modules/ol/style/IconOrigin.js", "../../../../../../node_modules/ol/style/IconImage.js", "../../../../../../node_modules/ol/style/Icon.js", "../../../../../../node_modules/ol/style/Stroke.js", "../../../../../../node_modules/ol/style/Style.js", "../../../../../../node_modules/ol/style/TextPlacement.js", "../../../../../../node_modules/ol/style/Text.js"],
  "sourcesContent": ["/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\nimport { toSize } from '../size.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number|import(\"../size.js\").Size} scale\n * @property {Array<number>} displacement\n */\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = /** @class */function () {\n  /**\n   * @param {Options} options Options.\n   */\n  function ImageStyle(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  ImageStyle.prototype.clone = function () {\n    var scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice()\n    });\n  };\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  ImageStyle.prototype.getOpacity = function () {\n    return this.opacity_;\n  };\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  ImageStyle.prototype.getRotateWithView = function () {\n    return this.rotateWithView_;\n  };\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  ImageStyle.prototype.getRotation = function () {\n    return this.rotation_;\n  };\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  ImageStyle.prototype.getScale = function () {\n    return this.scale_;\n  };\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  ImageStyle.prototype.getScaleArray = function () {\n    return this.scaleArray_;\n  };\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  ImageStyle.prototype.getDisplacement = function () {\n    return this.displacement_;\n  };\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  ImageStyle.prototype.getAnchor = function () {\n    return abstract();\n  };\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  ImageStyle.prototype.getImage = function (pixelRatio) {\n    return abstract();\n  };\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  ImageStyle.prototype.getHitDetectionImage = function () {\n    return abstract();\n  };\n  /*\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * */\n  ImageStyle.prototype.getPixelRatio = function (pixelRatio) {\n    return 1;\n  };\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  ImageStyle.prototype.getImageState = function () {\n    return abstract();\n  };\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  ImageStyle.prototype.getImageSize = function () {\n    return abstract();\n  };\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  ImageStyle.prototype.getHitDetectionImageSize = function () {\n    return abstract();\n  };\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  ImageStyle.prototype.getOrigin = function () {\n    return abstract();\n  };\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  ImageStyle.prototype.getSize = function () {\n    return abstract();\n  };\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  ImageStyle.prototype.setOpacity = function (opacity) {\n    this.opacity_ = opacity;\n  };\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  };\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  ImageStyle.prototype.setRotation = function (rotation) {\n    this.rotation_ = rotation;\n  };\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  ImageStyle.prototype.setScale = function (scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  };\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  ImageStyle.prototype.listenImageChange = function (listener) {\n    abstract();\n  };\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  ImageStyle.prototype.load = function () {\n    abstract();\n  };\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  ImageStyle.prototype.unlistenImageChange = function (listener) {\n    abstract();\n  };\n  return ImageStyle;\n}();\nexport default ImageStyle;\n", "/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n", "/**\n * @module ol/style/RegularShape\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { asColorLike } from '../colorlike.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { defaultFillStyle, defaultLineCap, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle } from '../render/canvas.js';\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} miterLimit\n */\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /** @class */function (_super) {\n  __extends(RegularShape, _super);\n  /**\n   * @param {Options} options Options.\n   */\n  function RegularShape(options) {\n    var _this = this;\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n    _this = _super.call(this, {\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement: options.displacement !== undefined ? options.displacement : [0, 0]\n    }) || this;\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    _this.canvas_ = {};\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    _this.hitDetectionCanvas_ = null;\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    _this.fill_ = options.fill !== undefined ? options.fill : null;\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    _this.origin_ = [0, 0];\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.points_ = options.points;\n    /**\n     * @protected\n     * @type {number}\n     */\n    _this.radius_ = options.radius !== undefined ? options.radius : options.radius1;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    _this.radius2_ = options.radius2;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.angle_ = options.angle !== undefined ? options.angle : 0;\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    _this.anchor_ = null;\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    _this.size_ = null;\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    _this.imageSize_ = null;\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    _this.hitDetectionImageSize_ = null;\n    _this.render();\n    return _this;\n  }\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  RegularShape.prototype.clone = function () {\n    var scale = this.getScale();\n    var style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice()\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  };\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  RegularShape.prototype.getAnchor = function () {\n    return this.anchor_;\n  };\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  RegularShape.prototype.getAngle = function () {\n    return this.angle_;\n  };\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  RegularShape.prototype.getFill = function () {\n    return this.fill_;\n  };\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  RegularShape.prototype.getHitDetectionImage = function () {\n    if (!this.hitDetectionCanvas_) {\n      var renderOptions = this.createRenderOptions();\n      this.createHitDetectionCanvas_(renderOptions);\n    }\n    return this.hitDetectionCanvas_;\n  };\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  RegularShape.prototype.getImage = function (pixelRatio) {\n    if (!this.canvas_[pixelRatio || 1]) {\n      var renderOptions = this.createRenderOptions();\n      var context = createCanvasContext2D(renderOptions.size * pixelRatio || 1, renderOptions.size * pixelRatio || 1);\n      this.draw_(renderOptions, context, 0, 0, pixelRatio || 1);\n      this.canvas_[pixelRatio || 1] = context.canvas;\n    }\n    return this.canvas_[pixelRatio || 1];\n  };\n  /*\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * */\n  RegularShape.prototype.getPixelRatio = function (pixelRatio) {\n    return pixelRatio;\n  };\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  RegularShape.prototype.getImageSize = function () {\n    return this.imageSize_;\n  };\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  RegularShape.prototype.getHitDetectionImageSize = function () {\n    return this.hitDetectionImageSize_;\n  };\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  RegularShape.prototype.getImageState = function () {\n    return ImageState.LOADED;\n  };\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  RegularShape.prototype.getOrigin = function () {\n    return this.origin_;\n  };\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  RegularShape.prototype.getPoints = function () {\n    return this.points_;\n  };\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  RegularShape.prototype.getRadius = function () {\n    return this.radius_;\n  };\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  RegularShape.prototype.getRadius2 = function () {\n    return this.radius2_;\n  };\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  RegularShape.prototype.getSize = function () {\n    return this.size_;\n  };\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  RegularShape.prototype.getStroke = function () {\n    return this.stroke_;\n  };\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  RegularShape.prototype.listenImageChange = function (listener) {};\n  /**\n   * Load not yet loaded URI.\n   */\n  RegularShape.prototype.load = function () {};\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  RegularShape.prototype.unlistenImageChange = function (listener) {};\n  /**\n   * @returns {RenderOptions}  The render options\n   * @protected\n   */\n  RegularShape.prototype.createRenderOptions = function () {\n    var lineCap = defaultLineCap;\n    var lineJoin = defaultLineJoin;\n    var miterLimit = 0;\n    var lineDash = null;\n    var lineDashOffset = 0;\n    var strokeStyle;\n    var strokeWidth = 0;\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n    var size = 2 * (this.radius_ + strokeWidth) + 1;\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit\n    };\n  };\n  /**\n   * @protected\n   */\n  RegularShape.prototype.render = function () {\n    var renderOptions = this.createRenderOptions();\n    var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n    this.draw_(renderOptions, context, 0, 0, 1);\n    this.canvas_ = {};\n    this.canvas_[1] = context.canvas;\n    // canvas.width and height are rounded to the closest integer\n    var size = context.canvas.width;\n    var imageSize = size;\n    var displacement = this.getDisplacement();\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    this.createHitDetectionCanvas_(renderOptions);\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  };\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  RegularShape.prototype.draw_ = function (renderOptions, context, x, y, pixelRatio) {\n    var i, angle0, radiusC;\n    // reset transform\n    context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    // then move to (x, y)\n    context.translate(x, y);\n    context.beginPath();\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n    if (this.fill_) {\n      var color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  };\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n    this.hitDetectionCanvas_ = this.getImage(1);\n    if (this.fill_) {\n      var color = this.fill_.getColor();\n      // determine if fill is transparent (or pattern or gradient)\n      var opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.hitDetectionCanvas_ = context.canvas;\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n      }\n    }\n  };\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context, x, y) {\n    // move to (x, y)\n    context.translate(x, y);\n    context.beginPath();\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      var i = void 0,\n        radiusC = void 0,\n        angle0 = void 0;\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  };\n  return RegularShape;\n}(ImageStyle);\nexport default RegularShape;\n", "/**\n * @module ol/style/Circle\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /** @class */function (_super) {\n  __extends(CircleStyle, _super);\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  function CircleStyle(opt_options) {\n    var _this = this;\n    var options = opt_options ? opt_options : {};\n    _this = _super.call(this, {\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView: options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement: options.displacement !== undefined ? options.displacement : [0, 0]\n    }) || this;\n    return _this;\n  }\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  CircleStyle.prototype.clone = function () {\n    var scale = this.getScale();\n    var style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice()\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  };\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  CircleStyle.prototype.setRadius = function (radius) {\n    this.radius_ = radius;\n    this.render();\n  };\n  return CircleStyle;\n}(RegularShape);\nexport default CircleStyle;\n", "/**\n * @module ol/style/Fill\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = /** @class */function () {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  function Fill(opt_options) {\n    var options = opt_options || {};\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  Fill.prototype.clone = function () {\n    var color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined\n    });\n  };\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  Fill.prototype.getColor = function () {\n    return this.color_;\n  };\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  Fill.prototype.setColor = function (color) {\n    this.color_ = color;\n  };\n  return Fill;\n}();\nexport default Fill;\n", "/**\n * @module ol/style/IconOrigin\n */\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right'\n};\n", "/**\n * @module ol/style/IconImage\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { asString } from '../color.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\nimport { listenImage } from '../Image.js';\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar taintedTestContext = null;\nvar IconImage = /** @class */function (_super) {\n  __extends(IconImage, _super);\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  function IconImage(image, src, size, crossOrigin, imageState, color) {\n    var _this = _super.call(this) || this;\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    _this.hitDetectionImage_ = null;\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    _this.image_ = !image ? new Image() : image;\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */_this.image_.crossOrigin = crossOrigin;\n    }\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    _this.canvas_ = {};\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    _this.color_ = color;\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    _this.unlisten_ = null;\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    _this.imageState_ = imageState;\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    _this.size_ = size;\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    _this.src_ = src;\n    /**\n     * @private\n     */\n    _this.tainted_;\n    return _this;\n  }\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  IconImage.prototype.isTainted_ = function () {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  };\n  /**\n   * @private\n   */\n  IconImage.prototype.dispatchChangeEvent_ = function () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageError_ = function () {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  };\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageLoad_ = function () {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  };\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  IconImage.prototype.getImage = function (pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  };\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  IconImage.prototype.getPixelRatio = function (pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  };\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  IconImage.prototype.getImageState = function () {\n    return this.imageState_;\n  };\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  IconImage.prototype.getHitDetectionImage = function () {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        var width = this.size_[0];\n        var height = this.size_[1];\n        var context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  };\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  IconImage.prototype.getSize = function () {\n    return this.size_;\n  };\n  /**\n   * @return {string|undefined} Image src.\n   */\n  IconImage.prototype.getSrc = function () {\n    return this.src_;\n  };\n  /**\n   * Load not yet loaded URI.\n   */\n  IconImage.prototype.load = function () {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */this.image_.src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n    }\n  };\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  IconImage.prototype.replaceColor_ = function (pixelRatio) {\n    if (!this.color_ || this.canvas_[pixelRatio]) {\n      return;\n    }\n    var canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n    var ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      var imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      var data = imgData.data;\n      var r = this.color_[0] / 255.0;\n      var g = this.color_[1] / 255.0;\n      var b = this.color_[2] / 255.0;\n      var a = this.color_[3];\n      for (var i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  };\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  IconImage.prototype.unlistenImage_ = function () {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  };\n  return IconImage;\n}(EventTarget);\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  var iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\nexport default IconImage;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { assert } from '../asserts.js';\nimport { get as getIconImage } from './IconImage.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /** @class */function (_super) {\n  __extends(Icon, _super);\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  function Icon(opt_options) {\n    var _this = this;\n    var options = opt_options || {};\n    /**\n     * @type {number}\n     */\n    var opacity = options.opacity !== undefined ? options.opacity : 1;\n    /**\n     * @type {number}\n     */\n    var rotation = options.rotation !== undefined ? options.rotation : 0;\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    var scale = options.scale !== undefined ? options.scale : 1;\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n    _this = _super.call(this, {\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView\n    }) || this;\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    _this.normalizedAnchor_ = null;\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    _this.anchorOrigin_ = options.anchorOrigin !== undefined ? options.anchorOrigin : IconOrigin.TOP_LEFT;\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    _this.anchorXUnits_ = options.anchorXUnits !== undefined ? options.anchorXUnits : IconAnchorUnits.FRACTION;\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    _this.anchorYUnits_ = options.anchorYUnits !== undefined ? options.anchorYUnits : IconAnchorUnits.FRACTION;\n    /**\n     * @private\n     * @type {?string}\n     */\n    _this.crossOrigin_ = options.crossOrigin !== undefined ? options.crossOrigin : null;\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    var image = options.img !== undefined ? options.img : null;\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n    /**\n     * @type {string|undefined}\n     */\n    var src = options.src;\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || image && imgSize, 5); // `imgSize` must be set when `image` is provided\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */image.src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    var imageState = options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    _this.color_ = options.color !== undefined ? asArray(options.color) : null;\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    _this.iconImage_ = getIconImage(image, /** @type {string} */src, imgSize, _this.crossOrigin_, imageState, _this.color_);\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    _this.offsetOrigin_ = options.offsetOrigin !== undefined ? options.offsetOrigin : IconOrigin.TOP_LEFT;\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    _this.origin_ = null;\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    _this.size_ = options.size !== undefined ? options.size : null;\n    return _this;\n  }\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  Icon.prototype.clone = function () {\n    var scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color: this.color_ && this.color_.slice ? this.color_.slice() : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView()\n    });\n  };\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  Icon.prototype.getAnchor = function () {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    var anchor = this.anchor_;\n    var size = this.getSize();\n    if (this.anchorXUnits_ == IconAnchorUnits.FRACTION || this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT || this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT || this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  };\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  Icon.prototype.setAnchor = function (anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  };\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  Icon.prototype.getColor = function () {\n    return this.color_;\n  };\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  Icon.prototype.getImage = function (pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  };\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ration of the image.\n   * @api\n   */\n  Icon.prototype.getPixelRatio = function (pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  };\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  Icon.prototype.getImageSize = function () {\n    return this.iconImage_.getSize();\n  };\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  Icon.prototype.getHitDetectionImageSize = function () {\n    return this.getImageSize();\n  };\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  Icon.prototype.getImageState = function () {\n    return this.iconImage_.getImageState();\n  };\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  Icon.prototype.getHitDetectionImage = function () {\n    return this.iconImage_.getHitDetectionImage();\n  };\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  Icon.prototype.getOrigin = function () {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    var offset = this.offset_;\n    var displacement = this.getDisplacement();\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      var size = this.getSize();\n      var iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT || this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT || this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    offset[0] += displacement[0];\n    offset[1] += displacement[1];\n    this.origin_ = offset;\n    return this.origin_;\n  };\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  Icon.prototype.getSrc = function () {\n    return this.iconImage_.getSrc();\n  };\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  Icon.prototype.getSize = function () {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  };\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  Icon.prototype.listenImageChange = function (listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  };\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  Icon.prototype.load = function () {\n    this.iconImage_.load();\n  };\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  Icon.prototype.unlistenImageChange = function (listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  };\n  return Icon;\n}(ImageStyle);\nexport default Icon;\n", "/**\n * @module ol/style/Stroke\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = /** @class */function () {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  function Stroke(opt_options) {\n    var options = opt_options || {};\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  Stroke.prototype.clone = function () {\n    var color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth()\n    });\n  };\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  Stroke.prototype.getColor = function () {\n    return this.color_;\n  };\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  Stroke.prototype.getLineCap = function () {\n    return this.lineCap_;\n  };\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  Stroke.prototype.getLineDash = function () {\n    return this.lineDash_;\n  };\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  Stroke.prototype.getLineDashOffset = function () {\n    return this.lineDashOffset_;\n  };\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  Stroke.prototype.getLineJoin = function () {\n    return this.lineJoin_;\n  };\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  Stroke.prototype.getMiterLimit = function () {\n    return this.miterLimit_;\n  };\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  Stroke.prototype.getWidth = function () {\n    return this.width_;\n  };\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  Stroke.prototype.setColor = function (color) {\n    this.color_ = color;\n  };\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  Stroke.prototype.setLineCap = function (lineCap) {\n    this.lineCap_ = lineCap;\n  };\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  Stroke.prototype.setLineDash = function (lineDash) {\n    this.lineDash_ = lineDash;\n  };\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  };\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  Stroke.prototype.setLineJoin = function (lineJoin) {\n    this.lineJoin_ = lineJoin;\n  };\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  Stroke.prototype.setMiterLimit = function (miterLimit) {\n    this.miterLimit_ = miterLimit;\n  };\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  Stroke.prototype.setWidth = function (width) {\n    this.width_ = width;\n  };\n  return Stroke;\n}();\nexport default Stroke;\n", "/**\n * @module ol/style/Style\n */\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport { assert } from '../asserts.js';\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nvar Style = /** @class */function () {\n  /**\n   * @param {Options=} opt_options Style options.\n   */\n  function Style(opt_options) {\n    var options = opt_options || {};\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  Style.prototype.clone = function () {\n    var geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */geometry.clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex()\n    });\n  };\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  Style.prototype.getRenderer = function () {\n    return this.renderer_;\n  };\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  Style.prototype.setRenderer = function (renderer) {\n    this.renderer_ = renderer;\n  };\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  Style.prototype.getGeometry = function () {\n    return this.geometry_;\n  };\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  Style.prototype.getGeometryFunction = function () {\n    return this.geometryFunction_;\n  };\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  Style.prototype.getFill = function () {\n    return this.fill_;\n  };\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  Style.prototype.setFill = function (fill) {\n    this.fill_ = fill;\n  };\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  Style.prototype.getImage = function () {\n    return this.image_;\n  };\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  Style.prototype.setImage = function (image) {\n    this.image_ = image;\n  };\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  Style.prototype.getStroke = function () {\n    return this.stroke_;\n  };\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  Style.prototype.setStroke = function (stroke) {\n    this.stroke_ = stroke;\n  };\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  Style.prototype.getText = function () {\n    return this.text_;\n  };\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  Style.prototype.setText = function (text) {\n    this.text_ = text;\n  };\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  Style.prototype.getZIndex = function () {\n    return this.zIndex_;\n  };\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  Style.prototype.setGeometry = function (geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */feature.get(geometry);\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */geometry;\n      };\n    }\n    this.geometry_ = geometry;\n  };\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  Style.prototype.setZIndex = function (zIndex) {\n    this.zIndex_ = zIndex;\n  };\n  return Style;\n}();\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  var styleFunction;\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    var styles_1;\n    if (Array.isArray(obj)) {\n      styles_1 = obj;\n    } else {\n      assert(typeof (/** @type {?} */obj.getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      var style = /** @type {Style} */obj;\n      styles_1 = [style];\n    }\n    styleFunction = function () {\n      return styles_1;\n    };\n  }\n  return styleFunction;\n}\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    var fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    var stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [new Style({\n      image: new CircleStyle({\n        fill: fill,\n        stroke: stroke,\n        radius: 5\n      }),\n      fill: fill,\n      stroke: stroke\n    })];\n  }\n  return defaultStyles;\n}\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  var styles = {};\n  var white = [255, 255, 255, 1];\n  var blue = [0, 153, 255, 1];\n  var width = 3;\n  styles[GeometryType.POLYGON] = [new Style({\n    fill: new Fill({\n      color: [255, 255, 255, 0.5]\n    })\n  })];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n  styles[GeometryType.LINE_STRING] = [new Style({\n    stroke: new Stroke({\n      color: white,\n      width: width + 2\n    })\n  }), new Style({\n    stroke: new Stroke({\n      color: blue,\n      width: width\n    })\n  })];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\n  styles[GeometryType.POINT] = [new Style({\n    image: new CircleStyle({\n      radius: width * 2,\n      fill: new Fill({\n        color: blue\n      }),\n      stroke: new Stroke({\n        color: white,\n        width: width / 2\n      })\n    }),\n    zIndex: Infinity\n  })];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n  return styles;\n}\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\nexport default Style;\n", "/**\n * @module ol/style/TextPlacement\n */\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n", "/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport { toSize } from '../size.js';\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = /** @class */function () {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  function Text(opt_options) {\n    var options = opt_options || {};\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.text_ = options.text;\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : new Fill({\n      color: DEFAULT_FILL_COLOR\n    });\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n    /**\n     * @private\n     * @type {import(\"./TextPlacement.js\").default|string}\n     */\n    this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  Text.prototype.clone = function () {\n    var scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n      backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined,\n      padding: this.getPadding()\n    });\n  };\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  Text.prototype.getOverflow = function () {\n    return this.overflow_;\n  };\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  Text.prototype.getFont = function () {\n    return this.font_;\n  };\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  Text.prototype.getMaxAngle = function () {\n    return this.maxAngle_;\n  };\n  /**\n   * Get the label placement.\n   * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n   * @api\n   */\n  Text.prototype.getPlacement = function () {\n    return this.placement_;\n  };\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  Text.prototype.getOffsetX = function () {\n    return this.offsetX_;\n  };\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  Text.prototype.getOffsetY = function () {\n    return this.offsetY_;\n  };\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  Text.prototype.getFill = function () {\n    return this.fill_;\n  };\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  Text.prototype.getRotateWithView = function () {\n    return this.rotateWithView_;\n  };\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  Text.prototype.getRotation = function () {\n    return this.rotation_;\n  };\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  Text.prototype.getScale = function () {\n    return this.scale_;\n  };\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  Text.prototype.getScaleArray = function () {\n    return this.scaleArray_;\n  };\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  Text.prototype.getStroke = function () {\n    return this.stroke_;\n  };\n  /**\n   * Get the text to be rendered.\n   * @return {string|undefined} Text.\n   * @api\n   */\n  Text.prototype.getText = function () {\n    return this.text_;\n  };\n  /**\n   * Get the text alignment.\n   * @return {string|undefined} Text align.\n   * @api\n   */\n  Text.prototype.getTextAlign = function () {\n    return this.textAlign_;\n  };\n  /**\n   * Get the text baseline.\n   * @return {string|undefined} Text baseline.\n   * @api\n   */\n  Text.prototype.getTextBaseline = function () {\n    return this.textBaseline_;\n  };\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  Text.prototype.getBackgroundFill = function () {\n    return this.backgroundFill_;\n  };\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  Text.prototype.getBackgroundStroke = function () {\n    return this.backgroundStroke_;\n  };\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>} Padding.\n   * @api\n   */\n  Text.prototype.getPadding = function () {\n    return this.padding_;\n  };\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  Text.prototype.setOverflow = function (overflow) {\n    this.overflow_ = overflow;\n  };\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  Text.prototype.setFont = function (font) {\n    this.font_ = font;\n  };\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  Text.prototype.setMaxAngle = function (maxAngle) {\n    this.maxAngle_ = maxAngle;\n  };\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  Text.prototype.setOffsetX = function (offsetX) {\n    this.offsetX_ = offsetX;\n  };\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  Text.prototype.setOffsetY = function (offsetY) {\n    this.offsetY_ = offsetY;\n  };\n  /**\n   * Set the text placement.\n   *\n   * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n   * @api\n   */\n  Text.prototype.setPlacement = function (placement) {\n    this.placement_ = placement;\n  };\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  Text.prototype.setRotateWithView = function (rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  };\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  Text.prototype.setFill = function (fill) {\n    this.fill_ = fill;\n  };\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  Text.prototype.setRotation = function (rotation) {\n    this.rotation_ = rotation;\n  };\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  Text.prototype.setScale = function (scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  };\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  Text.prototype.setStroke = function (stroke) {\n    this.stroke_ = stroke;\n  };\n  /**\n   * Set the text.\n   *\n   * @param {string|undefined} text Text.\n   * @api\n   */\n  Text.prototype.setText = function (text) {\n    this.text_ = text;\n  };\n  /**\n   * Set the text alignment.\n   *\n   * @param {string|undefined} textAlign Text align.\n   * @api\n   */\n  Text.prototype.setTextAlign = function (textAlign) {\n    this.textAlign_ = textAlign;\n  };\n  /**\n   * Set the text baseline.\n   *\n   * @param {string|undefined} textBaseline Text baseline.\n   * @api\n   */\n  Text.prototype.setTextBaseline = function (textBaseline) {\n    this.textBaseline_ = textBaseline;\n  };\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  Text.prototype.setBackgroundFill = function (fill) {\n    this.backgroundFill_ = fill;\n  };\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  Text.prototype.setBackgroundStroke = function (stroke) {\n    this.backgroundStroke_ = stroke;\n  };\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {!Array<number>} padding Padding.\n   * @api\n   */\n  Text.prototype.setPadding = function (padding) {\n    this.padding_ = padding;\n  };\n  return Text;\n}();\nexport default Text;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,IAAI;AAAA;AAAA,EAA0B,WAAY;AAIxC,aAASA,YAAW,SAAS;AAK3B,WAAK,WAAW,QAAQ;AAKxB,WAAK,kBAAkB,QAAQ;AAK/B,WAAK,YAAY,QAAQ;AAKzB,WAAK,SAAS,QAAQ;AAKtB,WAAK,cAAc,OAAO,QAAQ,KAAK;AAKvC,WAAK,gBAAgB,QAAQ;AAAA,IAC/B;AAMA,IAAAA,YAAW,UAAU,QAAQ,WAAY;AACvC,UAAI,QAAQ,KAAK,SAAS;AAC1B,aAAO,IAAIA,YAAW;AAAA,QACpB,SAAS,KAAK,WAAW;AAAA,QACzB,OAAO,MAAM,QAAQ,KAAK,IAAI,MAAM,MAAM,IAAI;AAAA,QAC9C,UAAU,KAAK,YAAY;AAAA,QAC3B,gBAAgB,KAAK,kBAAkB;AAAA,QACvC,cAAc,KAAK,gBAAgB,EAAE,MAAM;AAAA,MAC7C,CAAC;AAAA,IACH;AAMA,IAAAA,YAAW,UAAU,aAAa,WAAY;AAC5C,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,YAAW,UAAU,oBAAoB,WAAY;AACnD,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,YAAW,UAAU,cAAc,WAAY;AAC7C,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,YAAW,UAAU,WAAW,WAAY;AAC1C,aAAO,KAAK;AAAA,IACd;AAKA,IAAAA,YAAW,UAAU,gBAAgB,WAAY;AAC/C,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,YAAW,UAAU,kBAAkB,WAAY;AACjD,aAAO,KAAK;AAAA,IACd;AAOA,IAAAA,YAAW,UAAU,YAAY,WAAY;AAC3C,aAAO,SAAS;AAAA,IAClB;AAOA,IAAAA,YAAW,UAAU,WAAW,SAAU,YAAY;AACpD,aAAO,SAAS;AAAA,IAClB;AAKA,IAAAA,YAAW,UAAU,uBAAuB,WAAY;AACtD,aAAO,SAAS;AAAA,IAClB;AAKA,IAAAA,YAAW,UAAU,gBAAgB,SAAU,YAAY;AACzD,aAAO;AAAA,IACT;AAKA,IAAAA,YAAW,UAAU,gBAAgB,WAAY;AAC/C,aAAO,SAAS;AAAA,IAClB;AAKA,IAAAA,YAAW,UAAU,eAAe,WAAY;AAC9C,aAAO,SAAS;AAAA,IAClB;AAKA,IAAAA,YAAW,UAAU,2BAA2B,WAAY;AAC1D,aAAO,SAAS;AAAA,IAClB;AAMA,IAAAA,YAAW,UAAU,YAAY,WAAY;AAC3C,aAAO,SAAS;AAAA,IAClB;AAMA,IAAAA,YAAW,UAAU,UAAU,WAAY;AACzC,aAAO,SAAS;AAAA,IAClB;AAOA,IAAAA,YAAW,UAAU,aAAa,SAAU,SAAS;AACnD,WAAK,WAAW;AAAA,IAClB;AAOA,IAAAA,YAAW,UAAU,oBAAoB,SAAU,gBAAgB;AACjE,WAAK,kBAAkB;AAAA,IACzB;AAOA,IAAAA,YAAW,UAAU,cAAc,SAAU,UAAU;AACrD,WAAK,YAAY;AAAA,IACnB;AAOA,IAAAA,YAAW,UAAU,WAAW,SAAU,OAAO;AAC/C,WAAK,SAAS;AACd,WAAK,cAAc,OAAO,KAAK;AAAA,IACjC;AAKA,IAAAA,YAAW,UAAU,oBAAoB,SAAU,UAAU;AAC3D,eAAS;AAAA,IACX;AAKA,IAAAA,YAAW,UAAU,OAAO,WAAY;AACtC,eAAS;AAAA,IACX;AAKA,IAAAA,YAAW,UAAU,sBAAsB,SAAU,UAAU;AAC7D,eAAS;AAAA,IACX;AACA,WAAOA;AAAA,EACT,EAAE;AAAA;AACF,IAAO,gBAAQ;;;ACpOR,SAAS,YAAY,OAAO;AACjC,MAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,WAAO,SAAS,KAAK;AAAA,EACvB,OAAO;AACL,WAAO;AAAA,EACT;AACF;;;ACvBA,IAAI,YAAsC,2BAAY;AACpD,MAAI,gBAAgB,SAAU,GAAG,GAAG;AAClC,oBAAgB,OAAO,kBAAkB;AAAA,MACvC,WAAW,CAAC;AAAA,IACd,aAAa,SAAS,SAAUC,IAAGC,IAAG;AACpC,MAAAD,GAAE,YAAYC;AAAA,IAChB,KAAK,SAAUD,IAAGC,IAAG;AACnB,eAAS,KAAKA,GAAG,KAAI,OAAO,UAAU,eAAe,KAAKA,IAAG,CAAC,EAAG,CAAAD,GAAE,CAAC,IAAIC,GAAE,CAAC;AAAA,IAC7E;AACA,WAAO,cAAc,GAAG,CAAC;AAAA,EAC3B;AACA,SAAO,SAAU,GAAG,GAAG;AACrB,kBAAc,GAAG,CAAC;AAClB,aAAS,KAAK;AACZ,WAAK,cAAc;AAAA,IACrB;AACA,MAAE,YAAY,MAAM,OAAO,OAAO,OAAO,CAAC,KAAK,GAAG,YAAY,EAAE,WAAW,IAAI,GAAG;AAAA,EACpF;AACF,EAAE;AA0CF,IAAI;AAAA;AAAA,EAA4B,SAAU,QAAQ;AAChD,cAAUC,eAAc,MAAM;AAI9B,aAASA,cAAa,SAAS;AAC7B,UAAI,QAAQ;AAIZ,UAAI,iBAAiB,QAAQ,mBAAmB,SAAY,QAAQ,iBAAiB;AACrF,cAAQ,OAAO,KAAK,MAAM;AAAA,QACxB,SAAS;AAAA,QACT;AAAA,QACA,UAAU,QAAQ,aAAa,SAAY,QAAQ,WAAW;AAAA,QAC9D,OAAO,QAAQ,UAAU,SAAY,QAAQ,QAAQ;AAAA,QACrD,cAAc,QAAQ,iBAAiB,SAAY,QAAQ,eAAe,CAAC,GAAG,CAAC;AAAA,MACjF,CAAC,KAAK;AAKN,YAAM,UAAU,CAAC;AAKjB,YAAM,sBAAsB;AAK5B,YAAM,QAAQ,QAAQ,SAAS,SAAY,QAAQ,OAAO;AAK1D,YAAM,UAAU,CAAC,GAAG,CAAC;AAKrB,YAAM,UAAU,QAAQ;AAKxB,YAAM,UAAU,QAAQ,WAAW,SAAY,QAAQ,SAAS,QAAQ;AAKxE,YAAM,WAAW,QAAQ;AAKzB,YAAM,SAAS,QAAQ,UAAU,SAAY,QAAQ,QAAQ;AAK7D,YAAM,UAAU,QAAQ,WAAW,SAAY,QAAQ,SAAS;AAKhE,YAAM,UAAU;AAKhB,YAAM,QAAQ;AAKd,YAAM,aAAa;AAKnB,YAAM,yBAAyB;AAC/B,YAAM,OAAO;AACb,aAAO;AAAA,IACT;AAMA,IAAAA,cAAa,UAAU,QAAQ,WAAY;AACzC,UAAI,QAAQ,KAAK,SAAS;AAC1B,UAAI,QAAQ,IAAIA,cAAa;AAAA,QAC3B,MAAM,KAAK,QAAQ,IAAI,KAAK,QAAQ,EAAE,MAAM,IAAI;AAAA,QAChD,QAAQ,KAAK,UAAU;AAAA,QACvB,QAAQ,KAAK,UAAU;AAAA,QACvB,SAAS,KAAK,WAAW;AAAA,QACzB,OAAO,KAAK,SAAS;AAAA,QACrB,QAAQ,KAAK,UAAU,IAAI,KAAK,UAAU,EAAE,MAAM,IAAI;AAAA,QACtD,UAAU,KAAK,YAAY;AAAA,QAC3B,gBAAgB,KAAK,kBAAkB;AAAA,QACvC,OAAO,MAAM,QAAQ,KAAK,IAAI,MAAM,MAAM,IAAI;AAAA,QAC9C,cAAc,KAAK,gBAAgB,EAAE,MAAM;AAAA,MAC7C,CAAC;AACD,YAAM,WAAW,KAAK,WAAW,CAAC;AAClC,aAAO;AAAA,IACT;AAOA,IAAAA,cAAa,UAAU,YAAY,WAAY;AAC7C,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,cAAa,UAAU,WAAW,WAAY;AAC5C,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,cAAa,UAAU,UAAU,WAAY;AAC3C,aAAO,KAAK;AAAA,IACd;AAIA,IAAAA,cAAa,UAAU,uBAAuB,WAAY;AACxD,UAAI,CAAC,KAAK,qBAAqB;AAC7B,YAAI,gBAAgB,KAAK,oBAAoB;AAC7C,aAAK,0BAA0B,aAAa;AAAA,MAC9C;AACA,aAAO,KAAK;AAAA,IACd;AAOA,IAAAA,cAAa,UAAU,WAAW,SAAU,YAAY;AACtD,UAAI,CAAC,KAAK,QAAQ,cAAc,CAAC,GAAG;AAClC,YAAI,gBAAgB,KAAK,oBAAoB;AAC7C,YAAI,UAAU,sBAAsB,cAAc,OAAO,cAAc,GAAG,cAAc,OAAO,cAAc,CAAC;AAC9G,aAAK,MAAM,eAAe,SAAS,GAAG,GAAG,cAAc,CAAC;AACxD,aAAK,QAAQ,cAAc,CAAC,IAAI,QAAQ;AAAA,MAC1C;AACA,aAAO,KAAK,QAAQ,cAAc,CAAC;AAAA,IACrC;AAKA,IAAAA,cAAa,UAAU,gBAAgB,SAAU,YAAY;AAC3D,aAAO;AAAA,IACT;AAIA,IAAAA,cAAa,UAAU,eAAe,WAAY;AAChD,aAAO,KAAK;AAAA,IACd;AAIA,IAAAA,cAAa,UAAU,2BAA2B,WAAY;AAC5D,aAAO,KAAK;AAAA,IACd;AAIA,IAAAA,cAAa,UAAU,gBAAgB,WAAY;AACjD,aAAO,mBAAW;AAAA,IACpB;AAMA,IAAAA,cAAa,UAAU,YAAY,WAAY;AAC7C,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,cAAa,UAAU,YAAY,WAAY;AAC7C,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,cAAa,UAAU,YAAY,WAAY;AAC7C,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,cAAa,UAAU,aAAa,WAAY;AAC9C,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,cAAa,UAAU,UAAU,WAAY;AAC3C,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,cAAa,UAAU,YAAY,WAAY;AAC7C,aAAO,KAAK;AAAA,IACd;AAIA,IAAAA,cAAa,UAAU,oBAAoB,SAAU,UAAU;AAAA,IAAC;AAIhE,IAAAA,cAAa,UAAU,OAAO,WAAY;AAAA,IAAC;AAI3C,IAAAA,cAAa,UAAU,sBAAsB,SAAU,UAAU;AAAA,IAAC;AAKlE,IAAAA,cAAa,UAAU,sBAAsB,WAAY;AACvD,UAAI,UAAU;AACd,UAAI,WAAW;AACf,UAAI,aAAa;AACjB,UAAI,WAAW;AACf,UAAI,iBAAiB;AACrB,UAAI;AACJ,UAAI,cAAc;AAClB,UAAI,KAAK,SAAS;AAChB,sBAAc,KAAK,QAAQ,SAAS;AACpC,YAAI,gBAAgB,MAAM;AACxB,wBAAc;AAAA,QAChB;AACA,sBAAc,YAAY,WAAW;AACrC,sBAAc,KAAK,QAAQ,SAAS;AACpC,YAAI,gBAAgB,QAAW;AAC7B,wBAAc;AAAA,QAChB;AACA,mBAAW,KAAK,QAAQ,YAAY;AACpC,yBAAiB,KAAK,QAAQ,kBAAkB;AAChD,mBAAW,KAAK,QAAQ,YAAY;AACpC,YAAI,aAAa,QAAW;AAC1B,qBAAW;AAAA,QACb;AACA,kBAAU,KAAK,QAAQ,WAAW;AAClC,YAAI,YAAY,QAAW;AACzB,oBAAU;AAAA,QACZ;AACA,qBAAa,KAAK,QAAQ,cAAc;AACxC,YAAI,eAAe,QAAW;AAC5B,uBAAa;AAAA,QACf;AAAA,MACF;AACA,UAAI,OAAO,KAAK,KAAK,UAAU,eAAe;AAC9C,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAIA,IAAAA,cAAa,UAAU,SAAS,WAAY;AAC1C,UAAI,gBAAgB,KAAK,oBAAoB;AAC7C,UAAI,UAAU,sBAAsB,cAAc,MAAM,cAAc,IAAI;AAC1E,WAAK,MAAM,eAAe,SAAS,GAAG,GAAG,CAAC;AAC1C,WAAK,UAAU,CAAC;AAChB,WAAK,QAAQ,CAAC,IAAI,QAAQ;AAE1B,UAAI,OAAO,QAAQ,OAAO;AAC1B,UAAI,YAAY;AAChB,UAAI,eAAe,KAAK,gBAAgB;AACxC,WAAK,yBAAyB,CAAC,cAAc,MAAM,cAAc,IAAI;AACrE,WAAK,0BAA0B,aAAa;AAC5C,WAAK,UAAU,CAAC,OAAO,IAAI,aAAa,CAAC,GAAG,OAAO,IAAI,aAAa,CAAC,CAAC;AACtE,WAAK,QAAQ,CAAC,MAAM,IAAI;AACxB,WAAK,aAAa,CAAC,WAAW,SAAS;AAAA,IACzC;AASA,IAAAA,cAAa,UAAU,QAAQ,SAAU,eAAe,SAAS,GAAG,GAAG,YAAY;AACjF,UAAI,GAAG,QAAQ;AAEf,cAAQ,aAAa,YAAY,GAAG,GAAG,YAAY,GAAG,CAAC;AAEvD,cAAQ,UAAU,GAAG,CAAC;AACtB,cAAQ,UAAU;AAClB,UAAI,SAAS,KAAK;AAClB,UAAI,WAAW,UAAU;AACvB,gBAAQ,IAAI,cAAc,OAAO,GAAG,cAAc,OAAO,GAAG,KAAK,SAAS,GAAG,IAAI,KAAK,IAAI,IAAI;AAAA,MAChG,OAAO;AACL,YAAI,UAAU,KAAK,aAAa,SAAY,KAAK,WAAW,KAAK;AACjE,YAAI,YAAY,KAAK,SAAS;AAC5B,mBAAS,IAAI;AAAA,QACf;AACA,aAAK,IAAI,GAAG,KAAK,QAAQ,KAAK;AAC5B,mBAAS,IAAI,IAAI,KAAK,KAAK,SAAS,KAAK,KAAK,IAAI,KAAK;AACvD,oBAAU,IAAI,MAAM,IAAI,KAAK,UAAU;AACvC,kBAAQ,OAAO,cAAc,OAAO,IAAI,UAAU,KAAK,IAAI,MAAM,GAAG,cAAc,OAAO,IAAI,UAAU,KAAK,IAAI,MAAM,CAAC;AAAA,QACzH;AAAA,MACF;AACA,UAAI,KAAK,OAAO;AACd,YAAI,QAAQ,KAAK,MAAM,SAAS;AAChC,YAAI,UAAU,MAAM;AAClB,kBAAQ;AAAA,QACV;AACA,gBAAQ,YAAY,YAAY,KAAK;AACrC,gBAAQ,KAAK;AAAA,MACf;AACA,UAAI,KAAK,SAAS;AAChB,gBAAQ,cAAc,cAAc;AACpC,gBAAQ,YAAY,cAAc;AAClC,YAAI,QAAQ,eAAe,cAAc,UAAU;AACjD,kBAAQ,YAAY,cAAc,QAAQ;AAC1C,kBAAQ,iBAAiB,cAAc;AAAA,QACzC;AACA,gBAAQ,UAAU,cAAc;AAChC,gBAAQ,WAAW,cAAc;AACjC,gBAAQ,aAAa,cAAc;AACnC,gBAAQ,OAAO;AAAA,MACjB;AACA,cAAQ,UAAU;AAAA,IACpB;AAKA,IAAAA,cAAa,UAAU,4BAA4B,SAAU,eAAe;AAC1E,WAAK,sBAAsB,KAAK,SAAS,CAAC;AAC1C,UAAI,KAAK,OAAO;AACd,YAAI,QAAQ,KAAK,MAAM,SAAS;AAEhC,YAAI,UAAU;AACd,YAAI,OAAO,UAAU,UAAU;AAC7B,kBAAQ,QAAQ,KAAK;AAAA,QACvB;AACA,YAAI,UAAU,MAAM;AAClB,oBAAU;AAAA,QACZ,WAAW,MAAM,QAAQ,KAAK,GAAG;AAC/B,oBAAU,MAAM,WAAW,IAAI,MAAM,CAAC,IAAI;AAAA,QAC5C;AACA,YAAI,YAAY,GAAG;AAGjB,cAAI,UAAU,sBAAsB,cAAc,MAAM,cAAc,IAAI;AAC1E,eAAK,sBAAsB,QAAQ;AACnC,eAAK,wBAAwB,eAAe,SAAS,GAAG,CAAC;AAAA,QAC3D;AAAA,MACF;AAAA,IACF;AAQA,IAAAA,cAAa,UAAU,0BAA0B,SAAU,eAAe,SAAS,GAAG,GAAG;AAEvF,cAAQ,UAAU,GAAG,CAAC;AACtB,cAAQ,UAAU;AAClB,UAAI,SAAS,KAAK;AAClB,UAAI,WAAW,UAAU;AACvB,gBAAQ,IAAI,cAAc,OAAO,GAAG,cAAc,OAAO,GAAG,KAAK,SAAS,GAAG,IAAI,KAAK,IAAI,IAAI;AAAA,MAChG,OAAO;AACL,YAAI,UAAU,KAAK,aAAa,SAAY,KAAK,WAAW,KAAK;AACjE,YAAI,YAAY,KAAK,SAAS;AAC5B,mBAAS,IAAI;AAAA,QACf;AACA,YAAI,IAAI,QACN,UAAU,QACV,SAAS;AACX,aAAK,IAAI,GAAG,KAAK,QAAQ,KAAK;AAC5B,mBAAS,IAAI,IAAI,KAAK,KAAK,SAAS,KAAK,KAAK,IAAI,KAAK;AACvD,oBAAU,IAAI,MAAM,IAAI,KAAK,UAAU;AACvC,kBAAQ,OAAO,cAAc,OAAO,IAAI,UAAU,KAAK,IAAI,MAAM,GAAG,cAAc,OAAO,IAAI,UAAU,KAAK,IAAI,MAAM,CAAC;AAAA,QACzH;AAAA,MACF;AACA,cAAQ,YAAY;AACpB,cAAQ,KAAK;AACb,UAAI,KAAK,SAAS;AAChB,gBAAQ,cAAc,cAAc;AACpC,gBAAQ,YAAY,cAAc;AAClC,YAAI,cAAc,UAAU;AAC1B,kBAAQ,YAAY,cAAc,QAAQ;AAC1C,kBAAQ,iBAAiB,cAAc;AAAA,QACzC;AACA,gBAAQ,OAAO;AAAA,MACjB;AACA,cAAQ,UAAU;AAAA,IACpB;AACA,WAAOA;AAAA,EACT,EAAE,aAAU;AAAA;AACZ,IAAO,uBAAQ;;;AC5ef,IAAIC,aAAsC,2BAAY;AACpD,MAAI,gBAAgB,SAAU,GAAG,GAAG;AAClC,oBAAgB,OAAO,kBAAkB;AAAA,MACvC,WAAW,CAAC;AAAA,IACd,aAAa,SAAS,SAAUC,IAAGC,IAAG;AACpC,MAAAD,GAAE,YAAYC;AAAA,IAChB,KAAK,SAAUD,IAAGC,IAAG;AACnB,eAAS,KAAKA,GAAG,KAAI,OAAO,UAAU,eAAe,KAAKA,IAAG,CAAC,EAAG,CAAAD,GAAE,CAAC,IAAIC,GAAE,CAAC;AAAA,IAC7E;AACA,WAAO,cAAc,GAAG,CAAC;AAAA,EAC3B;AACA,SAAO,SAAU,GAAG,GAAG;AACrB,kBAAc,GAAG,CAAC;AAClB,aAAS,KAAK;AACZ,WAAK,cAAc;AAAA,IACrB;AACA,MAAE,YAAY,MAAM,OAAO,OAAO,OAAO,CAAC,KAAK,GAAG,YAAY,EAAE,WAAW,IAAI,GAAG;AAAA,EACpF;AACF,EAAE;AAoBF,IAAI;AAAA;AAAA,EAA2B,SAAU,QAAQ;AAC/C,IAAAF,WAAUG,cAAa,MAAM;AAI7B,aAASA,aAAY,aAAa;AAChC,UAAI,QAAQ;AACZ,UAAI,UAAU,cAAc,cAAc,CAAC;AAC3C,cAAQ,OAAO,KAAK,MAAM;AAAA,QACxB,QAAQ;AAAA,QACR,MAAM,QAAQ;AAAA,QACd,QAAQ,QAAQ;AAAA,QAChB,QAAQ,QAAQ;AAAA,QAChB,OAAO,QAAQ,UAAU,SAAY,QAAQ,QAAQ;AAAA,QACrD,UAAU,QAAQ,aAAa,SAAY,QAAQ,WAAW;AAAA,QAC9D,gBAAgB,QAAQ,mBAAmB,SAAY,QAAQ,iBAAiB;AAAA,QAChF,cAAc,QAAQ,iBAAiB,SAAY,QAAQ,eAAe,CAAC,GAAG,CAAC;AAAA,MACjF,CAAC,KAAK;AACN,aAAO;AAAA,IACT;AAMA,IAAAA,aAAY,UAAU,QAAQ,WAAY;AACxC,UAAI,QAAQ,KAAK,SAAS;AAC1B,UAAI,QAAQ,IAAIA,aAAY;AAAA,QAC1B,MAAM,KAAK,QAAQ,IAAI,KAAK,QAAQ,EAAE,MAAM,IAAI;AAAA,QAChD,QAAQ,KAAK,UAAU,IAAI,KAAK,UAAU,EAAE,MAAM,IAAI;AAAA,QACtD,QAAQ,KAAK,UAAU;AAAA,QACvB,OAAO,MAAM,QAAQ,KAAK,IAAI,MAAM,MAAM,IAAI;AAAA,QAC9C,UAAU,KAAK,YAAY;AAAA,QAC3B,gBAAgB,KAAK,kBAAkB;AAAA,QACvC,cAAc,KAAK,gBAAgB,EAAE,MAAM;AAAA,MAC7C,CAAC;AACD,YAAM,WAAW,KAAK,WAAW,CAAC;AAClC,aAAO;AAAA,IACT;AAOA,IAAAA,aAAY,UAAU,YAAY,SAAU,QAAQ;AAClD,WAAK,UAAU;AACf,WAAK,OAAO;AAAA,IACd;AACA,WAAOA;AAAA,EACT,EAAE,oBAAY;AAAA;AACd,IAAO,iBAAQ;;;AC9Ef,IAAI;AAAA;AAAA,EAAoB,WAAY;AAIlC,aAASC,MAAK,aAAa;AACzB,UAAI,UAAU,eAAe,CAAC;AAK9B,WAAK,SAAS,QAAQ,UAAU,SAAY,QAAQ,QAAQ;AAAA,IAC9D;AAMA,IAAAA,MAAK,UAAU,QAAQ,WAAY;AACjC,UAAI,QAAQ,KAAK,SAAS;AAC1B,aAAO,IAAIA,MAAK;AAAA,QACd,OAAO,MAAM,QAAQ,KAAK,IAAI,MAAM,MAAM,IAAI,SAAS;AAAA,MACzD,CAAC;AAAA,IACH;AAMA,IAAAA,MAAK,UAAU,WAAW,WAAY;AACpC,aAAO,KAAK;AAAA,IACd;AAOA,IAAAA,MAAK,UAAU,WAAW,SAAU,OAAO;AACzC,WAAK,SAAS;AAAA,IAChB;AACA,WAAOA;AAAA,EACT,EAAE;AAAA;AACF,IAAO,eAAQ;;;ACjDf,IAAO,qBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,EAKb,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,EAKb,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,EAKd,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKV,WAAW;AACb;;;ACzBA,IAAIC,aAAsC,2BAAY;AACpD,MAAI,gBAAgB,SAAU,GAAG,GAAG;AAClC,oBAAgB,OAAO,kBAAkB;AAAA,MACvC,WAAW,CAAC;AAAA,IACd,aAAa,SAAS,SAAUC,IAAGC,IAAG;AACpC,MAAAD,GAAE,YAAYC;AAAA,IAChB,KAAK,SAAUD,IAAGC,IAAG;AACnB,eAAS,KAAKA,GAAG,KAAI,OAAO,UAAU,eAAe,KAAKA,IAAG,CAAC,EAAG,CAAAD,GAAE,CAAC,IAAIC,GAAE,CAAC;AAAA,IAC7E;AACA,WAAO,cAAc,GAAG,CAAC;AAAA,EAC3B;AACA,SAAO,SAAU,GAAG,GAAG;AACrB,kBAAc,GAAG,CAAC;AAClB,aAAS,KAAK;AACZ,WAAK,cAAc;AAAA,IACrB;AACA,MAAE,YAAY,MAAM,OAAO,OAAO,OAAO,CAAC,KAAK,GAAG,YAAY,EAAE,WAAW,IAAI,GAAG;AAAA,EACpF;AACF,EAAE;AAWF,IAAI,qBAAqB;AACzB,IAAI;AAAA;AAAA,EAAyB,SAAU,QAAQ;AAC7C,IAAAF,WAAUG,YAAW,MAAM;AAS3B,aAASA,WAAU,OAAO,KAAK,MAAM,aAAa,YAAY,OAAO;AACnE,UAAI,QAAQ,OAAO,KAAK,IAAI,KAAK;AAKjC,YAAM,qBAAqB;AAK3B,YAAM,SAAS,CAAC,QAAQ,IAAI,MAAM,IAAI;AACtC,UAAI,gBAAgB,MAAM;AACO,cAAM,OAAO,cAAc;AAAA,MAC5D;AAKA,YAAM,UAAU,CAAC;AAKjB,YAAM,SAAS;AAKf,YAAM,YAAY;AAKlB,YAAM,cAAc;AAKpB,YAAM,QAAQ;AAKd,YAAM,OAAO;AAIb,YAAM;AACN,aAAO;AAAA,IACT;AAKA,IAAAA,WAAU,UAAU,aAAa,WAAY;AAC3C,UAAI,KAAK,aAAa,UAAa,KAAK,gBAAgB,mBAAW,QAAQ;AACzE,YAAI,CAAC,oBAAoB;AACvB,+BAAqB,sBAAsB,GAAG,CAAC;AAAA,QACjD;AACA,2BAAmB,UAAU,KAAK,QAAQ,GAAG,CAAC;AAC9C,YAAI;AACF,6BAAmB,aAAa,GAAG,GAAG,GAAG,CAAC;AAC1C,eAAK,WAAW;AAAA,QAClB,SAAS,GAAG;AACV,+BAAqB;AACrB,eAAK,WAAW;AAAA,QAClB;AAAA,MACF;AACA,aAAO,KAAK,aAAa;AAAA,IAC3B;AAIA,IAAAA,WAAU,UAAU,uBAAuB,WAAY;AACrD,WAAK,cAAc,kBAAU,MAAM;AAAA,IACrC;AAIA,IAAAA,WAAU,UAAU,oBAAoB,WAAY;AAClD,WAAK,cAAc,mBAAW;AAC9B,WAAK,eAAe;AACpB,WAAK,qBAAqB;AAAA,IAC5B;AAIA,IAAAA,WAAU,UAAU,mBAAmB,WAAY;AACjD,WAAK,cAAc,mBAAW;AAC9B,UAAI,KAAK,OAAO;AACd,aAAK,OAAO,QAAQ,KAAK,MAAM,CAAC;AAChC,aAAK,OAAO,SAAS,KAAK,MAAM,CAAC;AAAA,MACnC,OAAO;AACL,aAAK,QAAQ,CAAC,KAAK,OAAO,OAAO,KAAK,OAAO,MAAM;AAAA,MACrD;AACA,WAAK,eAAe;AACpB,WAAK,qBAAqB;AAAA,IAC5B;AAKA,IAAAA,WAAU,UAAU,WAAW,SAAU,YAAY;AACnD,WAAK,cAAc,UAAU;AAC7B,aAAO,KAAK,QAAQ,UAAU,IAAI,KAAK,QAAQ,UAAU,IAAI,KAAK;AAAA,IACpE;AAKA,IAAAA,WAAU,UAAU,gBAAgB,SAAU,YAAY;AACxD,WAAK,cAAc,UAAU;AAC7B,aAAO,KAAK,QAAQ,UAAU,IAAI,aAAa;AAAA,IACjD;AAIA,IAAAA,WAAU,UAAU,gBAAgB,WAAY;AAC9C,aAAO,KAAK;AAAA,IACd;AAIA,IAAAA,WAAU,UAAU,uBAAuB,WAAY;AACrD,UAAI,CAAC,KAAK,oBAAoB;AAC5B,YAAI,KAAK,WAAW,GAAG;AACrB,cAAI,QAAQ,KAAK,MAAM,CAAC;AACxB,cAAI,SAAS,KAAK,MAAM,CAAC;AACzB,cAAI,UAAU,sBAAsB,OAAO,MAAM;AACjD,kBAAQ,SAAS,GAAG,GAAG,OAAO,MAAM;AACpC,eAAK,qBAAqB,QAAQ;AAAA,QACpC,OAAO;AACL,eAAK,qBAAqB,KAAK;AAAA,QACjC;AAAA,MACF;AACA,aAAO,KAAK;AAAA,IACd;AAKA,IAAAA,WAAU,UAAU,UAAU,WAAY;AACxC,aAAO,KAAK;AAAA,IACd;AAIA,IAAAA,WAAU,UAAU,SAAS,WAAY;AACvC,aAAO,KAAK;AAAA,IACd;AAIA,IAAAA,WAAU,UAAU,OAAO,WAAY;AACrC,UAAI,KAAK,eAAe,mBAAW,MAAM;AACvC,aAAK,cAAc,mBAAW;AAC9B,YAAI;AAC6B,eAAK,OAAO,MAAM,KAAK;AAAA,QACxD,SAAS,GAAG;AACV,eAAK,kBAAkB;AAAA,QACzB;AACA,aAAK,YAAY,YAAY,KAAK,QAAQ,KAAK,iBAAiB,KAAK,IAAI,GAAG,KAAK,kBAAkB,KAAK,IAAI,CAAC;AAAA,MAC/G;AAAA,IACF;AAKA,IAAAA,WAAU,UAAU,gBAAgB,SAAU,YAAY;AACxD,UAAI,CAAC,KAAK,UAAU,KAAK,QAAQ,UAAU,GAAG;AAC5C;AAAA,MACF;AACA,UAAI,SAAS,SAAS,cAAc,QAAQ;AAC5C,WAAK,QAAQ,UAAU,IAAI;AAC3B,aAAO,QAAQ,KAAK,KAAK,KAAK,OAAO,QAAQ,UAAU;AACvD,aAAO,SAAS,KAAK,KAAK,KAAK,OAAO,SAAS,UAAU;AACzD,UAAI,MAAM,OAAO,WAAW,IAAI;AAChC,UAAI,MAAM,YAAY,UAAU;AAChC,UAAI,UAAU,KAAK,QAAQ,GAAG,CAAC;AAC/B,UAAI,2BAA2B;AAI/B,UAAI,IAAI,6BAA6B,cAAc,KAAK,WAAW,GAAG;AACpE,YAAI,YAAY,SAAS,KAAK,MAAM;AACpC,YAAI,SAAS,GAAG,GAAG,OAAO,OAAO,OAAO,MAAM;AAC9C,YAAI,2BAA2B;AAC/B,YAAI,UAAU,KAAK,QAAQ,GAAG,CAAC;AAAA,MACjC,OAAO;AACL,YAAI,UAAU,IAAI,aAAa,GAAG,GAAG,OAAO,OAAO,OAAO,MAAM;AAChE,YAAI,OAAO,QAAQ;AACnB,YAAI,IAAI,KAAK,OAAO,CAAC,IAAI;AACzB,YAAI,IAAI,KAAK,OAAO,CAAC,IAAI;AACzB,YAAI,IAAI,KAAK,OAAO,CAAC,IAAI;AACzB,YAAI,IAAI,KAAK,OAAO,CAAC;AACrB,iBAAS,IAAI,GAAG,KAAK,KAAK,QAAQ,IAAI,IAAI,KAAK,GAAG;AAChD,eAAK,CAAC,KAAK;AACX,eAAK,IAAI,CAAC,KAAK;AACf,eAAK,IAAI,CAAC,KAAK;AACf,eAAK,IAAI,CAAC,KAAK;AAAA,QACjB;AACA,YAAI,aAAa,SAAS,GAAG,CAAC;AAAA,MAChC;AAAA,IACF;AAMA,IAAAA,WAAU,UAAU,iBAAiB,WAAY;AAC/C,UAAI,KAAK,WAAW;AAClB,aAAK,UAAU;AACf,aAAK,YAAY;AAAA,MACnB;AAAA,IACF;AACA,WAAOA;AAAA,EACT,EAAE,cAAW;AAAA;AAUN,SAAS,IAAI,OAAO,KAAK,MAAM,aAAa,YAAY,OAAO;AACpE,MAAI,YAAY,OAAe,IAAI,KAAK,aAAa,KAAK;AAC1D,MAAI,CAAC,WAAW;AACd,gBAAY,IAAI,UAAU,OAAO,KAAK,MAAM,aAAa,YAAY,KAAK;AAC1E,WAAe,IAAI,KAAK,aAAa,OAAO,SAAS;AAAA,EACvD;AACA,SAAO;AACT;AACA,IAAO,oBAAQ;;;ACtRf,IAAIC,aAAsC,2BAAY;AACpD,MAAI,gBAAgB,SAAU,GAAG,GAAG;AAClC,oBAAgB,OAAO,kBAAkB;AAAA,MACvC,WAAW,CAAC;AAAA,IACd,aAAa,SAAS,SAAUC,IAAGC,IAAG;AACpC,MAAAD,GAAE,YAAYC;AAAA,IAChB,KAAK,SAAUD,IAAGC,IAAG;AACnB,eAAS,KAAKA,GAAG,KAAI,OAAO,UAAU,eAAe,KAAKA,IAAG,CAAC,EAAG,CAAAD,GAAE,CAAC,IAAIC,GAAE,CAAC;AAAA,IAC7E;AACA,WAAO,cAAc,GAAG,CAAC;AAAA,EAC3B;AACA,SAAO,SAAU,GAAG,GAAG;AACrB,kBAAc,GAAG,CAAC;AAClB,aAAS,KAAK;AACZ,WAAK,cAAc;AAAA,IACrB;AACA,MAAE,YAAY,MAAM,OAAO,OAAO,OAAO,CAAC,KAAK,GAAG,YAAY,EAAE,WAAW,IAAI,GAAG;AAAA,EACpF;AACF,EAAE;AAoDF,IAAI;AAAA;AAAA,EAAoB,SAAU,QAAQ;AACxC,IAAAF,WAAUG,OAAM,MAAM;AAItB,aAASA,MAAK,aAAa;AACzB,UAAI,QAAQ;AACZ,UAAI,UAAU,eAAe,CAAC;AAI9B,UAAI,UAAU,QAAQ,YAAY,SAAY,QAAQ,UAAU;AAIhE,UAAI,WAAW,QAAQ,aAAa,SAAY,QAAQ,WAAW;AAInE,UAAI,QAAQ,QAAQ,UAAU,SAAY,QAAQ,QAAQ;AAI1D,UAAI,iBAAiB,QAAQ,mBAAmB,SAAY,QAAQ,iBAAiB;AACrF,cAAQ,OAAO,KAAK,MAAM;AAAA,QACxB;AAAA,QACA;AAAA,QACA;AAAA,QACA,cAAc,QAAQ,iBAAiB,SAAY,QAAQ,eAAe,CAAC,GAAG,CAAC;AAAA,QAC/E;AAAA,MACF,CAAC,KAAK;AAKN,YAAM,UAAU,QAAQ,WAAW,SAAY,QAAQ,SAAS,CAAC,KAAK,GAAG;AAKzE,YAAM,oBAAoB;AAK1B,YAAM,gBAAgB,QAAQ,iBAAiB,SAAY,QAAQ,eAAe,mBAAW;AAK7F,YAAM,gBAAgB,QAAQ,iBAAiB,SAAY,QAAQ,eAAe,wBAAgB;AAKlG,YAAM,gBAAgB,QAAQ,iBAAiB,SAAY,QAAQ,eAAe,wBAAgB;AAKlG,YAAM,eAAe,QAAQ,gBAAgB,SAAY,QAAQ,cAAc;AAI/E,UAAI,QAAQ,QAAQ,QAAQ,SAAY,QAAQ,MAAM;AAItD,UAAI,UAAU,QAAQ,YAAY,SAAY,QAAQ,UAAU;AAIhE,UAAI,MAAM,QAAQ;AAClB,aAAO,EAAE,QAAQ,UAAa,QAAQ,CAAC;AACvC,aAAO,CAAC,SAAS,SAAS,SAAS,CAAC;AACpC,WAAK,QAAQ,UAAa,IAAI,WAAW,MAAM,OAAO;AACpD;AAAA,QAAqC,MAAM,OAAO,OAAO,KAAK;AAAA,MAChE;AACA,aAAO,QAAQ,UAAa,IAAI,SAAS,GAAG,CAAC;AAI7C,UAAI,aAAa,QAAQ,QAAQ,SAAY,mBAAW,OAAO,mBAAW;AAK1E,YAAM,SAAS,QAAQ,UAAU,SAAY,QAAQ,QAAQ,KAAK,IAAI;AAKtE,YAAM,aAAa;AAAA,QAAa;AAAA;AAAA,QAA4B;AAAA,QAAK;AAAA,QAAS,MAAM;AAAA,QAAc;AAAA,QAAY,MAAM;AAAA,MAAM;AAKtH,YAAM,UAAU,QAAQ,WAAW,SAAY,QAAQ,SAAS,CAAC,GAAG,CAAC;AAKrE,YAAM,gBAAgB,QAAQ,iBAAiB,SAAY,QAAQ,eAAe,mBAAW;AAK7F,YAAM,UAAU;AAKhB,YAAM,QAAQ,QAAQ,SAAS,SAAY,QAAQ,OAAO;AAC1D,aAAO;AAAA,IACT;AAMA,IAAAA,MAAK,UAAU,QAAQ,WAAY;AACjC,UAAI,QAAQ,KAAK,SAAS;AAC1B,aAAO,IAAIA,MAAK;AAAA,QACd,QAAQ,KAAK,QAAQ,MAAM;AAAA,QAC3B,cAAc,KAAK;AAAA,QACnB,cAAc,KAAK;AAAA,QACnB,cAAc,KAAK;AAAA,QACnB,aAAa,KAAK;AAAA,QAClB,OAAO,KAAK,UAAU,KAAK,OAAO,QAAQ,KAAK,OAAO,MAAM,IAAI,KAAK,UAAU;AAAA,QAC/E,KAAK,KAAK,OAAO;AAAA,QACjB,QAAQ,KAAK,QAAQ,MAAM;AAAA,QAC3B,cAAc,KAAK;AAAA,QACnB,MAAM,KAAK,UAAU,OAAO,KAAK,MAAM,MAAM,IAAI;AAAA,QACjD,SAAS,KAAK,WAAW;AAAA,QACzB,OAAO,MAAM,QAAQ,KAAK,IAAI,MAAM,MAAM,IAAI;AAAA,QAC9C,UAAU,KAAK,YAAY;AAAA,QAC3B,gBAAgB,KAAK,kBAAkB;AAAA,MACzC,CAAC;AAAA,IACH;AAOA,IAAAA,MAAK,UAAU,YAAY,WAAY;AACrC,UAAI,KAAK,mBAAmB;AAC1B,eAAO,KAAK;AAAA,MACd;AACA,UAAI,SAAS,KAAK;AAClB,UAAI,OAAO,KAAK,QAAQ;AACxB,UAAI,KAAK,iBAAiB,wBAAgB,YAAY,KAAK,iBAAiB,wBAAgB,UAAU;AACpG,YAAI,CAAC,MAAM;AACT,iBAAO;AAAA,QACT;AACA,iBAAS,KAAK,QAAQ,MAAM;AAC5B,YAAI,KAAK,iBAAiB,wBAAgB,UAAU;AAClD,iBAAO,CAAC,KAAK,KAAK,CAAC;AAAA,QACrB;AACA,YAAI,KAAK,iBAAiB,wBAAgB,UAAU;AAClD,iBAAO,CAAC,KAAK,KAAK,CAAC;AAAA,QACrB;AAAA,MACF;AACA,UAAI,KAAK,iBAAiB,mBAAW,UAAU;AAC7C,YAAI,CAAC,MAAM;AACT,iBAAO;AAAA,QACT;AACA,YAAI,WAAW,KAAK,SAAS;AAC3B,mBAAS,KAAK,QAAQ,MAAM;AAAA,QAC9B;AACA,YAAI,KAAK,iBAAiB,mBAAW,aAAa,KAAK,iBAAiB,mBAAW,cAAc;AAC/F,iBAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK,CAAC;AAAA,QACjC;AACA,YAAI,KAAK,iBAAiB,mBAAW,eAAe,KAAK,iBAAiB,mBAAW,cAAc;AACjG,iBAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK,CAAC;AAAA,QACjC;AAAA,MACF;AACA,WAAK,oBAAoB;AACzB,aAAO,KAAK;AAAA,IACd;AAQA,IAAAA,MAAK,UAAU,YAAY,SAAU,QAAQ;AAC3C,WAAK,UAAU;AACf,WAAK,oBAAoB;AAAA,IAC3B;AAMA,IAAAA,MAAK,UAAU,WAAW,WAAY;AACpC,aAAO,KAAK;AAAA,IACd;AAOA,IAAAA,MAAK,UAAU,WAAW,SAAU,YAAY;AAC9C,aAAO,KAAK,WAAW,SAAS,UAAU;AAAA,IAC5C;AAOA,IAAAA,MAAK,UAAU,gBAAgB,SAAU,YAAY;AACnD,aAAO,KAAK,WAAW,cAAc,UAAU;AAAA,IACjD;AAIA,IAAAA,MAAK,UAAU,eAAe,WAAY;AACxC,aAAO,KAAK,WAAW,QAAQ;AAAA,IACjC;AAIA,IAAAA,MAAK,UAAU,2BAA2B,WAAY;AACpD,aAAO,KAAK,aAAa;AAAA,IAC3B;AAIA,IAAAA,MAAK,UAAU,gBAAgB,WAAY;AACzC,aAAO,KAAK,WAAW,cAAc;AAAA,IACvC;AAIA,IAAAA,MAAK,UAAU,uBAAuB,WAAY;AAChD,aAAO,KAAK,WAAW,qBAAqB;AAAA,IAC9C;AAMA,IAAAA,MAAK,UAAU,YAAY,WAAY;AACrC,UAAI,KAAK,SAAS;AAChB,eAAO,KAAK;AAAA,MACd;AACA,UAAI,SAAS,KAAK;AAClB,UAAI,eAAe,KAAK,gBAAgB;AACxC,UAAI,KAAK,iBAAiB,mBAAW,UAAU;AAC7C,YAAI,OAAO,KAAK,QAAQ;AACxB,YAAI,gBAAgB,KAAK,WAAW,QAAQ;AAC5C,YAAI,CAAC,QAAQ,CAAC,eAAe;AAC3B,iBAAO;AAAA,QACT;AACA,iBAAS,OAAO,MAAM;AACtB,YAAI,KAAK,iBAAiB,mBAAW,aAAa,KAAK,iBAAiB,mBAAW,cAAc;AAC/F,iBAAO,CAAC,IAAI,cAAc,CAAC,IAAI,KAAK,CAAC,IAAI,OAAO,CAAC;AAAA,QACnD;AACA,YAAI,KAAK,iBAAiB,mBAAW,eAAe,KAAK,iBAAiB,mBAAW,cAAc;AACjG,iBAAO,CAAC,IAAI,cAAc,CAAC,IAAI,KAAK,CAAC,IAAI,OAAO,CAAC;AAAA,QACnD;AAAA,MACF;AACA,aAAO,CAAC,KAAK,aAAa,CAAC;AAC3B,aAAO,CAAC,KAAK,aAAa,CAAC;AAC3B,WAAK,UAAU;AACf,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,MAAK,UAAU,SAAS,WAAY;AAClC,aAAO,KAAK,WAAW,OAAO;AAAA,IAChC;AAMA,IAAAA,MAAK,UAAU,UAAU,WAAY;AACnC,aAAO,CAAC,KAAK,QAAQ,KAAK,WAAW,QAAQ,IAAI,KAAK;AAAA,IACxD;AAIA,IAAAA,MAAK,UAAU,oBAAoB,SAAU,UAAU;AACrD,WAAK,WAAW,iBAAiB,kBAAU,QAAQ,QAAQ;AAAA,IAC7D;AAQA,IAAAA,MAAK,UAAU,OAAO,WAAY;AAChC,WAAK,WAAW,KAAK;AAAA,IACvB;AAIA,IAAAA,MAAK,UAAU,sBAAsB,SAAU,UAAU;AACvD,WAAK,WAAW,oBAAoB,kBAAU,QAAQ,QAAQ;AAAA,IAChE;AACA,WAAOA;AAAA,EACT,EAAE,aAAU;AAAA;AACZ,IAAO,eAAQ;;;ACpWf,IAAI;AAAA;AAAA,EAAsB,WAAY;AAIpC,aAASC,QAAO,aAAa;AAC3B,UAAI,UAAU,eAAe,CAAC;AAK9B,WAAK,SAAS,QAAQ,UAAU,SAAY,QAAQ,QAAQ;AAK5D,WAAK,WAAW,QAAQ;AAKxB,WAAK,YAAY,QAAQ,aAAa,SAAY,QAAQ,WAAW;AAKrE,WAAK,kBAAkB,QAAQ;AAK/B,WAAK,YAAY,QAAQ;AAKzB,WAAK,cAAc,QAAQ;AAK3B,WAAK,SAAS,QAAQ;AAAA,IACxB;AAMA,IAAAA,QAAO,UAAU,QAAQ,WAAY;AACnC,UAAI,QAAQ,KAAK,SAAS;AAC1B,aAAO,IAAIA,QAAO;AAAA,QAChB,OAAO,MAAM,QAAQ,KAAK,IAAI,MAAM,MAAM,IAAI,SAAS;AAAA,QACvD,SAAS,KAAK,WAAW;AAAA,QACzB,UAAU,KAAK,YAAY,IAAI,KAAK,YAAY,EAAE,MAAM,IAAI;AAAA,QAC5D,gBAAgB,KAAK,kBAAkB;AAAA,QACvC,UAAU,KAAK,YAAY;AAAA,QAC3B,YAAY,KAAK,cAAc;AAAA,QAC/B,OAAO,KAAK,SAAS;AAAA,MACvB,CAAC;AAAA,IACH;AAMA,IAAAA,QAAO,UAAU,WAAW,WAAY;AACtC,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,QAAO,UAAU,aAAa,WAAY;AACxC,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,QAAO,UAAU,cAAc,WAAY;AACzC,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,QAAO,UAAU,oBAAoB,WAAY;AAC/C,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,QAAO,UAAU,cAAc,WAAY;AACzC,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,QAAO,UAAU,gBAAgB,WAAY;AAC3C,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,QAAO,UAAU,WAAW,WAAY;AACtC,aAAO,KAAK;AAAA,IACd;AAOA,IAAAA,QAAO,UAAU,WAAW,SAAU,OAAO;AAC3C,WAAK,SAAS;AAAA,IAChB;AAOA,IAAAA,QAAO,UAAU,aAAa,SAAU,SAAS;AAC/C,WAAK,WAAW;AAAA,IAClB;AAaA,IAAAA,QAAO,UAAU,cAAc,SAAU,UAAU;AACjD,WAAK,YAAY;AAAA,IACnB;AAOA,IAAAA,QAAO,UAAU,oBAAoB,SAAU,gBAAgB;AAC7D,WAAK,kBAAkB;AAAA,IACzB;AAOA,IAAAA,QAAO,UAAU,cAAc,SAAU,UAAU;AACjD,WAAK,YAAY;AAAA,IACnB;AAOA,IAAAA,QAAO,UAAU,gBAAgB,SAAU,YAAY;AACrD,WAAK,cAAc;AAAA,IACrB;AAOA,IAAAA,QAAO,UAAU,WAAW,SAAU,OAAO;AAC3C,WAAK,SAAS;AAAA,IAChB;AACA,WAAOA;AAAA,EACT,EAAE;AAAA;AACF,IAAO,iBAAQ;;;ACvEf,IAAI;AAAA;AAAA,EAAqB,WAAY;AAInC,aAASC,OAAM,aAAa;AAC1B,UAAI,UAAU,eAAe,CAAC;AAK9B,WAAK,YAAY;AAKjB,WAAK,oBAAoB;AACzB,UAAI,QAAQ,aAAa,QAAW;AAClC,aAAK,YAAY,QAAQ,QAAQ;AAAA,MACnC;AAKA,WAAK,QAAQ,QAAQ,SAAS,SAAY,QAAQ,OAAO;AAKzD,WAAK,SAAS,QAAQ,UAAU,SAAY,QAAQ,QAAQ;AAK5D,WAAK,YAAY,QAAQ,aAAa,SAAY,QAAQ,WAAW;AAKrE,WAAK,UAAU,QAAQ,WAAW,SAAY,QAAQ,SAAS;AAK/D,WAAK,QAAQ,QAAQ,SAAS,SAAY,QAAQ,OAAO;AAKzD,WAAK,UAAU,QAAQ;AAAA,IACzB;AAMA,IAAAA,OAAM,UAAU,QAAQ,WAAY;AAClC,UAAI,WAAW,KAAK,YAAY;AAChC,UAAI,YAAY,OAAO,aAAa,UAAU;AAC5C;AAAA,QAA+D,SAAS,MAAM;AAAA,MAChF;AACA,aAAO,IAAIA,OAAM;AAAA,QACf;AAAA,QACA,MAAM,KAAK,QAAQ,IAAI,KAAK,QAAQ,EAAE,MAAM,IAAI;AAAA,QAChD,OAAO,KAAK,SAAS,IAAI,KAAK,SAAS,EAAE,MAAM,IAAI;AAAA,QACnD,QAAQ,KAAK,UAAU,IAAI,KAAK,UAAU,EAAE,MAAM,IAAI;AAAA,QACtD,MAAM,KAAK,QAAQ,IAAI,KAAK,QAAQ,EAAE,MAAM,IAAI;AAAA,QAChD,QAAQ,KAAK,UAAU;AAAA,MACzB,CAAC;AAAA,IACH;AAOA,IAAAA,OAAM,UAAU,cAAc,WAAY;AACxC,aAAO,KAAK;AAAA,IACd;AAOA,IAAAA,OAAM,UAAU,cAAc,SAAU,UAAU;AAChD,WAAK,YAAY;AAAA,IACnB;AAQA,IAAAA,OAAM,UAAU,cAAc,WAAY;AACxC,aAAO,KAAK;AAAA,IACd;AAOA,IAAAA,OAAM,UAAU,sBAAsB,WAAY;AAChD,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,OAAM,UAAU,UAAU,WAAY;AACpC,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,OAAM,UAAU,UAAU,SAAU,MAAM;AACxC,WAAK,QAAQ;AAAA,IACf;AAMA,IAAAA,OAAM,UAAU,WAAW,WAAY;AACrC,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,OAAM,UAAU,WAAW,SAAU,OAAO;AAC1C,WAAK,SAAS;AAAA,IAChB;AAMA,IAAAA,OAAM,UAAU,YAAY,WAAY;AACtC,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,OAAM,UAAU,YAAY,SAAU,QAAQ;AAC5C,WAAK,UAAU;AAAA,IACjB;AAMA,IAAAA,OAAM,UAAU,UAAU,WAAY;AACpC,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,OAAM,UAAU,UAAU,SAAU,MAAM;AACxC,WAAK,QAAQ;AAAA,IACf;AAMA,IAAAA,OAAM,UAAU,YAAY,WAAY;AACtC,aAAO,KAAK;AAAA,IACd;AASA,IAAAA,OAAM,UAAU,cAAc,SAAU,UAAU;AAChD,UAAI,OAAO,aAAa,YAAY;AAClC,aAAK,oBAAoB;AAAA,MAC3B,WAAW,OAAO,aAAa,UAAU;AACvC,aAAK,oBAAoB,SAAU,SAAS;AAC1C;AAAA;AAAA,YAA2D,QAAQ,IAAI,QAAQ;AAAA;AAAA,QACjF;AAAA,MACF,WAAW,CAAC,UAAU;AACpB,aAAK,oBAAoB;AAAA,MAC3B,WAAW,aAAa,QAAW;AACjC,aAAK,oBAAoB,WAAY;AACnC;AAAA;AAAA,YAA2D;AAAA;AAAA,QAC7D;AAAA,MACF;AACA,WAAK,YAAY;AAAA,IACnB;AAOA,IAAAA,OAAM,UAAU,YAAY,SAAU,QAAQ;AAC5C,WAAK,UAAU;AAAA,IACjB;AACA,WAAOA;AAAA,EACT,EAAE;AAAA;AASK,SAAS,WAAW,KAAK;AAC9B,MAAI;AACJ,MAAI,OAAO,QAAQ,YAAY;AAC7B,oBAAgB;AAAA,EAClB,OAAO;AAIL,QAAI;AACJ,QAAI,MAAM,QAAQ,GAAG,GAAG;AACtB,iBAAW;AAAA,IACb,OAAO;AACL,aAAO;AAAA,MAAwB,IAAI,cAAe,YAAY,EAAE;AAChE,UAAI;AAAA;AAAA,QAA4B;AAAA;AAChC,iBAAW,CAAC,KAAK;AAAA,IACnB;AACA,oBAAgB,WAAY;AAC1B,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO;AACT;AAIA,IAAI,gBAAgB;AAMb,SAAS,mBAAmB,SAAS,YAAY;AAMtD,MAAI,CAAC,eAAe;AAClB,QAAI,OAAO,IAAI,aAAK;AAAA,MAClB,OAAO;AAAA,IACT,CAAC;AACD,QAAI,SAAS,IAAI,eAAO;AAAA,MACtB,OAAO;AAAA,MACP,OAAO;AAAA,IACT,CAAC;AACD,oBAAgB,CAAC,IAAI,MAAM;AAAA,MACzB,OAAO,IAAI,eAAY;AAAA,QACrB;AAAA,QACA;AAAA,QACA,QAAQ;AAAA,MACV,CAAC;AAAA,MACD;AAAA,MACA;AAAA,IACF,CAAC,CAAC;AAAA,EACJ;AACA,SAAO;AACT;AAKO,SAAS,qBAAqB;AAEnC,MAAI,SAAS,CAAC;AACd,MAAI,QAAQ,CAAC,KAAK,KAAK,KAAK,CAAC;AAC7B,MAAI,OAAO,CAAC,GAAG,KAAK,KAAK,CAAC;AAC1B,MAAI,QAAQ;AACZ,SAAO,qBAAa,OAAO,IAAI,CAAC,IAAI,MAAM;AAAA,IACxC,MAAM,IAAI,aAAK;AAAA,MACb,OAAO,CAAC,KAAK,KAAK,KAAK,GAAG;AAAA,IAC5B,CAAC;AAAA,EACH,CAAC,CAAC;AACF,SAAO,qBAAa,aAAa,IAAI,OAAO,qBAAa,OAAO;AAChE,SAAO,qBAAa,WAAW,IAAI,CAAC,IAAI,MAAM;AAAA,IAC5C,QAAQ,IAAI,eAAO;AAAA,MACjB,OAAO;AAAA,MACP,OAAO,QAAQ;AAAA,IACjB,CAAC;AAAA,EACH,CAAC,GAAG,IAAI,MAAM;AAAA,IACZ,QAAQ,IAAI,eAAO;AAAA,MACjB,OAAO;AAAA,MACP;AAAA,IACF,CAAC;AAAA,EACH,CAAC,CAAC;AACF,SAAO,qBAAa,iBAAiB,IAAI,OAAO,qBAAa,WAAW;AACxE,SAAO,qBAAa,MAAM,IAAI,OAAO,qBAAa,OAAO,EAAE,OAAO,OAAO,qBAAa,WAAW,CAAC;AAClG,SAAO,qBAAa,KAAK,IAAI,CAAC,IAAI,MAAM;AAAA,IACtC,OAAO,IAAI,eAAY;AAAA,MACrB,QAAQ,QAAQ;AAAA,MAChB,MAAM,IAAI,aAAK;AAAA,QACb,OAAO;AAAA,MACT,CAAC;AAAA,MACD,QAAQ,IAAI,eAAO;AAAA,QACjB,OAAO;AAAA,QACP,OAAO,QAAQ;AAAA,MACjB,CAAC;AAAA,IACH,CAAC;AAAA,IACD,QAAQ;AAAA,EACV,CAAC,CAAC;AACF,SAAO,qBAAa,WAAW,IAAI,OAAO,qBAAa,KAAK;AAC5D,SAAO,qBAAa,mBAAmB,IAAI,OAAO,qBAAa,OAAO,EAAE,OAAO,OAAO,qBAAa,WAAW,GAAG,OAAO,qBAAa,KAAK,CAAC;AAC3I,SAAO;AACT;AAMA,SAAS,wBAAwB,SAAS;AACxC,SAAO,QAAQ,YAAY;AAC7B;AACA,IAAO,gBAAQ;;;AC9cf,IAAO,wBAAQ;AAAA,EACb,OAAO;AAAA,EACP,MAAM;AACR;;;ACDA,IAAI,qBAAqB;AAmCzB,IAAI;AAAA;AAAA,EAAoB,WAAY;AAIlC,aAASC,MAAK,aAAa;AACzB,UAAI,UAAU,eAAe,CAAC;AAK9B,WAAK,QAAQ,QAAQ;AAKrB,WAAK,YAAY,QAAQ;AAKzB,WAAK,kBAAkB,QAAQ;AAK/B,WAAK,SAAS,QAAQ;AAKtB,WAAK,cAAc,OAAO,QAAQ,UAAU,SAAY,QAAQ,QAAQ,CAAC;AAKzE,WAAK,QAAQ,QAAQ;AAKrB,WAAK,aAAa,QAAQ;AAK1B,WAAK,gBAAgB,QAAQ;AAK7B,WAAK,QAAQ,QAAQ,SAAS,SAAY,QAAQ,OAAO,IAAI,aAAK;AAAA,QAChE,OAAO;AAAA,MACT,CAAC;AAKD,WAAK,YAAY,QAAQ,aAAa,SAAY,QAAQ,WAAW,KAAK,KAAK;AAK/E,WAAK,aAAa,QAAQ,cAAc,SAAY,QAAQ,YAAY,sBAAc;AAKtF,WAAK,YAAY,CAAC,CAAC,QAAQ;AAK3B,WAAK,UAAU,QAAQ,WAAW,SAAY,QAAQ,SAAS;AAK/D,WAAK,WAAW,QAAQ,YAAY,SAAY,QAAQ,UAAU;AAKlE,WAAK,WAAW,QAAQ,YAAY,SAAY,QAAQ,UAAU;AAKlE,WAAK,kBAAkB,QAAQ,iBAAiB,QAAQ,iBAAiB;AAKzE,WAAK,oBAAoB,QAAQ,mBAAmB,QAAQ,mBAAmB;AAK/E,WAAK,WAAW,QAAQ,YAAY,SAAY,OAAO,QAAQ;AAAA,IACjE;AAMA,IAAAA,MAAK,UAAU,QAAQ,WAAY;AACjC,UAAI,QAAQ,KAAK,SAAS;AAC1B,aAAO,IAAIA,MAAK;AAAA,QACd,MAAM,KAAK,QAAQ;AAAA,QACnB,WAAW,KAAK,aAAa;AAAA,QAC7B,UAAU,KAAK,YAAY;AAAA,QAC3B,UAAU,KAAK,YAAY;AAAA,QAC3B,UAAU,KAAK,YAAY;AAAA,QAC3B,gBAAgB,KAAK,kBAAkB;AAAA,QACvC,OAAO,MAAM,QAAQ,KAAK,IAAI,MAAM,MAAM,IAAI;AAAA,QAC9C,MAAM,KAAK,QAAQ;AAAA,QACnB,WAAW,KAAK,aAAa;AAAA,QAC7B,cAAc,KAAK,gBAAgB;AAAA,QACnC,MAAM,KAAK,QAAQ,IAAI,KAAK,QAAQ,EAAE,MAAM,IAAI;AAAA,QAChD,QAAQ,KAAK,UAAU,IAAI,KAAK,UAAU,EAAE,MAAM,IAAI;AAAA,QACtD,SAAS,KAAK,WAAW;AAAA,QACzB,SAAS,KAAK,WAAW;AAAA,QACzB,gBAAgB,KAAK,kBAAkB,IAAI,KAAK,kBAAkB,EAAE,MAAM,IAAI;AAAA,QAC9E,kBAAkB,KAAK,oBAAoB,IAAI,KAAK,oBAAoB,EAAE,MAAM,IAAI;AAAA,QACpF,SAAS,KAAK,WAAW;AAAA,MAC3B,CAAC;AAAA,IACH;AAMA,IAAAA,MAAK,UAAU,cAAc,WAAY;AACvC,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,MAAK,UAAU,UAAU,WAAY;AACnC,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,MAAK,UAAU,cAAc,WAAY;AACvC,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,MAAK,UAAU,eAAe,WAAY;AACxC,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,MAAK,UAAU,aAAa,WAAY;AACtC,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,MAAK,UAAU,aAAa,WAAY;AACtC,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,MAAK,UAAU,UAAU,WAAY;AACnC,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,MAAK,UAAU,oBAAoB,WAAY;AAC7C,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,MAAK,UAAU,cAAc,WAAY;AACvC,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,MAAK,UAAU,WAAW,WAAY;AACpC,aAAO,KAAK;AAAA,IACd;AAKA,IAAAA,MAAK,UAAU,gBAAgB,WAAY;AACzC,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,MAAK,UAAU,YAAY,WAAY;AACrC,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,MAAK,UAAU,UAAU,WAAY;AACnC,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,MAAK,UAAU,eAAe,WAAY;AACxC,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,MAAK,UAAU,kBAAkB,WAAY;AAC3C,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,MAAK,UAAU,oBAAoB,WAAY;AAC7C,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,MAAK,UAAU,sBAAsB,WAAY;AAC/C,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,MAAK,UAAU,aAAa,WAAY;AACtC,aAAO,KAAK;AAAA,IACd;AAOA,IAAAA,MAAK,UAAU,cAAc,SAAU,UAAU;AAC/C,WAAK,YAAY;AAAA,IACnB;AAOA,IAAAA,MAAK,UAAU,UAAU,SAAU,MAAM;AACvC,WAAK,QAAQ;AAAA,IACf;AAOA,IAAAA,MAAK,UAAU,cAAc,SAAU,UAAU;AAC/C,WAAK,YAAY;AAAA,IACnB;AAOA,IAAAA,MAAK,UAAU,aAAa,SAAU,SAAS;AAC7C,WAAK,WAAW;AAAA,IAClB;AAOA,IAAAA,MAAK,UAAU,aAAa,SAAU,SAAS;AAC7C,WAAK,WAAW;AAAA,IAClB;AAOA,IAAAA,MAAK,UAAU,eAAe,SAAU,WAAW;AACjD,WAAK,aAAa;AAAA,IACpB;AAOA,IAAAA,MAAK,UAAU,oBAAoB,SAAU,gBAAgB;AAC3D,WAAK,kBAAkB;AAAA,IACzB;AAOA,IAAAA,MAAK,UAAU,UAAU,SAAU,MAAM;AACvC,WAAK,QAAQ;AAAA,IACf;AAOA,IAAAA,MAAK,UAAU,cAAc,SAAU,UAAU;AAC/C,WAAK,YAAY;AAAA,IACnB;AAOA,IAAAA,MAAK,UAAU,WAAW,SAAU,OAAO;AACzC,WAAK,SAAS;AACd,WAAK,cAAc,OAAO,UAAU,SAAY,QAAQ,CAAC;AAAA,IAC3D;AAOA,IAAAA,MAAK,UAAU,YAAY,SAAU,QAAQ;AAC3C,WAAK,UAAU;AAAA,IACjB;AAOA,IAAAA,MAAK,UAAU,UAAU,SAAU,MAAM;AACvC,WAAK,QAAQ;AAAA,IACf;AAOA,IAAAA,MAAK,UAAU,eAAe,SAAU,WAAW;AACjD,WAAK,aAAa;AAAA,IACpB;AAOA,IAAAA,MAAK,UAAU,kBAAkB,SAAU,cAAc;AACvD,WAAK,gBAAgB;AAAA,IACvB;AAOA,IAAAA,MAAK,UAAU,oBAAoB,SAAU,MAAM;AACjD,WAAK,kBAAkB;AAAA,IACzB;AAOA,IAAAA,MAAK,UAAU,sBAAsB,SAAU,QAAQ;AACrD,WAAK,oBAAoB;AAAA,IAC3B;AAOA,IAAAA,MAAK,UAAU,aAAa,SAAU,SAAS;AAC7C,WAAK,WAAW;AAAA,IAClB;AACA,WAAOA;AAAA,EACT,EAAE;AAAA;AACF,IAAO,eAAQ;",
  "names": ["ImageStyle", "d", "b", "RegularShape", "__extends", "d", "b", "CircleStyle", "Fill", "__extends", "d", "b", "IconImage", "__extends", "d", "b", "Icon", "Stroke", "Style", "Text"]
}

{
  "version": 3,
  "sources": ["../../../../../../node_modules/ol/layer/BaseVector.js", "../../../../../../node_modules/ol/render/canvas/Instruction.js", "../../../../../../node_modules/ol/render/VectorContext.js", "../../../../../../node_modules/ol/render/canvas/Builder.js", "../../../../../../node_modules/ol/render/canvas/ImageBuilder.js", "../../../../../../node_modules/ol/render/canvas/LineStringBuilder.js", "../../../../../../node_modules/ol/render/canvas/PolygonBuilder.js", "../../../../../../node_modules/ol/geom/flat/straightchunk.js", "../../../../../../node_modules/ol/render/canvas/TextBuilder.js", "../../../../../../node_modules/ol/render/canvas/BuilderGroup.js", "../../../../../../node_modules/ol/render/canvas/BuilderType.js", "../../../../../../node_modules/ol/geom/flat/textpath.js", "../../../../../../node_modules/ol/geom/flat/length.js", "../../../../../../node_modules/ol/render/canvas/Executor.js", "../../../../../../node_modules/ol/render/canvas/ExecutorGroup.js", "../../../../../../node_modules/ol/render/canvas/Immediate.js", "../../../../../../node_modules/ol/render/canvas/hitdetect.js", "../../../../../../node_modules/ol/renderer/vector.js", "../../../../../../node_modules/ol/renderer/canvas/VectorLayer.js", "../../../../../../node_modules/ol/layer/Vector.js"],
  "sourcesContent": ["var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport { assign } from '../obj.js';\nimport { createDefaultStyle, toFunction as toStyleFunction } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nvar BaseVectorLayer = /** @class */function (_super) {\n  __extends(BaseVectorLayer, _super);\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  function BaseVectorLayer(opt_options) {\n    var _this = this;\n    var options = opt_options ? opt_options : {};\n    var baseOptions = assign({}, options);\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    _this = _super.call(this, baseOptions) || this;\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n    /**\n     * @type {number}\n     * @private\n     */\n    _this.renderBuffer_ = options.renderBuffer !== undefined ? options.renderBuffer : 100;\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    _this.style_ = null;\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    _this.styleFunction_ = undefined;\n    _this.setStyle(options.style);\n    /**\n     * @type {boolean}\n     * @private\n     */\n    _this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ? options.updateWhileAnimating : false;\n    /**\n     * @type {boolean}\n     * @private\n     */\n    _this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ? options.updateWhileInteracting : false;\n    return _this;\n  }\n  /**\n   * @return {boolean} Declutter.\n   */\n  BaseVectorLayer.prototype.getDeclutter = function () {\n    return this.declutter_;\n  };\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  BaseVectorLayer.prototype.getFeatures = function (pixel) {\n    return _super.prototype.getFeatures.call(this, pixel);\n  };\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  BaseVectorLayer.prototype.getRenderBuffer = function () {\n    return this.renderBuffer_;\n  };\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  BaseVectorLayer.prototype.getRenderOrder = function () {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */this.get(Property.RENDER_ORDER);\n  };\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  BaseVectorLayer.prototype.getStyle = function () {\n    return this.style_;\n  };\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  BaseVectorLayer.prototype.getStyleFunction = function () {\n    return this.styleFunction_;\n  };\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  BaseVectorLayer.prototype.getUpdateWhileAnimating = function () {\n    return this.updateWhileAnimating_;\n  };\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  BaseVectorLayer.prototype.getUpdateWhileInteracting = function () {\n    return this.updateWhileInteracting_;\n  };\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  BaseVectorLayer.prototype.renderDeclutter = function (frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */\n    this.getRenderer().renderDeclutter(frameState);\n  };\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  BaseVectorLayer.prototype.setRenderOrder = function (renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  };\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {(import(\"../style/Style.js\").StyleLike|null)=} opt_style Layer style.\n   * @api\n   */\n  BaseVectorLayer.prototype.setStyle = function (opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ = opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  };\n  return BaseVectorLayer;\n}(Layer);\nexport default BaseVectorLayer;\n", "/**\n * @module ol/render/canvas/Instruction\n */\n/**\n * @enum {number}\n */\nvar Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\nexport default Instruction;\n", "/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */function () {\n  function VectorContext() {}\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  VectorContext.prototype.drawCustom = function (geometry, feature, renderer) {};\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  VectorContext.prototype.drawGeometry = function (geometry) {};\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  VectorContext.prototype.setStyle = function (style) {};\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  VectorContext.prototype.drawCircle = function (circleGeometry, feature) {};\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  VectorContext.prototype.drawFeature = function (feature, style) {};\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) {};\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) {};\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {};\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) {};\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {};\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  VectorContext.prototype.drawPoint = function (pointGeometry, feature) {};\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) {};\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  VectorContext.prototype.drawText = function (geometry, feature) {};\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {};\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText=} opt_declutterImageWithText Shared data for combined decluttering with a text style.\n   */\n  VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterImageWithText) {};\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText=} opt_declutterImageWithText Shared data for combined decluttering with an image style.\n   */\n  VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterImageWithText) {};\n  return VectorContext;\n}();\nexport default VectorContext;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, containsCoordinate, coordinateRelationship } from '../../extent.js';\nimport { defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle } from '../canvas.js';\nimport { equals, reverseSubArray } from '../../array.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray } from '../../geom/flat/inflate.js';\nvar CanvasBuilder = /** @class */function (_super) {\n  __extends(CanvasBuilder, _super);\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n    var _this = _super.call(this) || this;\n    /**\n     * @protected\n     * @type {number}\n     */\n    _this.tolerance = tolerance;\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    _this.maxExtent = maxExtent;\n    /**\n     * @protected\n     * @type {number}\n     */\n    _this.pixelRatio = pixelRatio;\n    /**\n     * @protected\n     * @type {number}\n     */\n    _this.maxLineWidth = 0;\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    _this.resolution = resolution;\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    _this.beginGeometryInstruction1_ = null;\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    _this.beginGeometryInstruction2_ = null;\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    _this.bufferedMaxExtent_ = null;\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    _this.instructions = [];\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    _this.coordinates = [];\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    _this.tmpCoordinate_ = [];\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    _this.hitDetectionInstructions = [];\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */{};\n    return _this;\n  }\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n    var pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function (dash) {\n      return dash * pixelRatio;\n    });\n  };\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  CanvasBuilder.prototype.appendFlatPointCoordinates = function (flatCoordinates, stride) {\n    var extent = this.getBufferedMaxExtent();\n    var tmpCoord = this.tmpCoordinate_;\n    var coordinates = this.coordinates;\n    var myEnd = coordinates.length;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  };\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  CanvasBuilder.prototype.appendFlatLineCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n    var coordinates = this.coordinates;\n    var myEnd = coordinates.length;\n    var extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    var lastXCoord = flatCoordinates[offset];\n    var lastYCoord = flatCoordinates[offset + 1];\n    var nextCoord = this.tmpCoordinate_;\n    var skipped = true;\n    var i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n    // Last coordinate equals first or only one point to append:\n    if (closed && skipped || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  };\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var builderEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  };\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    var type = geometry.getType();\n    var stride = geometry.getStride();\n    var builderBegin = this.coordinates.length;\n    var flatCoordinates, builderEnd, builderEnds, builderEndss;\n    var offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      flatCoordinates = /** @type {import(\"../../geom/MultiPolygon.js\").default} */geometry.getOrientedFlatCoordinates();\n      builderEndss = [];\n      var endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */geometry.getEndss();\n      offset = 0;\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var myEnds = [];\n        offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n        builderEndss.push(myEnds);\n      }\n      this.instructions.push([CanvasInstruction.CUSTOM, builderBegin, builderEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n      builderEnds = [];\n      flatCoordinates = type == GeometryType.POLYGON ? /** @type {import(\"../../geom/Polygon.js\").default} */geometry.getOrientedFlatCoordinates() : geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0, /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */geometry.getEnds(), stride, builderEnds);\n      this.instructions.push([CanvasInstruction.CUSTOM, builderBegin, builderEnds, geometry, renderer, inflateCoordinatesArray]);\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.CIRCLE) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatLineCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n      this.instructions.push([CanvasInstruction.CUSTOM, builderBegin, builderEnd, geometry, renderer, inflateCoordinates]);\n    } else if (type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (builderEnd > builderBegin) {\n        this.instructions.push([CanvasInstruction.CUSTOM, builderBegin, builderEnd, geometry, renderer, inflateCoordinates]);\n      }\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      builderEnd = this.coordinates.length;\n      this.instructions.push([CanvasInstruction.CUSTOM, builderBegin, builderEnd, geometry, renderer]);\n    }\n    this.endGeometry(feature);\n  };\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  CanvasBuilder.prototype.beginGeometry = function (geometry, feature) {\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0, geometry];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0, geometry];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  };\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  CanvasBuilder.prototype.finish = function () {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates\n    };\n  };\n  /**\n   * Reverse the hit detection instructions.\n   */\n  CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n    var hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    var i;\n    var n = hitDetectionInstructions.length;\n    var instruction;\n    var type;\n    var begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */instruction[0];\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  };\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n    var state = this.state;\n    if (fillStyle) {\n      var fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle);\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      var strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle);\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ? strokeStyleLineDash.slice() : defaultLineDash;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ? strokeStyleLineDashOffset : defaultLineDashOffset;\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ? strokeStyleLineJoin : defaultLineJoin;\n      var strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ? strokeStyleMiterLimit : defaultMiterLimit;\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  };\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  CanvasBuilder.prototype.createFill = function (state) {\n    var fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  };\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  CanvasBuilder.prototype.applyStroke = function (state) {\n    this.instructions.push(this.createStroke(state));\n  };\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  CanvasBuilder.prototype.createStroke = function (state) {\n    return [CanvasInstruction.SET_STROKE_STYLE, state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap, state.lineJoin, state.miterLimit, this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio];\n  };\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n    var fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  };\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n    var strokeStyle = state.strokeStyle;\n    var lineCap = state.lineCap;\n    var lineDash = state.lineDash;\n    var lineDashOffset = state.lineDashOffset;\n    var lineJoin = state.lineJoin;\n    var lineWidth = state.lineWidth;\n    var miterLimit = state.miterLimit;\n    if (state.currentStrokeStyle != strokeStyle || state.currentLineCap != lineCap || lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash) || state.currentLineDashOffset != lineDashOffset || state.currentLineJoin != lineJoin || state.currentLineWidth != lineWidth || state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  };\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  CanvasBuilder.prototype.endGeometry = function (feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  };\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        var width = this.resolution * (this.maxLineWidth + 1) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  };\n  return CanvasBuilder;\n}(VectorContext);\nexport default CanvasBuilder;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nvar CanvasImageBuilder = /** @class */function (_super) {\n  __extends(CanvasImageBuilder, _super);\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n    var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    _this.hitDetectionImage_ = null;\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    _this.image_ = null;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    _this.imagePixelRatio_ = undefined;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    _this.anchorX_ = undefined;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    _this.anchorY_ = undefined;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    _this.height_ = undefined;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    _this.opacity_ = undefined;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    _this.originX_ = undefined;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    _this.originY_ = undefined;\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    _this.rotateWithView_ = undefined;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    _this.rotation_ = undefined;\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    _this.scale_ = undefined;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    _this.width_ = undefined;\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    _this.declutterImageWithText_ = undefined;\n    return _this;\n  }\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\n    var stride = pointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_ * this.imagePixelRatio_, this.anchorY_ * this.imagePixelRatio_, Math.ceil(this.height_ * this.imagePixelRatio_), this.opacity_, this.originX_, this.originY_, this.rotateWithView_, this.rotation_, [this.scale_[0] * this.pixelRatio / this.imagePixelRatio_, this.scale_[1] * this.pixelRatio / this.imagePixelRatio_], Math.ceil(this.width_ * this.imagePixelRatio_), this.declutterImageWithText_]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.height_, this.opacity_, this.originX_, this.originY_, this.rotateWithView_, this.rotation_, this.scale_, this.width_, this.declutterImageWithText_]);\n    this.endGeometry(feature);\n  };\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    var stride = multiPointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_ * this.imagePixelRatio_, this.anchorY_ * this.imagePixelRatio_, Math.ceil(this.height_ * this.imagePixelRatio_), this.opacity_, this.originX_, this.originY_, this.rotateWithView_, this.rotation_, [this.scale_[0] * this.pixelRatio / this.imagePixelRatio_, this.scale_[1] * this.pixelRatio / this.imagePixelRatio_], Math.ceil(this.width_ * this.imagePixelRatio_), this.declutterImageWithText_]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.height_, this.opacity_, this.originX_, this.originY_, this.rotateWithView_, this.rotation_, this.scale_, this.width_, this.declutterImageWithText_]);\n    this.endGeometry(feature);\n  };\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  CanvasImageBuilder.prototype.finish = function () {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return _super.prototype.finish.call(this);\n  };\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object=} opt_sharedData Shared data.\n   */\n  CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, opt_sharedData) {\n    var anchor = imageStyle.getAnchor();\n    var size = imageStyle.getSize();\n    var hitDetectionImage = imageStyle.getHitDetectionImage();\n    var image = imageStyle.getImage(this.pixelRatio);\n    var origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  };\n  return CanvasImageBuilder;\n}(CanvasBuilder);\nexport default CanvasImageBuilder;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, strokeInstruction } from './Instruction.js';\nvar CanvasLineStringBuilder = /** @class */function (_super) {\n  __extends(CanvasLineStringBuilder, _super);\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n    return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n  }\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n    var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  };\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([CanvasInstruction.SET_STROKE_STYLE, state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin, state.miterLimit, state.lineDash, state.lineDashOffset], beginPathInstruction);\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  };\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([CanvasInstruction.SET_STROKE_STYLE, state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin, state.miterLimit, state.lineDash, state.lineDashOffset], beginPathInstruction);\n    var ends = multiLineStringGeometry.getEnds();\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(flatCoordinates, offset, /** @type {number} */ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  };\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  CanvasLineStringBuilder.prototype.finish = function () {\n    var state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return _super.prototype.finish.call(this);\n  };\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    _super.prototype.applyStroke.call(this, state);\n    this.instructions.push(beginPathInstruction);\n  };\n  return CanvasLineStringBuilder;\n}(CanvasBuilder);\nexport default CanvasLineStringBuilder;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, closePathInstruction, fillInstruction, strokeInstruction } from './Instruction.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport { snap } from '../../geom/flat/simplify.js';\nvar CanvasPolygonBuilder = /** @class */function (_super) {\n  __extends(CanvasPolygonBuilder, _super);\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n    return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n  }\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\n    var state = this.state;\n    var fill = state.fillStyle !== undefined;\n    var stroke = state.strokeStyle !== undefined;\n    var numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (var i = 0; i < numEnds; ++i) {\n      var end = ends[i];\n      var myBegin = this.coordinates.length;\n      var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  };\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([CanvasInstruction.SET_FILL_STYLE, defaultFillStyle]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([CanvasInstruction.SET_STROKE_STYLE, state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin, state.miterLimit, state.lineDash, state.lineDashOffset]);\n    }\n    var flatCoordinates = circleGeometry.getFlatCoordinates();\n    var stride = circleGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  };\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([CanvasInstruction.SET_FILL_STYLE, defaultFillStyle]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([CanvasInstruction.SET_STROKE_STYLE, state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin, state.miterLimit, state.lineDash, state.lineDashOffset]);\n    }\n    var ends = polygonGeometry.getEnds();\n    var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    var stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, /** @type {Array<number>} */ends, stride);\n    this.endGeometry(feature);\n  };\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([CanvasInstruction.SET_FILL_STYLE, defaultFillStyle]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([CanvasInstruction.SET_STROKE_STYLE, state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin, state.miterLimit, state.lineDash, state.lineDashOffset]);\n    }\n    var endss = multiPolygonGeometry.getEndss();\n    var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    var stride = multiPolygonGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n    this.endGeometry(feature);\n  };\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  CanvasPolygonBuilder.prototype.finish = function () {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    var tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      var coordinates = this.coordinates;\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return _super.prototype.finish.call(this);\n  };\n  /**\n   * @private\n   */\n  CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  };\n  return CanvasPolygonBuilder;\n}(CanvasBuilder);\nexport default CanvasPolygonBuilder;\n", "/**\n * @module ol/geom/flat/straightchunk\n */\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  var chunkStart = offset;\n  var chunkEnd = offset;\n  var chunkM = 0;\n  var m = 0;\n  var start = offset;\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultPadding, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, registerFont } from '../canvas.js';\nimport { getUid } from '../../util.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1\n};\nvar CanvasTextBuilder = /** @class */function (_super) {\n  __extends(CanvasTextBuilder, _super);\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n    var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    _this.labels_ = null;\n    /**\n     * @private\n     * @type {string}\n     */\n    _this.text_ = '';\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.textOffsetX_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.textOffsetY_ = 0;\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    _this.textRotateWithView_ = undefined;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.textRotation_ = 0;\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    _this.textFillState_ = null;\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    _this.fillStates = {};\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    _this.textStrokeState_ = null;\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    _this.strokeStates = {};\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */{};\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    _this.textStates = {};\n    /**\n     * @private\n     * @type {string}\n     */\n    _this.textKey_ = '';\n    /**\n     * @private\n     * @type {string}\n     */\n    _this.fillKey_ = '';\n    /**\n     * @private\n     * @type {string}\n     */\n    _this.strokeKey_ = '';\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    _this.declutterImageWithText_ = undefined;\n    return _this;\n  }\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  CanvasTextBuilder.prototype.finish = function () {\n    var instructions = _super.prototype.finish.call(this);\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  };\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n    var fillState = this.textFillState_;\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    if (this.text_ === '' || !textState || !fillState && !strokeState) {\n      return;\n    }\n    var coordinates = this.coordinates;\n    var begin = coordinates.length;\n    var geometryType = geometry.getType();\n    var flatCoordinates = null;\n    var stride = geometry.getStride();\n    if (textState.placement === TextPlacement.LINE && (geometryType == GeometryType.LINE_STRING || geometryType == GeometryType.MULTI_LINE_STRING || geometryType == GeometryType.POLYGON || geometryType == GeometryType.MULTI_POLYGON)) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      var ends = void 0;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */geometry.getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */geometry.getEnds().slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        var endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */geometry.getEndss();\n        ends = [];\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      var textAlign = textState.textAlign;\n      var flatOffset = 0;\n      var flatEnd = void 0;\n      for (var o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (var i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        var end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      var geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = /** @type {import(\"../../geom/MultiPoint.js\").default} */geometry.getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */geometry.getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */geometry.getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */geometry.getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */geometry.getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */geometry.getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (var i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      var end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      this.saveTextStates_();\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      // adjust padding for negative scale\n      var padding = textState.padding;\n      if (padding != defaultPadding && (textState.scale[0] < 0 || textState.scale[1] < 0)) {\n        var p0 = textState.padding[0];\n        var p1 = textState.padding[1];\n        var p2 = textState.padding[2];\n        var p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      var pixelRatio_1 = this.pixelRatio;\n      this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end, null, NaN, NaN, NaN, 1, 0, 0, this.textRotateWithView_, this.textRotation_, [1, 1], NaN, this.declutterImageWithText_, padding == defaultPadding ? defaultPadding : padding.map(function (p) {\n        return p * pixelRatio_1;\n      }), !!textState.backgroundFill, !!textState.backgroundStroke, this.text_, this.textKey_, this.strokeKey_, this.fillKey_, this.textOffsetX_, this.textOffsetY_, geometryWidths]);\n      var scale = 1 / pixelRatio_1;\n      this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end, null, NaN, NaN, NaN, 1, 0, 0, this.textRotateWithView_, this.textRotation_, [scale, scale], NaN, this.declutterImageWithText_, padding, !!textState.backgroundFill, !!textState.backgroundStroke, this.text_, this.textKey_, this.strokeKey_, this.fillKey_, this.textOffsetX_, this.textOffsetY_, geometryWidths]);\n      this.endGeometry(feature);\n    }\n  };\n  /**\n   * @private\n   */\n  CanvasTextBuilder.prototype.saveTextStates_ = function () {\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    var fillState = this.textFillState_;\n    var strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        };\n      }\n    }\n    var textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale\n      };\n    }\n    var fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle\n        };\n      }\n    }\n  };\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  CanvasTextBuilder.prototype.drawChars_ = function (begin, end) {\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    var strokeKey = this.strokeKey_;\n    var textKey = this.textKey_;\n    var fillKey = this.fillKey_;\n    this.saveTextStates_();\n    var pixelRatio = this.pixelRatio;\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n    var offsetY = this.textOffsetY_ * pixelRatio;\n    var text = this.text_;\n    var strokeWidth = strokeState ? strokeState.lineWidth * Math.abs(textState.scale[0]) / 2 : 0;\n    this.instructions.push([CanvasInstruction.DRAW_CHARS, begin, end, baseline, textState.overflow, fillKey, textState.maxAngle, pixelRatio, offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS, begin, end, baseline, textState.overflow, fillKey, textState.maxAngle, 1, offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio]);\n  };\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object=} opt_sharedData Shared data.\n   */\n  CanvasTextBuilder.prototype.setTextStyle = function (textStyle, opt_sharedData) {\n    var textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */{};\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n      }\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */{};\n          this.textStrokeState_ = strokeState;\n        }\n        var lineDash = textStrokeStyle.getLineDash();\n        var lineDashOffset = textStrokeStyle.getLineDashOffset();\n        var lineWidth = textStrokeStyle.getWidth();\n        var miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset = lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth = lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit = miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n      textState = this.textState_;\n      var font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      var textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n      this.strokeKey_ = strokeState ? (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) + strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth + strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' : '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?') + (textState.textBaseline || '?');\n      this.fillKey_ = fillState ? typeof fillState.fillStyle == 'string' ? fillState.fillStyle : '|' + getUid(fillState.fillStyle) : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  };\n  return CanvasTextBuilder;\n}(CanvasBuilder);\nexport default CanvasTextBuilder;\n", "/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder\n};\nvar BuilderGroup = /** @class */function () {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  BuilderGroup.prototype.finish = function () {\n    var builderInstructions = {};\n    for (var zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      var builders = this.buildersByZIndex_[zKey];\n      for (var builderKey in builders) {\n        var builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  };\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[builderType];\n    if (replay === undefined) {\n      var Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n      replays[builderType] = replay;\n    }\n    return replay;\n  };\n  return BuilderGroup;\n}();\nexport default BuilderGroup;\n", "/**\n * @module ol/render/canvas/BuilderType\n */\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n", "/**\n * @module ol/geom/flat/textpath\n */\nimport { lerp } from '../../math.js';\nimport { rotate } from './transform.js';\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache, rotation) {\n  var x2 = flatCoordinates[offset];\n  var y2 = flatCoordinates[offset + 1];\n  var x1 = 0;\n  var y1 = 0;\n  var segmentLength = 0;\n  var segmentM = 0;\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n  var interpolate = (startM - segmentM) / segmentLength;\n  var beginX = lerp(x1, x2, interpolate);\n  var beginY = lerp(y1, y2, interpolate);\n  var startOffset = offset - stride;\n  var startLength = segmentM;\n  var endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = (endM - segmentM) / segmentLength;\n  var endX = lerp(x1, x2, interpolate);\n  var endY = lerp(y1, y2, interpolate);\n  // Keep text upright\n  var reverse;\n  if (rotation) {\n    var flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n  var PI = Math.PI;\n  var result = [];\n  var singleSegment = startOffset + stride === offset;\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n    var previousAngle_1 = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle_1 += previousAngle_1 > 0 ? -PI : PI;\n    }\n    var x = (endX + beginX) / 2;\n    var y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle_1, text];\n    return result;\n  }\n  var previousAngle;\n  for (var i = 0, ii = text.length; i < ii;) {\n    advance();\n    var angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      var delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n    var iStart = i;\n    var charLength = 0;\n    for (; i < ii; ++i) {\n      var index = reverse ? ii - i - 1 : i;\n      var len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (offset + stride < end && segmentM + segmentLength < startM + charLength + len / 2) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    var chars = reverse ? text.substring(ii - iStart, ii - i) : text.substring(iStart, i);\n    interpolate = (startM + charLength / 2 - segmentM) / segmentLength;\n    var x = lerp(x1, x2, interpolate);\n    var y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n", "/**\n * @module ol/geom/flat/length\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  var length = 0;\n  for (var i = offset + stride; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n", "/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport { TEXT_ALIGN } from './TextBuilder.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../../has.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, setFromArray as transformSetFromArray } from '../../transform.js';\nimport { createEmpty, createOrUpdate, intersects } from '../../extent.js';\nimport { defaultPadding, defaultTextBaseline, drawImageOrLabel } from '../canvas.js';\nimport { defaultTextAlign, measureAndCacheTextWidth, measureTextHeight, measureTextWidths } from '../canvas.js';\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\nimport { equals } from '../../array.js';\nimport { lineStringLength } from '../../geom/flat/length.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @typedef {Object} BBox\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {*} value\n */\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX\n * @property {number} drawImageY\n * @property {number} drawImageW\n * @property {number} drawImageH\n * @property {number} originX\n * @property {number} originY\n * @property {Array<number>} scale\n * @property {BBox} declutterBox\n * @property {import(\"../../transform.js\").Transform} canvasTransform\n */\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p4 = [];\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\nvar rtlRegEx = new RegExp(/* eslint-disable prettier/prettier */\n'[' + String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) + String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) + String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) + String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) + String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) + ']'\n/* eslint-enable prettier/prettier */);\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\nvar Executor = /** @class */function () {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   * @param {import(\"../../size.js\").Size} renderBuffer Render buffer (width/height) in pixels.\n   */\n  function Executor(resolution, pixelRatio, overlaps, instructions, renderBuffer) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.renderBuffer_ = renderBuffer;\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  Executor.prototype.createLabel = function (text, textKey, fillKey, strokeKey) {\n    var key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    var fillState = fillKey ? this.fillStates[fillKey] : null;\n    var textState = this.textStates[textKey];\n    var pixelRatio = this.pixelRatio;\n    var scale = [textState.scale[0] * pixelRatio, textState.scale[1] * pixelRatio];\n    var align = horizontalTextAlign(text, textState.textAlign || defaultTextAlign);\n    var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n    var lines = text.split('\\n');\n    var numLines = lines.length;\n    var widths = [];\n    var width = measureTextWidths(textState.font, lines, widths);\n    var lineHeight = measureTextHeight(textState.font);\n    var height = lineHeight * numLines;\n    var renderWidth = width + strokeWidth;\n    var contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    var w = (renderWidth + 2) * scale[0];\n    var h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    var label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      var Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    var leftRight = 0.5 - align;\n    var x = align * renderWidth + leftRight * strokeWidth;\n    var i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  };\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */fillInstruction[2];\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(context, /** @type {Array<*>} */strokeInstruction);\n      context.stroke();\n    }\n  };\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  Executor.prototype.calculateImageOrLabelDimensions_ = function (sheetWidth, sheetHeight, centerX, centerY, width, height, anchorX, anchorY, originX, originY, rotation, scale, snapToPixel, padding, fillStroke, feature) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    var x = centerX - anchorX;\n    var y = centerY - anchorY;\n    var w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    var h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    var boxW = padding[3] + w * scale[0] + padding[1];\n    var boxH = padding[0] + h * scale[1] + padding[2];\n    var boxX = x - padding[3];\n    var boxY = y - padding[0];\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n    var transform;\n    if (rotation !== 0) {\n      transform = composeTransform(createTransform(), centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\n    } else {\n      createOrUpdate(Math.min(boxX, boxX + boxW), Math.min(boxY, boxY + boxH), Math.max(boxX, boxX + boxW), Math.max(boxY, boxY + boxH), tmpExtent);\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature\n      },\n      canvasTransform: transform,\n      scale: scale\n    };\n  };\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  Executor.prototype.replayImageOrLabel_ = function (context, contextScale, imageOrLabel, dimensions, opacity, fillInstruction, strokeInstruction) {\n    var fillStroke = !!(fillInstruction || strokeInstruction);\n    var box = dimensions.declutterBox;\n    var canvas = context.canvas;\n    var strokePadding = strokeInstruction ? strokeInstruction[2] * dimensions.scale[0] / 2 : 0;\n    var intersects = box.minX - strokePadding <= canvas.width / contextScale && box.maxX + strokePadding >= 0 && box.minY - strokePadding <= canvas.height / contextScale && box.maxY + strokePadding >= 0;\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(context, p1, p2, p3, p4, /** @type {Array<*>} */fillInstruction, /** @type {Array<*>} */strokeInstruction);\n      }\n      drawImageOrLabel(context, dimensions.canvasTransform, opacity, imageOrLabel, dimensions.originX, dimensions.originY, dimensions.drawImageW, dimensions.drawImageH, dimensions.drawImageX, dimensions.drawImageY, dimensions.scale);\n    }\n    return true;\n  };\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  Executor.prototype.fill_ = function (context) {\n    if (this.alignFill_) {\n      var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\n      var repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  };\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  Executor.prototype.setStrokeStyle_ = function (context, instruction) {\n    context['strokeStyle'] = /** @type {import(\"../../colorlike.js\").ColorLike} */instruction[1];\n    context.lineWidth = /** @type {number} */instruction[2];\n    context.lineCap = /** @type {CanvasLineCap} */instruction[3];\n    context.lineJoin = /** @type {CanvasLineJoin} */instruction[4];\n    context.miterLimit = /** @type {number} */instruction[5];\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */instruction[7];\n      context.setLineDash(/** @type {Array<number>} */instruction[6]);\n    }\n  };\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  Executor.prototype.drawLabelWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\n    var textState = this.textStates[textKey];\n    var label = this.createLabel(text, textKey, fillKey, strokeKey);\n    var strokeState = this.strokeStates[strokeKey];\n    var pixelRatio = this.pixelRatio;\n    var align = horizontalTextAlign(text, textState.textAlign || defaultTextAlign);\n    var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    var width = label.width / pixelRatio - 2 * textState.scale[0];\n    var anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY\n    };\n  };\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>=} opt_featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  Executor.prototype.execute_ = function (context, contextScale, transform, instructions, snapToPixel, opt_featureCallback, opt_hitExtent, opt_declutterTree) {\n    /** @type {Array<number>} */\n    var pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    var i = 0; // instruction index\n    var ii = instructions.length; // end of instructions\n    var d = 0; // data index\n    var dd; // end of per-instruction data\n    var anchorX, anchorY, prevX, prevY, roundX, roundY, image, text, textKey, strokeKey, fillKey;\n    var pendingFill = 0;\n    var pendingStroke = 0;\n    var lastFillInstruction = null;\n    var lastStrokeInstruction = null;\n    var coordinateCache = this.coordinateCache_;\n    var viewRotation = this.viewRotation_;\n    var viewRotationFromTransform = Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n    var state = /** @type {import(\"../../render.js\").State} */{\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation\n    };\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n    var /** @type {import(\"../../Feature.js\").FeatureLike} */feature;\n    var x, y, currentGeometry;\n    while (i < ii) {\n      var instruction = instructions[i];\n      var type = /** @type {import(\"./Instruction.js\").default} */instruction[0];\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */instruction[1];\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */instruction[2];\n          } else if (opt_hitExtent !== undefined && !intersects(opt_hitExtent, currentGeometry.getExtent())) {\n            i = /** @type {number} */instruction[2] + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */instruction[1];\n          var x1 = pixelCoordinates[d];\n          var y1 = pixelCoordinates[d + 1];\n          var x2 = pixelCoordinates[d + 2];\n          var y2 = pixelCoordinates[d + 3];\n          var dx = x2 - x1;\n          var dy = y2 - y1;\n          var r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */instruction[1];\n          dd = instruction[2];\n          var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */instruction[3];\n          var renderer = instruction[4];\n          var fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          var coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */instruction[1];\n          dd = /** @type {number} */instruction[2];\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */instruction[3];\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */instruction[4];\n          anchorY = /** @type {number} */instruction[5];\n          var height = /** @type {number} */instruction[6];\n          var opacity = /** @type {number} */instruction[7];\n          var originX = /** @type {number} */instruction[8];\n          var originY = /** @type {number} */instruction[9];\n          var rotateWithView = /** @type {boolean} */instruction[10];\n          var rotation = /** @type {number} */instruction[11];\n          var scale = /** @type {import(\"../../size.js\").Size} */instruction[12];\n          var width = /** @type {number} */instruction[13];\n          var declutterImageWithText = /** @type {import(\"../canvas.js\").DeclutterImageWithText} */instruction[14];\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */instruction[18];\n            textKey = /** @type {string} */instruction[19];\n            strokeKey = /** @type {string} */instruction[20];\n            fillKey = /** @type {string} */instruction[21];\n            var labelWithAnchor = this.drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey);\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            var textOffsetX = /** @type {number} */instruction[22];\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            var textOffsetY = /** @type {number} */instruction[23];\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n          var geometryWidths = void 0;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */instruction[24];\n          }\n          var padding = void 0,\n            backgroundFill = void 0,\n            backgroundStroke = void 0;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */instruction[15];\n            backgroundFill = /** @type {boolean} */instruction[16];\n            backgroundStroke = /** @type {boolean} */instruction[17];\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          var widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (geometryWidths && geometryWidths[widthIndex++] < width / this.pixelRatio) {\n              continue;\n            }\n            var dimensions = this.calculateImageOrLabelDimensions_(image.width, image.height, pixelCoordinates[d], pixelCoordinates[d + 1], width, height, anchorX, anchorY, originX, originY, rotation, scale, snapToPixel, padding, backgroundFill || backgroundStroke, feature);\n            /** @type {ReplayImageOrLabelArgs} */\n            var args = [context, contextScale, image, dimensions, opacity, backgroundFill ? (/** @type {Array<*>} */lastFillInstruction) : null, backgroundStroke ? (/** @type {Array<*>} */lastStrokeInstruction) : null];\n            var imageArgs = void 0;\n            var imageDeclutterBox = void 0;\n            if (opt_declutterTree && declutterImageWithText) {\n              if (!declutterImageWithText[d]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[d] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[d];\n              delete declutterImageWithText[d];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (opt_declutterTree && opt_declutterTree.collides(dimensions.declutterBox)) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          var begin = /** @type {number} */instruction[1];\n          var end = /** @type {number} */instruction[2];\n          var baseline = /** @type {number} */instruction[3];\n          var overflow = /** @type {number} */instruction[4];\n          fillKey = /** @type {string} */instruction[5];\n          var maxAngle = /** @type {number} */instruction[6];\n          var measurePixelRatio = /** @type {number} */instruction[7];\n          var offsetY = /** @type {number} */instruction[8];\n          strokeKey = /** @type {string} */instruction[9];\n          var strokeWidth = /** @type {number} */instruction[10];\n          text = /** @type {string} */instruction[11];\n          textKey = /** @type {string} */instruction[12];\n          var pixelRatioScale = [(/** @type {number} */instruction[13]), (/** @type {number} */instruction[13])];\n          var textState = this.textStates[textKey];\n          var font = textState.font;\n          var textScale = [textState.scale[0] * measurePixelRatio, textState.scale[1] * measurePixelRatio];\n          var cachedWidths = void 0;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n          var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          var textLength = Math.abs(textScale[0]) * measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            var textAlign = this.textStates[textKey].textAlign;\n            var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, Math.abs(textScale[0]), measureAndCacheTextWidth, font, cachedWidths, viewRotationFromTransform ? 0 : this.viewRotation_);\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              var replayImageOrLabelArgs = [];\n              var c = void 0,\n                cc = void 0,\n                chars = void 0,\n                label = void 0,\n                part = void 0;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */part[4];\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX = /** @type {number} */part[2] + (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth * textScale[1] / textScale[0] - offsetY;\n                  var dimensions = this.calculateImageOrLabelDimensions_(label.width, label.height, part[0], part[1], label.width, label.height, anchorX, anchorY, 0, 0, part[3], pixelRatioScale, false, defaultPadding, false, feature);\n                  if (opt_declutterTree && opt_declutterTree.collides(dimensions.declutterBox)) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([context, contextScale, label, dimensions, 1, null, null]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */part[4];\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */part[2];\n                  anchorY = baseline * label.height - offsetY;\n                  var dimensions = this.calculateImageOrLabelDimensions_(label.width, label.height, part[0], part[1], label.width, label.height, anchorX, anchorY, 0, 0, part[3], pixelRatioScale, false, defaultPadding, false, feature);\n                  if (opt_declutterTree && opt_declutterTree.collides(dimensions.declutterBox)) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([context, contextScale, label, dimensions, 1, null, null]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (var i_1 = 0, ii_1 = replayImageOrLabelArgs.length; i_1 < ii_1; ++i_1) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i_1]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */instruction[1];\n            var result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */instruction[1];\n          dd = /** @type {number} */instruction[2];\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = x + 0.5 | 0;\n          roundY = y + 0.5 | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = x + 0.5 | 0;\n            roundY = y + 0.5 | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */instruction);\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  };\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n   */\n  Executor.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_declutterTree) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(context, contextScale, transform, this.instructions, snapToPixel, undefined, undefined, opt_declutterTree);\n  };\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>=} opt_featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  Executor.prototype.executeHitDetection = function (context, transform, viewRotation, opt_featureCallback, opt_hitExtent) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(context, 1, transform, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n  };\n  return Executor;\n}();\nexport default Executor;\n", "/**\n * @module ol/render/canvas/ExecutorGroup\n */\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { compose as composeTransform, create as createTransform } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { isEmpty } from '../../obj.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nvar ORDER = [BuilderType.POLYGON, BuilderType.CIRCLE, BuilderType.LINE_STRING, BuilderType.IMAGE, BuilderType.TEXT, BuilderType.DEFAULT];\nvar ExecutorGroup = /** @class */function () {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceet that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number=} opt_renderBuffer Optional rendering buffer.\n   */\n  function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, allInstructions, opt_renderBuffer) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n    this.createExecutors_(allInstructions);\n  }\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  ExecutorGroup.prototype.clip = function (context, transform) {\n    var flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  };\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n    for (var zIndex in allInstructions) {\n      var executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      var instructionByZindex = allInstructions[zIndex];\n      var renderBuffer = [this.renderBuffer_ || 0, this.renderBuffer_ || 0];\n      for (var builderType in instructionByZindex) {\n        var instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, instructions, renderBuffer);\n      }\n    }\n  };\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  ExecutorGroup.prototype.hasExecutors = function (executors) {\n    for (var zIndex in this.executorsByZIndex_) {\n      var candidates = this.executorsByZIndex_[zIndex];\n      for (var i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, callback, declutteredFeatures) {\n    hitTolerance = Math.round(hitTolerance);\n    var contextSize = hitTolerance * 2 + 1;\n    var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n    var newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(contextSize, contextSize);\n    }\n    var context = this.hitDetectionContext_;\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    var hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n    var indexes = getPixelIndexArray(hitTolerance);\n    var builderType;\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n      for (var i_1 = 0, ii = indexes.length; i_1 < ii; i_1++) {\n        if (imageData[indexes[i_1]] > 0) {\n          if (!declutteredFeatures || builderType !== BuilderType.IMAGE && builderType !== BuilderType.TEXT || declutteredFeatures.indexOf(feature) !== -1) {\n            var idx = (indexes[i_1] - 3) / 4;\n            var x = hitTolerance - idx % contextSize;\n            var y = hitTolerance - (idx / contextSize | 0);\n            var result_1 = callback(feature, geometry, x * x + y * y);\n            if (result_1) {\n              return result_1;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n    var i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      var zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(context, transform, rotation, featureCallback, hitExtent);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  ExecutorGroup.prototype.getClipCoords = function (transform) {\n    var maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    var minX = maxExtent[0];\n    var minY = maxExtent[1];\n    var maxX = maxExtent[2];\n    var maxY = maxExtent[3];\n    var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  };\n  /**\n   * @return {boolean} Is empty.\n   */\n  ExecutorGroup.prototype.isEmpty = function () {\n    return isEmpty(this.executorsByZIndex_);\n  };\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>=} opt_builderTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n   */\n  ExecutorGroup.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_builderTypes, opt_declutterTree) {\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n    var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    var i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        var builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(context, contextScale, transform, viewRotation, snapToPixel, opt_declutterTree);\n        }\n      }\n    }\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  };\n  return ExecutorGroup;\n}();\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nvar circlePixelIndexArrayCache = {};\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n  var size = radius * 2 + 1;\n  var maxDistanceSq = radius * radius;\n  var distances = new Array(maxDistanceSq + 1);\n  for (var i = 0; i <= radius; ++i) {\n    for (var j = 0; j <= radius; ++j) {\n      var distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      var distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n  var pixelIndex = [];\n  for (var i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push.apply(pixelIndex, distances[i]);\n    }\n  }\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\nexport default ExecutorGroup;\n", "/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { compose as composeTransform, create as createTransform } from '../../transform.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline } from '../canvas.js';\nimport { equals } from '../../array.js';\nimport { intersects } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /** @class */function (_super) {\n  __extends(CanvasImmediateRenderer, _super);\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number=} opt_squaredTolerance Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction=} opt_userTransform Transform from user to view projection.\n   */\n  function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation, opt_squaredTolerance, opt_userTransform) {\n    var _this = _super.call(this) || this;\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    _this.context_ = context;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.pixelRatio_ = pixelRatio;\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    _this.extent_ = extent;\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    _this.transform_ = transform;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.viewRotation_ = viewRotation;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.squaredTolerance_ = opt_squaredTolerance;\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    _this.userTransform_ = opt_userTransform;\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    _this.contextFillState_ = null;\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    _this.contextStrokeState_ = null;\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    _this.contextTextState_ = null;\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    _this.fillState_ = null;\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    _this.strokeState_ = null;\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    _this.image_ = null;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.imageAnchorX_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.imageAnchorY_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.imageHeight_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.imageOpacity_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.imageOriginX_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.imageOriginY_ = 0;\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.imageRotateWithView_ = false;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.imageRotation_ = 0;\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    _this.imageScale_ = [0, 0];\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.imageWidth_ = 0;\n    /**\n     * @private\n     * @type {string}\n     */\n    _this.text_ = '';\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.textOffsetX_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.textOffsetY_ = 0;\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.textRotateWithView_ = false;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.textRotation_ = 0;\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    _this.textScale_ = [0, 0];\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    _this.textFillState_ = null;\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    _this.textStrokeState_ = null;\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    _this.textState_ = null;\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    _this.pixelCoordinates_ = [];\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    _this.tmpLocalTransform_ = createTransform();\n    return _this;\n  }\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    var pixelCoordinates = transform2D(flatCoordinates, offset, end, 2, this.transform_, this.pixelCoordinates_);\n    var context = this.context_;\n    var localTransform = this.tmpLocalTransform_;\n    var alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    var rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      var x = pixelCoordinates[i] - this.imageAnchorX_;\n      var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (rotation !== 0 || this.imageScale_[0] != 1 || this.imageScale_[1] != 1) {\n        var centerX = x + this.imageAnchorX_;\n        var centerY = y + this.imageAnchorY_;\n        composeTransform(localTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, -this.imageAnchorX_, -this.imageAnchorY_, this.imageWidth_, this.imageHeight_);\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  };\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n    var context = this.context_;\n    var rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      var x = pixelCoordinates[offset] + this.textOffsetX_;\n      var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (rotation !== 0 || this.textScale_[0] != 1 || this.textScale_[1] != 1) {\n        var localTransform = composeTransform(this.tmpLocalTransform_, x, y, 1, 1, rotation, -x, -y);\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  };\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n    var context = this.context_;\n    var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    var length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (var i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  };\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  };\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n      var dx = pixelCoordinates[2] - pixelCoordinates[0];\n      var dy = pixelCoordinates[3] - pixelCoordinates[1];\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      var context = this.context_;\n      context.beginPath();\n      context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  };\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.setStyle = function (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  CanvasImmediateRenderer.prototype.setTransform = function (transform) {\n    this.transform_ = transform;\n  };\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */geometry);\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */geometry);\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */geometry);\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */geometry);\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */geometry);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */geometry);\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */geometry);\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */geometry);\n        break;\n      default:\n    }\n  };\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  };\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_);\n    }\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_);\n    }\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_);\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  };\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_);\n    }\n    var geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      var offset = 0;\n      var ends = /** @type {Array<number>} */geometry.getEnds();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  };\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_);\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, /** @type {Array<number>} */geometry.getEnds(), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  };\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_);\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      var flatCoordinates = geometry.getOrientedFlatCoordinates();\n      var offset = 0;\n      var endss = geometry.getEndss();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  };\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\n    var context = this.context_;\n    var contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  };\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\n    var context = this.context_;\n    var contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  };\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\n    var context = this.context_;\n    var contextTextState = this.contextTextState_;\n    var textAlign = textState.textAlign ? textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */textAlign;\n      context.textBaseline = /** @type {CanvasTextBaseline} */textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */textAlign;\n        context.textAlign = /** @type {CanvasTextAlign} */textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */textState.textBaseline;\n        context.textBaseline = /** @type {CanvasTextBaseline} */textState.textBaseline;\n      }\n    }\n  };\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      var fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      var strokeStyleColor = strokeStyle.getColor();\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      var strokeStyleWidth = strokeStyle.getWidth();\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ? strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ? strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ? strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ? strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  };\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      var imageSize = imageStyle.getSize();\n      if (!imageSize) {\n        this.image_ = null;\n      } else {\n        var imageAnchor = imageStyle.getAnchor();\n        // FIXME pixel ratio\n        var imageImage = imageStyle.getImage(1);\n        var imageOrigin = imageStyle.getOrigin();\n        var imageScale = imageStyle.getScaleArray();\n        this.imageAnchorX_ = imageAnchor[0];\n        this.imageAnchorY_ = imageAnchor[1];\n        this.imageHeight_ = imageSize[1];\n        this.image_ = imageImage;\n        this.imageOpacity_ = imageStyle.getOpacity();\n        this.imageOriginX_ = imageOrigin[0];\n        this.imageOriginY_ = imageOrigin[1];\n        this.imageRotateWithView_ = imageStyle.getRotateWithView();\n        this.imageRotation_ = imageStyle.getRotation();\n        this.imageScale_ = [this.pixelRatio_ * imageScale[0], this.pixelRatio_ * imageScale[1]];\n        this.imageWidth_ = imageSize[0];\n      }\n    }\n  };\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ? textFillStyleColor : defaultFillStyle)\n        };\n      }\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        var textStrokeStyleWidth = textStrokeStyle.getWidth();\n        var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ? textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ? textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ? textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ? textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ? textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ? textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      var textFont = textStyle.getFont();\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      var textScale = textStyle.getScaleArray();\n      var textText = textStyle.getText();\n      var textTextAlign = textStyle.getTextAlign();\n      var textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ? textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ = textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ = textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [this.pixelRatio_ * textScale[0], this.pixelRatio_ * textScale[1]];\n    }\n  };\n  return CanvasImmediateRenderer;\n}(VectorContext);\nexport default CanvasImmediateRenderer;\n", "/**\n * @module ol/render/canvas/hitdetect\n */\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport { Icon } from '../../style.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { intersects } from '../../extent.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(size, transforms, features, styleFunction, extent, resolution, rotation) {\n  var width = size[0] / 2;\n  var height = size[1] / 2;\n  var context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  var canvas = context.canvas;\n  var renderer = new CanvasImmediateRenderer(context, 0.5, extent, null, rotation);\n  var featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  var indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  var featuresByZIndex = {};\n  for (var i = 1; i <= featureCount; ++i) {\n    var feature = features[i - 1];\n    var featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    var styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    var index = i * indexFactor;\n    var color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (var j = 0, jj = styles.length; j < jj; ++j) {\n      var originalStyle = styles[j];\n      var style = originalStyle.clone();\n      var fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      var stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n      }\n      style.setText(undefined);\n      var image = originalStyle.getImage();\n      if (image) {\n        var imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n        var canvas_1 = document.createElement('canvas');\n        canvas_1.width = imgSize[0];\n        canvas_1.height = imgSize[1];\n        var imgContext = canvas_1.getContext('2d', {\n          alpha: false\n        });\n        imgContext.fillStyle = color;\n        var img = imgContext.canvas;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        var width_1 = imgSize ? imgSize[0] : img.width;\n        var height_1 = imgSize ? imgSize[1] : img.height;\n        var iconContext = createCanvasContext2D(width_1, height_1);\n        iconContext.drawImage(img, 0, 0);\n        style.setImage(new Icon({\n          img: img,\n          imgSize: imgSize,\n          anchor: image.getAnchor(),\n          anchorXUnits: IconAnchorUnits.PIXELS,\n          anchorYUnits: IconAnchorUnits.PIXELS,\n          offset: image.getOrigin(),\n          size: image.getSize(),\n          opacity: image.getOpacity(),\n          scale: image.getScale(),\n          rotation: image.getRotation(),\n          rotateWithView: image.getRotateWithView()\n        }));\n      }\n      var zIndex = Number(style.getZIndex());\n      var byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      var geometry = style.getGeometryFunction()(feature);\n      if (geometry && intersects(extent, geometry.getExtent())) {\n        byGeometryType[geometry.getType().replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n  var zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(numberSafeCompareFunction);\n  for (var i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    var byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (var type in byGeometryType) {\n      var geomAndStyle = byGeometryType[type];\n      for (var j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (var k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  var resultFeatures = [];\n  if (imageData) {\n    var index = (Math.round(pixel[0] / 2) + Math.round(pixel[1] / 2) * imageData.width) * 4;\n    var r = imageData.data[index];\n    var g = imageData.data[index + 1];\n    var b = imageData.data[index + 2];\n    var i = b + 256 * (g + 256 * r);\n    var indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n", "/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport { getUid } from '../util.js';\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  var tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, opt_transform, opt_declutterBuilderGroup) {\n  var loading = false;\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    var imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup);\n  return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  var simplifiedGeometry = geometry.simplifyTransformed(squaredTolerance, opt_transform);\n  var renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature, opt_declutterBuilderGroup);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */geometry.getGeometries();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */geometry, feature, style.getRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature, opt_declutterBuilderGroup);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n  var imageStyle = style.getImage();\n  var textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  var declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText = imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n  var imageStyle = style.getImage();\n  var textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  var declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText = imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport { apply, makeInverse, makeScale, toString as transformToString } from '../../transform.js';\nimport { buffer, containsExtent, createEmpty, getWidth, intersects as intersectsExtent, wrapX as wrapExtentX } from '../../extent.js';\nimport { createHitDetectionImageData, hitDetect } from '../../render/canvas/hitdetect.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature } from '../vector.js';\nimport { fromUserExtent, getTransformFromProjections, getUserProjection, toUserExtent } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { wrapX as wrapCoordinateX } from '../../coordinate.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /** @class */function (_super) {\n  __extends(CanvasVectorLayerRenderer, _super);\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  function CanvasVectorLayerRenderer(vectorLayer) {\n    var _this = _super.call(this, vectorLayer) || this;\n    /** @private */\n    _this.boundHandleStyleImageChange_ = _this.handleStyleImageChange_.bind(_this);\n    /**\n     * @type {boolean}\n     */\n    _this.animatingOrInteracting_;\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.dirty_ = false;\n    /**\n     * @type {ImageData}\n     */\n    _this.hitDetectionImageData_ = null;\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    _this.renderedFeatures_ = null;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.renderedRevision_ = -1;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.renderedResolution_ = NaN;\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    _this.renderedExtent_ = createEmpty();\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.renderedRotation_;\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    _this.renderedCenter_ = null;\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    _this.renderedProjection_ = null;\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    _this.renderedRenderOrder_ = null;\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    _this.replayGroup_ = null;\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    _this.replayGroupChanged = true;\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    _this.declutterExecutorGroup = null;\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    _this.clipping = true;\n    return _this;\n  }\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  CanvasVectorLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    _super.prototype.useContainer.call(this, target, transform, opacity);\n  };\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n   */\n  CanvasVectorLayerRenderer.prototype.renderWorlds = function (executorGroup, frameState, opt_declutterTree) {\n    var extent = frameState.extent;\n    var viewState = frameState.viewState;\n    var center = viewState.center;\n    var resolution = viewState.resolution;\n    var projection = viewState.projection;\n    var rotation = viewState.rotation;\n    var projectionExtent = projection.getExtent();\n    var vectorSource = this.getLayer().getSource();\n    var pixelRatio = frameState.pixelRatio;\n    var viewHints = frameState.viewHints;\n    var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n    var context = this.context;\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n    var multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    var worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    var endWorld = multiWorld ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1 : 1;\n    var world = multiWorld ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth) : 0;\n    do {\n      var transform = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, world * worldWidth);\n      executorGroup.execute(context, 1, transform, rotation, snapToPixel, undefined, opt_declutterTree);\n    } while (++world < endWorld);\n  };\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  CanvasVectorLayerRenderer.prototype.renderDeclutter = function (frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(this.declutterExecutorGroup, frameState, frameState.declutterTree);\n    }\n  };\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, target) {\n    var pixelRatio = frameState.pixelRatio;\n    var layerState = frameState.layerStatesArray[frameState.layerIndex];\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n    var canvasTransform = transformToString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    var context = this.context;\n    var canvas = context.canvas;\n    var replayGroup = this.replayGroup_;\n    var declutterExecutorGroup = this.declutterExecutorGroup;\n    if ((!replayGroup || replayGroup.isEmpty()) && (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())) {\n      if (!this.containerReused && canvas.width > 0) {\n        canvas.width = 0;\n      }\n      return this.container;\n    }\n    // resize and clear\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n    this.preRender(context, frameState);\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    // clipped rendering if layer extent is set\n    var clipped = false;\n    if (layerState.extent && this.clipping) {\n      var layerExtent = fromUserExtent(layerState.extent, projection);\n      clipped = !containsExtent(layerExtent, frameState.extent) && intersectsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n    this.renderWorlds(replayGroup, frameState);\n    if (clipped) {\n      context.restore();\n    }\n    this.postRender(context, frameState);\n    var opacity = layerState.opacity;\n    var container = this.container;\n    if (opacity !== parseFloat(container.style.opacity)) {\n      container.style.opacity = opacity === 1 ? '' : String(opacity);\n    }\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  };\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  CanvasVectorLayerRenderer.prototype.getFeatures = function (pixel) {\n    return new Promise(\n    /**\n     * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n     * @this {CanvasVectorLayerRenderer}\n     */\n    function (resolve) {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        var size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        var center = this.renderedCenter_;\n        var resolution = this.renderedResolution_;\n        var rotation = this.renderedRotation_;\n        var projection = this.renderedProjection_;\n        var extent = this.renderedExtent_;\n        var layer = this.getLayer();\n        var transforms = [];\n        var width = size[0] / 2;\n        var height = size[1] / 2;\n        transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, 0).slice());\n        var source = layer.getSource();\n        var projectionExtent = projection.getExtent();\n        if (source.getWrapX() && projection.canWrapX() && !containsExtent(projectionExtent, extent)) {\n          var startX = extent[0];\n          var worldWidth = getWidth(projectionExtent);\n          var world = 0;\n          var offsetX = void 0;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, offsetX).slice());\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, offsetX).slice());\n            startX -= worldWidth;\n          }\n        }\n        this.hitDetectionImageData_ = createHitDetectionImageData(size, transforms, this.renderedFeatures_, layer.getStyleFunction(), extent, resolution, rotation);\n      }\n      resolve(hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_));\n    }.bind(this));\n  };\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n    var _this = this;\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    var layer = this.getLayer();\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    var features = {};\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    var featureCallback = function (feature, geometry, distanceSq) {\n      var key = getUid(feature);\n      var match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(features[key] = {\n          feature: feature,\n          layer: layer,\n          geometry: geometry,\n          distanceSq: distanceSq,\n          callback: callback\n        });\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n    var result;\n    var executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some(function (executorGroup) {\n      return result = executorGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, featureCallback, executorGroup === _this.declutterExecutorGroup ? frameState.declutterTree.all().map(function (item) {\n        return item.value;\n      }) : null);\n    });\n    return result;\n  };\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  CanvasVectorLayerRenderer.prototype.handleFontsChanged = function () {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  };\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n    this.renderIfReadyAndVisible();\n  };\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState) {\n    var vectorLayer = this.getLayer();\n    var vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n    if (!this.dirty_ && !updateWhileAnimating && animating || !updateWhileInteracting && interacting) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n    var center = viewState.center.slice();\n    var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n    var loadExtents = [extent.slice()];\n    var projectionExtent = projection.getExtent();\n    if (vectorSource.getWrapX() && projection.canWrapX() && !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      var worldWidth = getWidth(projectionExtent);\n      var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      var loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (loadExtent[0] < projectionExtent[0] && loadExtent[2] < projectionExtent[2]) {\n        loadExtents.push([loadExtent[0] + worldWidth, loadExtent[1], loadExtent[2] + worldWidth, loadExtent[3]]);\n      } else if (loadExtent[0] > projectionExtent[0] && loadExtent[2] > projectionExtent[2]) {\n        loadExtents.push([loadExtent[0] - worldWidth, loadExtent[1], loadExtent[2] - worldWidth, loadExtent[3]]);\n      }\n    }\n    if (!this.dirty_ && this.renderedResolution_ == resolution && this.renderedRevision_ == vectorLayerRevision && this.renderedRenderOrder_ == vectorLayerRenderOrder && containsExtent(this.renderedExtent_, extent)) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n    this.replayGroup_ = null;\n    this.dirty_ = false;\n    var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio);\n    var declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio);\n    }\n    var userProjection = getUserProjection();\n    var userTransform;\n    if (userProjection) {\n      for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(toUserExtent(loadExtents[i], projection), resolution, userProjection);\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n    var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    var render =\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @this {CanvasVectorLayerRenderer}\n     */\n    function (feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup, userTransform, declutterBuilderGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n    var userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    var features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    var replayGroupInstructions = replayGroup.finish();\n    var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), replayGroupInstructions, vectorLayer.getRenderBuffer());\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), declutterBuilderGroup.finish(), vectorLayer.getRenderBuffer());\n    }\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n    this.replayGroupChanged = true;\n    return true;\n  };\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction=} opt_transform Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, builderGroup, opt_transform, opt_declutterBuilderGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(builderGroup, feature, styles[i], squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup) || loading;\n      }\n    } else {\n      loading = renderFeature(builderGroup, feature, styles, squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup);\n    }\n    return loading;\n  };\n  return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer);\nexport default CanvasVectorLayerRenderer;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nvar VectorLayer = /** @class */function (_super) {\n  __extends(VectorLayer, _super);\n  /**\n   * @param {import(\"./BaseVector.js\").Options=} opt_options Options.\n   */\n  function VectorLayer(opt_options) {\n    return _super.call(this, opt_options) || this;\n  }\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  VectorLayer.prototype.createRenderer = function () {\n    return new CanvasVectorLayerRenderer(this);\n  };\n  return VectorLayer;\n}(BaseVectorLayer);\nexport default VectorLayer;\n"],
  "mappings": "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",
  "names": ["d", "b", "BaseVectorLayer", "VectorContext", "__extends", "d", "b", "CanvasBuilder", "fillInstruction", "__extends", "d", "b", "CanvasImageBuilder", "__extends", "d", "b", "CanvasLineStringBuilder", "__extends", "d", "b", "CanvasPolygonBuilder", "__extends", "d", "b", "CanvasTextBuilder", "p1", "p2", "p3", "BuilderGroup", "measureAndCacheTextWidth", "Executor", "p1", "p2", "p3", "p4", "fillInstruction", "strokeInstruction", "intersects", "ExecutorGroup", "__extends", "d", "b", "CanvasImmediateRenderer", "__extends", "d", "b", "CanvasVectorLayerRenderer", "wrapX", "Layer_default", "__extends", "d", "b", "VectorLayer"]
}

{
  "version": 3,
  "sources": ["../../../../../../node_modules/ol/renderer/Layer.js", "../../../../../../node_modules/ol/renderer/canvas/Layer.js"],
  "sourcesContent": ["var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport { abstract } from '../util.js';\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nvar LayerRenderer = /** @class */function (_super) {\n  __extends(LayerRenderer, _super);\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  function LayerRenderer(layer) {\n    var _this = _super.call(this) || this;\n    /** @private */\n    _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    _this.layer_ = layer;\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    _this.declutterExecutorGroup = null;\n    return _this;\n  }\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  LayerRenderer.prototype.getFeatures = function (pixel) {\n    return abstract();\n  };\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  LayerRenderer.prototype.prepareFrame = function (frameState) {\n    return abstract();\n  };\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  LayerRenderer.prototype.renderFrame = function (frameState, target) {\n    return abstract();\n  };\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  };\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  };\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n    return undefined;\n  };\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n    return abstract();\n  };\n  /**\n   * @return {LayerType} Layer.\n   */\n  LayerRenderer.prototype.getLayer = function () {\n    return this.layer_;\n  };\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  LayerRenderer.prototype.handleFontsChanged = function () {};\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  LayerRenderer.prototype.handleImageChange_ = function (event) {\n    var image = /** @type {import(\"../Image.js\").default} */event.target;\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  };\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  LayerRenderer.prototype.loadImage = function (image) {\n    var imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  };\n  /**\n   * @protected\n   */\n  LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n    var layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  };\n  return LayerRenderer;\n}(Observable);\nexport default LayerRenderer;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform } from '../../transform.js';\nimport { containsCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nvar CanvasLayerRenderer = /** @class */function (_super) {\n  __extends(CanvasLayerRenderer, _super);\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  function CanvasLayerRenderer(layer) {\n    var _this = _super.call(this, layer) || this;\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    _this.container = null;\n    /**\n     * @protected\n     * @type {number}\n     */\n    _this.renderedResolution;\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    _this.tempTransform = createTransform();\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    _this.pixelTransform = createTransform();\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    _this.inversePixelTransform = createTransform();\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    _this.context = null;\n    /**\n     * @type {boolean}\n     */\n    _this.containerReused = false;\n    return _this;\n  }\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  CanvasLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n    var layerClassName = this.getLayer().getClassName();\n    var container, context;\n    if (target && target.style.opacity === '' && target.className === layerClassName) {\n      var canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && (context.canvas.width === 0 || context.canvas.style.transform === transform)) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      var style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      var canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  };\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n    var pixelRatio = frameState.pixelRatio;\n    var halfWidth = frameState.size[0] * pixelRatio / 2;\n    var halfHeight = frameState.size[1] * pixelRatio / 2;\n    var rotation = frameState.viewState.rotation;\n    var topLeft = getTopLeft(extent);\n    var topRight = getTopRight(extent);\n    var bottomRight = getBottomRight(extent);\n    var bottomLeft = getBottomLeft(extent);\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n    context.save();\n    rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, halfWidth, halfHeight);\n  };\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n    var topLeft = getTopLeft(extent);\n    var topRight = getTopRight(extent);\n    var bottomRight = getBottomRight(extent);\n    var bottomLeft = getBottomLeft(extent);\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n    var inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  };\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var event_1 = new RenderEvent(type, this.inversePixelTransform, frameState, context);\n      layer.dispatchEvent(event_1);\n    }\n  };\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  };\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  };\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasLayerRenderer.prototype.getRenderTransform = function (center, resolution, rotation, pixelRatio, width, height, offsetX) {\n    var dx1 = width / 2;\n    var dy1 = height / 2;\n    var sx = pixelRatio / resolution;\n    var sy = -sx;\n    var dx2 = -center[0] + offsetX;\n    var dy2 = -center[1];\n    return composeTransform(this.tempTransform, dx1, dy1, sx, sy, -rotation, dx2, dy2);\n  };\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n    var renderPixel = applyTransform(this.inversePixelTransform, pixel.slice());\n    var context = this.context;\n    var layer = this.getLayer();\n    var layerExtent = layer.getExtent();\n    if (layerExtent) {\n      var renderCoordinate = applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n    var data;\n    try {\n      var x = Math.round(renderPixel[0]);\n      var y = Math.round(renderPixel[1]);\n      var newCanvas = document.createElement('canvas');\n      var newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  };\n  return CanvasLayerRenderer;\n}(LayerRenderer);\nexport default CanvasLayerRenderer;\n"],
  "mappings": "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",
  "names": ["d", "b", "LayerRenderer", "__extends", "d", "b", "CanvasLayerRenderer", "EventType_default", "Layer_default"]
}

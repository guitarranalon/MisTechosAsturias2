{
  "version": 3,
  "sources": ["../../../../../../node_modules/ol/ImageBase.js", "../../../../../../node_modules/ol/Image.js"],
  "sourcesContent": ["var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * @abstract\n */\nvar ImageBase = /** @class */function (_super) {\n  __extends(ImageBase, _super);\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  function ImageBase(extent, resolution, pixelRatio, state) {\n    var _this = _super.call(this) || this;\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    _this.extent = extent;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.pixelRatio_ = pixelRatio;\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    _this.resolution = resolution;\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    _this.state = state;\n    return _this;\n  }\n  /**\n   * @protected\n   */\n  ImageBase.prototype.changed = function () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  ImageBase.prototype.getExtent = function () {\n    return this.extent;\n  };\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  ImageBase.prototype.getImage = function () {\n    return abstract();\n  };\n  /**\n   * @return {number} PixelRatio.\n   */\n  ImageBase.prototype.getPixelRatio = function () {\n    return this.pixelRatio_;\n  };\n  /**\n   * @return {number} Resolution.\n   */\n  ImageBase.prototype.getResolution = function () {\n    return /** @type {number} */this.resolution;\n  };\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  ImageBase.prototype.getState = function () {\n    return this.state;\n  };\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  ImageBase.prototype.load = function () {\n    abstract();\n  };\n  return ImageBase;\n}(EventTarget);\nexport default ImageBase;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { IMAGE_DECODE } from './has.js';\nimport { getHeight } from './extent.js';\nimport { listenOnce, unlistenByKey } from './events.js';\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */function (_super) {\n  __extends(ImageWrapper, _super);\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n    var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n    /**\n     * @private\n     * @type {string}\n     */\n    _this.src_ = src;\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    _this.image_ = new Image();\n    if (crossOrigin !== null) {\n      _this.image_.crossOrigin = crossOrigin;\n    }\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    _this.unlisten_ = null;\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    _this.state = ImageState.IDLE;\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    _this.imageLoadFunction_ = imageLoadFunction;\n    return _this;\n  }\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  ImageWrapper.prototype.getImage = function () {\n    return this.image_;\n  };\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageWrapper.prototype.handleImageError_ = function () {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  };\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageWrapper.prototype.handleImageLoad_ = function () {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  };\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  ImageWrapper.prototype.load = function () {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n    }\n  };\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  ImageWrapper.prototype.setImage = function (image) {\n    this.image_ = image;\n  };\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageWrapper.prototype.unlistenImage_ = function () {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  };\n  return ImageWrapper;\n}(ImageBase);\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  var img = /** @type {HTMLImageElement} */image;\n  if (img.src && IMAGE_DECODE) {\n    var promise = img.decode();\n    var listening_1 = true;\n    var unlisten = function () {\n      listening_1 = false;\n    };\n    promise.then(function () {\n      if (listening_1) {\n        loadHandler();\n      }\n    }).catch(function (error) {\n      if (listening_1) {\n        // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n        //        https://bugs.webkit.org/show_bug.cgi?id=198527\n        if (error.name === 'EncodingError' && error.message === 'Invalid image type.') {\n          loadHandler();\n        } else {\n          errorHandler();\n        }\n      }\n    });\n    return unlisten;\n  }\n  var listenerKeys = [listenOnce(img, EventType.LOAD, loadHandler), listenOnce(img, EventType.ERROR, errorHandler)];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\nexport default ImageWrapper;\n"],
  "mappings": "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",
  "names": ["d", "b", "ImageBase", "__extends", "d", "b", "ImageWrapper", "unlisten"]
}

{
  "version": 3,
  "sources": ["../../../../../../node_modules/ol/control/Control.js", "../../../../../../node_modules/ol/control/Attribution.js", "../../../../../../node_modules/ol/control/Rotate.js", "../../../../../../node_modules/ol/control/Zoom.js", "../../../../../../node_modules/ol/control/FullScreen.js", "../../../../../../node_modules/ol/pointer/EventType.js", "../../../../../../node_modules/ol/control/MousePosition.js", "../../../../../../node_modules/ol/renderer/Map.js", "../../../../../../node_modules/ol/renderer/Composite.js", "../../../../../../node_modules/ol/MapProperty.js", "../../../../../../node_modules/ol/layer/Group.js", "../../../../../../node_modules/ol/MapEvent.js", "../../../../../../node_modules/ol/MapBrowserEvent.js", "../../../../../../node_modules/ol/MapBrowserEventType.js", "../../../../../../node_modules/ol/MapBrowserEventHandler.js", "../../../../../../node_modules/ol/structs/PriorityQueue.js", "../../../../../../node_modules/ol/TileQueue.js", "../../../../../../node_modules/ol/ViewProperty.js", "../../../../../../node_modules/ol/centerconstraint.js", "../../../../../../node_modules/ol/resolutionconstraint.js", "../../../../../../node_modules/ol/rotationconstraint.js", "../../../../../../node_modules/ol/geom/flat/closest.js", "../../../../../../node_modules/ol/geom/flat/area.js", "../../../../../../node_modules/ol/geom/LinearRing.js", "../../../../../../node_modules/ol/geom/flat/contains.js", "../../../../../../node_modules/ol/geom/flat/interiorpoint.js", "../../../../../../node_modules/ol/geom/flat/segments.js", "../../../../../../node_modules/ol/geom/flat/intersectsextent.js", "../../../../../../node_modules/ol/geom/flat/reverse.js", "../../../../../../node_modules/ol/geom/flat/orient.js", "../../../../../../node_modules/ol/geom/Polygon.js", "../../../../../../node_modules/ol/View.js", "../../../../../../node_modules/ol/PluggableMap.js", "../../../../../../node_modules/ol/control/OverviewMap.js", "../../../../../../node_modules/ol/control/ScaleLine.js", "../../../../../../node_modules/ol/control/ZoomSlider.js", "../../../../../../node_modules/ol/control/ZoomToExtent.js", "../../../../../../node_modules/ol/control.js"],
  "sourcesContent": ["var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport { VOID } from '../functions.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { removeNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */function (_super) {\n  __extends(Control, _super);\n  /**\n   * @param {Options} options Control options.\n   */\n  function Control(options) {\n    var _this = _super.call(this) || this;\n    var element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    _this.element = element ? element : null;\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    _this.target_ = null;\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    _this.map_ = null;\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    _this.listenerKeys = [];\n    if (options.render) {\n      _this.render = options.render;\n    }\n    if (options.target) {\n      _this.setTarget(options.target);\n    }\n    return _this;\n  }\n  /**\n   * Clean up.\n   */\n  Control.prototype.disposeInternal = function () {\n    removeNode(this.element);\n    _super.prototype.disposeInternal.call(this);\n  };\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Control.prototype.getMap = function () {\n    return this.map_;\n  };\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Control.prototype.setMap = function (map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      var target = this.target_ ? this.target_ : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n      }\n      map.render();\n    }\n  };\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  Control.prototype.render = function (mapEvent) {};\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  Control.prototype.setTarget = function (target) {\n    this.target_ = typeof target === 'string' ? document.getElementById(target) : target;\n  };\n  return Control;\n}(BaseObject);\nexport default Control;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { equals } from '../array.js';\nimport { inView } from '../layer/Layer.js';\nimport { removeChildren, replaceNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='Â»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */function (_super) {\n  __extends(Attribution, _super);\n  /**\n   * @param {Options=} opt_options Attribution options.\n   */\n  function Attribution(opt_options) {\n    var _this = this;\n    var options = opt_options ? opt_options : {};\n    _this = _super.call(this, {\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target\n    }) || this;\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    _this.ulElement_ = document.createElement('ul');\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.userCollapsed_ = _this.collapsed_;\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.overrideCollapsible_ = options.collapsible !== undefined;\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.collapsible_ = options.collapsible !== undefined ? options.collapsible : true;\n    if (!_this.collapsible_) {\n      _this.collapsed_ = false;\n    }\n    var className = options.className !== undefined ? options.className : 'ol-attribution';\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n    var expandClassName = options.expandClassName !== undefined ? options.expandClassName : className + '-expand';\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n    var collapseClassName = options.collapseClassName !== undefined ? options.collapseClassName : className + '-collpase';\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      _this.collapseLabel_ = document.createElement('span');\n      _this.collapseLabel_.textContent = collapseLabel;\n      _this.collapseLabel_.className = collapseClassName;\n    } else {\n      _this.collapseLabel_ = collapseLabel;\n    }\n    var label = options.label !== undefined ? options.label : 'i';\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      _this.label_ = document.createElement('span');\n      _this.label_.textContent = label;\n      _this.label_.className = expandClassName;\n    } else {\n      _this.label_ = label;\n    }\n    var activeLabel = _this.collapsible_ && !_this.collapsed_ ? _this.collapseLabel_ : _this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n    button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL + (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') + (_this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = _this.element;\n    element.className = cssClasses;\n    element.appendChild(_this.ulElement_);\n    element.appendChild(button);\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    _this.renderedAttributions_ = [];\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.renderedVisible_ = true;\n    return _this;\n  }\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    var lookup = {};\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    var visibleAttributions = [];\n    var collapsible = true;\n    var layerStatesArray = frameState.layerStatesArray;\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n      var source = /** @type {import(\"../layer/Layer.js\").default} */layerState.layer.getSource();\n      if (!source) {\n        continue;\n      }\n      var attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n      var attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n      collapsible = collapsible && source.getAttributionsCollapsible() !== false;\n      if (Array.isArray(attributions)) {\n        for (var j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  };\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  Attribution.prototype.updateElement_ = function (frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n    var attributions = this.collectSourceAttributions_(frameState);\n    var visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n    removeChildren(this.ulElement_);\n    // append the attributions\n    for (var i = 0, ii = attributions.length; i < ii; ++i) {\n      var element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n    this.renderedAttributions_ = attributions;\n  };\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Attribution.prototype.handleClick_ = function (event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  };\n  /**\n   * @private\n   */\n  Attribution.prototype.handleToggle_ = function () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  };\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.getCollapsible = function () {\n    return this.collapsible_;\n  };\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.setCollapsible = function (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  };\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.setCollapsed = function (collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.getCollapsed = function () {\n    return this.collapsed_;\n  };\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  Attribution.prototype.render = function (mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  };\n  return Attribution;\n}(Control);\nexport default Attribution;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='â§'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */function (_super) {\n  __extends(Rotate, _super);\n  /**\n   * @param {Options=} opt_options Rotate options.\n   */\n  function Rotate(opt_options) {\n    var _this = this;\n    var options = opt_options ? opt_options : {};\n    _this = _super.call(this, {\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target\n    }) || this;\n    var className = options.className !== undefined ? options.className : 'ol-rotate';\n    var label = options.label !== undefined ? options.label : '\\u21E7';\n    var compassClassName = options.compassClassName !== undefined ? options.compassClassName : 'ol-compass';\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    _this.label_ = null;\n    if (typeof label === 'string') {\n      _this.label_ = document.createElement('span');\n      _this.label_.className = compassClassName;\n      _this.label_.textContent = label;\n    } else {\n      _this.label_ = label;\n      _this.label_.classList.add(compassClassName);\n    }\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n    var button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(_this.label_);\n    button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = _this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n    _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n    /**\n     * @type {number}\n     * @private\n     */\n    _this.duration_ = options.duration !== undefined ? options.duration : 250;\n    /**\n     * @type {boolean}\n     * @private\n     */\n    _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    _this.rotation_ = undefined;\n    if (_this.autoHide_) {\n      _this.element.classList.add(CLASS_HIDDEN);\n    }\n    return _this;\n  }\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Rotate.prototype.handleClick_ = function (event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  };\n  /**\n   * @private\n   */\n  Rotate.prototype.resetNorth_ = function () {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    var rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  };\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  Rotate.prototype.render = function (mapEvent) {\n    var frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    var rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      var transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        var contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  };\n  return Rotate;\n}(Control);\nexport default Rotate;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */function (_super) {\n  __extends(Zoom, _super);\n  /**\n   * @param {Options=} opt_options Zoom options.\n   */\n  function Zoom(opt_options) {\n    var _this = this;\n    var options = opt_options ? opt_options : {};\n    _this = _super.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    }) || this;\n    var className = options.className !== undefined ? options.className : 'ol-zoom';\n    var delta = options.delta !== undefined ? options.delta : 1;\n    var zoomInClassName = options.zoomInClassName !== undefined ? options.zoomInClassName : className + '-in';\n    var zoomOutClassName = options.zoomOutClassName !== undefined ? options.zoomOutClassName : className + '-out';\n    var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n    var zoomInTipLabel = options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ? options.zoomOutTipLabel : 'Zoom out';\n    var inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel);\n    inElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, delta), false);\n    var outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel);\n    outElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, -delta), false);\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = _this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n    /**\n     * @type {number}\n     * @private\n     */\n    _this.duration_ = options.duration !== undefined ? options.duration : 250;\n    return _this;\n  }\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Zoom.prototype.handleClick_ = function (delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  };\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  Zoom.prototype.zoomByDelta_ = function (delta) {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    var currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      var newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  };\n  return Zoom;\n}(Control);\nexport default Zoom;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED } from '../css.js';\nimport { listen } from '../events.js';\nimport { replaceNode } from '../dom.js';\nvar events = ['fullscreenchange', 'webkitfullscreenchange', 'MSFullscreenChange'];\n/**\n * @enum {string}\n */\nvar FullScreenEventType = {\n  /**\n   * Triggered after the map entered fullscreen.\n   * @event FullScreenEventType#enterfullscreen\n   * @api\n   */\n  ENTERFULLSCREEN: 'enterfullscreen',\n  /**\n   * Triggered after the map leave fullscreen.\n   * @event FullScreenEventType#leavefullscreen\n   * @api\n   */\n  LEAVEFULLSCREEN: 'leavefullscreen'\n};\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nvar FullScreen = /** @class */function (_super) {\n  __extends(FullScreen, _super);\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  function FullScreen(opt_options) {\n    var _this = this;\n    var options = opt_options ? opt_options : {};\n    _this = _super.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    }) || this;\n    /**\n     * @private\n     * @type {string}\n     */\n    _this.cssClassName_ = options.className !== undefined ? options.className : 'ol-full-screen';\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    _this.activeClassName_ = options.activeClassName !== undefined ? options.activeClassName.split(' ') : [_this.cssClassName_ + '-true'];\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    _this.inactiveClassName_ = options.inactiveClassName !== undefined ? options.inactiveClassName.split(' ') : [_this.cssClassName_ + '-false'];\n    var label = options.label !== undefined ? options.label : '\\u2922';\n    /**\n     * @private\n     * @type {Text}\n     */\n    _this.labelNode_ = typeof label === 'string' ? document.createTextNode(label) : label;\n    var labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n    /**\n     * @private\n     * @type {Text}\n     */\n    _this.labelActiveNode_ = typeof labelActive === 'string' ? document.createTextNode(labelActive) : labelActive;\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    _this.button_ = document.createElement('button');\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n    _this.setClassName_(_this.button_, isFullScreen());\n    _this.button_.setAttribute('type', 'button');\n    _this.button_.title = tipLabel;\n    _this.button_.appendChild(_this.labelNode_);\n    _this.button_.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n    var cssClasses = _this.cssClassName_ + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL + ' ' + (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\n    var element = _this.element;\n    element.className = cssClasses;\n    element.appendChild(_this.button_);\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.keys_ = options.keys !== undefined ? options.keys : false;\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    _this.source_ = options.source;\n    return _this;\n  }\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  FullScreen.prototype.handleClick_ = function (event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  };\n  /**\n   * @private\n   */\n  FullScreen.prototype.handleFullScreen_ = function () {\n    if (!isFullScreenSupported()) {\n      return;\n    }\n    var map = this.getMap();\n    if (!map) {\n      return;\n    }\n    if (isFullScreen()) {\n      exitFullScreen();\n    } else {\n      var element = void 0;\n      if (this.source_) {\n        element = typeof this.source_ === 'string' ? document.getElementById(this.source_) : this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  FullScreen.prototype.handleFullScreenChange_ = function () {\n    var map = this.getMap();\n    if (isFullScreen()) {\n      this.setClassName_(this.button_, true);\n      replaceNode(this.labelActiveNode_, this.labelNode_);\n      this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n    } else {\n      this.setClassName_(this.button_, false);\n      replaceNode(this.labelNode_, this.labelActiveNode_);\n      this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n    }\n    if (map) {\n      map.updateSize();\n    }\n  };\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  FullScreen.prototype.setClassName_ = function (element, fullscreen) {\n    var _a, _b, _c;\n    var activeClassName = this.activeClassName_;\n    var inactiveClassName = this.inactiveClassName_;\n    var nextClassName = fullscreen ? activeClassName : inactiveClassName;\n    (_a = element.classList).remove.apply(_a, activeClassName);\n    (_b = element.classList).remove.apply(_b, inactiveClassName);\n    (_c = element.classList).add.apply(_c, nextClassName);\n  };\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  FullScreen.prototype.setMap = function (map) {\n    _super.prototype.setMap.call(this, map);\n    if (map) {\n      for (var i = 0, ii = events.length; i < ii; ++i) {\n        this.listenerKeys.push(listen(document, events[i], this.handleFullScreenChange_, this));\n      }\n    }\n  };\n  return FullScreen;\n}(Control);\n/**\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported() {\n  var body = document.body;\n  return !!(body['webkitRequestFullscreen'] || body['msRequestFullscreen'] && document['msFullscreenEnabled'] || body.requestFullscreen && document.fullscreenEnabled);\n}\n/**\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen() {\n  return !!(document['webkitIsFullScreen'] || document['msFullscreenElement'] || document.fullscreenElement);\n}\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element['msRequestFullscreen']) {\n    element['msRequestFullscreen']();\n  } else if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  }\n}\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  } else {\n    requestFullScreen(element);\n  }\n}\n/**\n * Exit fullscreen.\n */\nfunction exitFullScreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document['msExitFullscreen']) {\n    document['msExitFullscreen']();\n  } else if (document['webkitExitFullscreen']) {\n    document['webkitExitFullscreen']();\n  }\n}\nexport default FullScreen;\n", "/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n", "/**\n * @module ol/control/MousePosition\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport Control from './Control.js';\nimport EventType from '../pointer/EventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport { get as getProjection, getTransformFromProjections, getUserProjection, identityTransform } from '../proj.js';\nimport { listen } from '../events.js';\n/**\n * @type {string}\n */\nvar PROJECTION = 'projection';\n/**\n * @type {string}\n */\nvar COORDINATE_FORMAT = 'coordinateFormat';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [undefinedHTML='&#160;'] Markup to show when coordinates are not\n * available (e.g. when the pointer leaves the map viewport).  By default, the last position\n * will be replaced with `'&#160;'` (`&nbsp;`) when the pointer leaves the viewport.  To\n * retain the last rendered position, set this option to something falsey (like an empty\n * string `''`).\n */\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nvar MousePosition = /** @class */function (_super) {\n  __extends(MousePosition, _super);\n  /**\n   * @param {Options=} opt_options Mouse position options.\n   */\n  function MousePosition(opt_options) {\n    var _this = this;\n    var options = opt_options ? opt_options : {};\n    var element = document.createElement('div');\n    element.className = options.className !== undefined ? options.className : 'ol-mouse-position';\n    _this = _super.call(this, {\n      element: element,\n      render: options.render,\n      target: options.target\n    }) || this;\n    _this.addEventListener(getChangeEventType(PROJECTION), _this.handleProjectionChanged_);\n    if (options.coordinateFormat) {\n      _this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      _this.setProjection(options.projection);\n    }\n    /**\n     * @private\n     * @type {string}\n     */\n    _this.undefinedHTML_ = options.undefinedHTML !== undefined ? options.undefinedHTML : '&#160;';\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.renderOnMouseOut_ = !!_this.undefinedHTML_;\n    /**\n     * @private\n     * @type {string}\n     */\n    _this.renderedHTML_ = element.innerHTML;\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n    _this.mapProjection_ = null;\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    _this.transform_ = null;\n    return _this;\n  }\n  /**\n   * @private\n   */\n  MousePosition.prototype.handleProjectionChanged_ = function () {\n    this.transform_ = null;\n  };\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  MousePosition.prototype.getCoordinateFormat = function () {\n    return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */this.get(COORDINATE_FORMAT);\n  };\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  MousePosition.prototype.getProjection = function () {\n    return /** @type {import(\"../proj/Projection.js\").default|undefined} */this.get(PROJECTION);\n  };\n  /**\n   * @param {MouseEvent} event Browser event.\n   * @protected\n   */\n  MousePosition.prototype.handleMouseMove = function (event) {\n    var map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  };\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  MousePosition.prototype.handleMouseOut = function (event) {\n    this.updateHTML_(null);\n  };\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  MousePosition.prototype.setMap = function (map) {\n    _super.prototype.setMap.call(this, map);\n    if (map) {\n      var viewport = map.getViewport();\n      this.listenerKeys.push(listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this));\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this));\n      }\n    }\n  };\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  MousePosition.prototype.setCoordinateFormat = function (format) {\n    this.set(COORDINATE_FORMAT, format);\n  };\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  MousePosition.prototype.setProjection = function (projection) {\n    this.set(PROJECTION, getProjection(projection));\n  };\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  MousePosition.prototype.updateHTML_ = function (pixel) {\n    var html = this.undefinedHTML_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        var projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(this.mapProjection_, projection);\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      var map = this.getMap();\n      var coordinate = map.getCoordinateFromPixelInternal(pixel);\n      if (coordinate) {\n        var userProjection = getUserProjection();\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(this.mapProjection_, userProjection);\n        }\n        this.transform_(coordinate, coordinate);\n        var coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  };\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  MousePosition.prototype.render = function (mapEvent) {\n    var frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.mapProjection_ = null;\n    } else {\n      if (this.mapProjection_ != frameState.viewState.projection) {\n        this.mapProjection_ = frameState.viewState.projection;\n        this.transform_ = null;\n      }\n    }\n  };\n  return MousePosition;\n}(Control);\nexport default MousePosition;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport { TRUE } from '../functions.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\nimport { getWidth } from '../extent.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { inView } from '../layer/Layer.js';\nimport { wrapX } from '../coordinate.js';\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature\n * @property {import(\"../layer/Layer.js\").default} layer\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} distanceSq\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback\n * @template T\n */\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */function (_super) {\n  __extends(MapRenderer, _super);\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  function MapRenderer(map) {\n    var _this = _super.call(this) || this;\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    _this.map_ = map;\n    return _this;\n  }\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n    abstract();\n  };\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n    var viewState = frameState.viewState;\n    var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n    composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  };\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, callback, thisArg, layerFilter, thisArg2) {\n    var result;\n    var viewState = frameState.viewState;\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n    var projection = viewState.projection;\n    var translatedCoordinate = wrapX(coordinate.slice(), projection);\n    var offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      var projectionExtent = projection.getExtent();\n      var worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var matches = /** @type {Array<HitMatch<T>>} */[];\n    var tmpCoord = [];\n    for (var i = 0; i < offsets.length; i++) {\n      for (var j = numLayers - 1; j >= 0; --j) {\n        var layerState = layerStates[j];\n        var layer = layerState.layer;\n        if (layer.hasRenderer() && inView(layerState, viewState) && layerFilter.call(thisArg2, layer)) {\n          var layerRenderer = layer.getRenderer();\n          var source = layer.getSource();\n          if (layerRenderer && source) {\n            var coordinates = source.getWrapX() ? translatedCoordinate : coordinate;\n            var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(tmpCoord, frameState, hitTolerance, callback_1, matches);\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    var order = 1 / matches.length;\n    matches.forEach(function (m, i) {\n      return m.distanceSq += i * order;\n    });\n    matches.sort(function (a, b) {\n      return a.distanceSq - b.distanceSq;\n    });\n    matches.some(function (m) {\n      return result = m.callback(m.feature, m.layer, m.geometry);\n    });\n    return result;\n  };\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  };\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, layerFilter, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, checkWrapped, TRUE, this, layerFilter, thisArg);\n    return hasFeature !== undefined;\n  };\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  MapRenderer.prototype.getMap = function () {\n    return this.map_;\n  };\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.renderFrame = function (frameState) {\n    abstract();\n  };\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  };\n  return MapRenderer;\n}(Disposable);\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\nexport default MapRenderer;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { checkedFonts } from '../render/canvas.js';\nimport { inView } from '../layer/Layer.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { replaceChildren } from '../dom.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */function (_super) {\n  __extends(CompositeMapRenderer, _super);\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  function CompositeMapRenderer(map) {\n    var _this = _super.call(this, map) || this;\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    _this.fontChangeListenerKey_ = listen(checkedFonts, ObjectEventType.PROPERTYCHANGE, map.redrawText.bind(map));\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    _this.element_ = document.createElement('div');\n    var style = _this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n    _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n    var container = map.getViewport();\n    container.insertBefore(_this.element_, container.firstChild || null);\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    _this.children_ = [];\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.renderedVisible_ = true;\n    return _this;\n  }\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n    var map = this.getMap();\n    if (map.hasListener(type)) {\n      var event_1 = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event_1);\n    }\n  };\n  CompositeMapRenderer.prototype.disposeInternal = function () {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    _super.prototype.disposeInternal.call(this);\n  };\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n    var layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    var viewState = frameState.viewState;\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    var declutterLayers = [];\n    var previousElement = null;\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (!inView(layerState, viewState) || layerState.sourceState != SourceState.READY && layerState.sourceState != SourceState.UNDEFINED) {\n        continue;\n      }\n      var layer = layerState.layer;\n      var element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(layer);\n      }\n    }\n    for (var i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n    replaceChildren(this.element_, this.children_);\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n    this.scheduleExpireIconCache(frameState);\n  };\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n    var viewState = frameState.viewState;\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    for (var i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (layer.hasRenderer() && inView(layerState, viewState) && layerFilter(layer)) {\n        var layerRenderer = layer.getRenderer();\n        var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n        if (data) {\n          var result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n  return CompositeMapRenderer;\n}(MapRenderer);\nexport default CompositeMapRenderer;\n", "/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign, clear } from '../obj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { getIntersection } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LAYERS: 'layers'\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */function (_super) {\n  __extends(LayerGroup, _super);\n  /**\n   * @param {Options=} opt_options Layer options.\n   */\n  function LayerGroup(opt_options) {\n    var _this = this;\n    var options = opt_options || {};\n    var baseOptions = /** @type {Options} */assign({}, options);\n    delete baseOptions.layers;\n    var layers = options.layers;\n    _this = _super.call(this, baseOptions) || this;\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    _this.layersListenerKeys_ = [];\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    _this.listenerKeys_ = {};\n    _this.addEventListener(getChangeEventType(Property.LAYERS), _this.handleLayersChanged_);\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {\n          unique: true\n        });\n      } else {\n        assert(typeof (/** @type {?} */layers.getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {\n        unique: true\n      });\n    }\n    _this.setLayers(layers);\n    return _this;\n  }\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayerChange_ = function () {\n    this.changed();\n  };\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayersChanged_ = function () {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n    for (var id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n    var layersArray = layers.getArray();\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this), listen(layer, EventType.CHANGE, this.handleLayerChange_, this)];\n    }\n    this.changed();\n  };\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */collectionEvent.element;\n    this.listenerKeys_[getUid(layer)] = [listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this), listen(layer, EventType.CHANGE, this.handleLayerChange_, this)];\n    this.changed();\n  };\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */collectionEvent.element;\n    var key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  };\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.getLayers = function () {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */this.get(Property.LAYERS);\n  };\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.setLayers = function (layers) {\n    this.set(Property.LAYERS, layers);\n  };\n  /**\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  LayerGroup.prototype.getLayersArray = function (opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n  /**\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n    var pos = states.length;\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n    var ownLayerState = this.getLayerState();\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n    return states;\n  };\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  LayerGroup.prototype.getSourceState = function () {\n    return SourceState.READY;\n  };\n  return LayerGroup;\n}(BaseLayer);\nexport default LayerGroup;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */function (_super) {\n  __extends(MapEvent, _super);\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n   */\n  function MapEvent(type, map, opt_frameState) {\n    var _this = _super.call(this, type) || this;\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    _this.map = map;\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n    return _this;\n  }\n  return MapEvent;\n}(Event);\nexport default MapEvent;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nvar MapBrowserEvent = /** @class */function (_super) {\n  __extends(MapBrowserEvent, _super);\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean=} opt_dragging Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n   */\n  function MapBrowserEvent(type, map, originalEvent, opt_dragging, opt_frameState) {\n    var _this = _super.call(this, type, map, opt_frameState) || this;\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    _this.originalEvent = originalEvent;\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    _this.pixel_ = null;\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    _this.coordinate_ = null;\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n    return _this;\n  }\n  Object.defineProperty(MapBrowserEvent.prototype, \"pixel\", {\n    /**\n     * The map pixel relative to the viewport corresponding to the original event.\n     * @type {import(\"./pixel.js\").Pixel}\n     * @api\n     */\n    get: function () {\n      if (!this.pixel_) {\n        this.pixel_ = this.map.getEventPixel(this.originalEvent);\n      }\n      return this.pixel_;\n    },\n    set: function (pixel) {\n      this.pixel_ = pixel;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MapBrowserEvent.prototype, \"coordinate\", {\n    /**\n     * The coordinate corresponding to the original browser event.  This will be in the user\n     * projection if one is set.  Otherwise it will be in the view projection.\n     * @type {import(\"./coordinate.js\").Coordinate}\n     * @api\n     */\n    get: function () {\n      if (!this.coordinate_) {\n        this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n      }\n      return this.coordinate_;\n    },\n    set: function (coordinate) {\n      this.coordinate_ = coordinate;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  MapBrowserEvent.prototype.preventDefault = function () {\n    _super.prototype.preventDefault.call(this);\n    this.originalEvent.preventDefault();\n  };\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  MapBrowserEvent.prototype.stopPropagation = function () {\n    _super.prototype.stopPropagation.call(this);\n    this.originalEvent.stopPropagation();\n  };\n  return MapBrowserEvent;\n}(MapEvent);\nexport default MapBrowserEvent;\n", "/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n", "/**\n * @module ol/MapBrowserEventHandler\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport { DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS } from './has.js';\nimport { listen, unlistenByKey } from './events.js';\nvar MapBrowserEventHandler = /** @class */function (_super) {\n  __extends(MapBrowserEventHandler, _super);\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n   */\n  function MapBrowserEventHandler(map, moveTolerance) {\n    var _this = _super.call(this, map) || this;\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    _this.map_ = map;\n    /**\n     * @type {any}\n     * @private\n     */\n    _this.clickTimeoutId_;\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    _this.emulateClicks_ = false;\n    /**\n     * @type {boolean}\n     * @private\n     */\n    _this.dragging_ = false;\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    _this.dragListenerKeys_ = [];\n    /**\n     * @type {number}\n     * @private\n     */\n    _this.moveTolerance_ = moveTolerance ? moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    _this.down_ = null;\n    var element = _this.map_.getViewport();\n    /**\n     * @type {number}\n     * @private\n     */\n    _this.activePointers_ = 0;\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    _this.trackedTouches_ = {};\n    _this.element_ = element;\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    _this.pointerdownListenerKey_ = listen(element, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    _this.originalPointerMoveEvent_;\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    _this.relayedListenerKey_ = listen(element, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n    /**\n     * @private\n     */\n    _this.boundHandleTouchMove_ = _this.handleTouchMove_.bind(_this);\n    _this.element_.addEventListener(EventType.TOUCHMOVE, _this.boundHandleTouchMove_, PASSIVE_EVENT_LISTENERS ? {\n      passive: false\n    } : false);\n    return _this;\n  }\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n    var newEvent = new MapBrowserEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(/** @this {MapBrowserEventHandler} */\n      function () {\n        this.clickTimeoutId_ = undefined;\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n      }.bind(this), 250);\n    }\n  };\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n    var event = pointerEvent;\n    if (event.type == MapBrowserEventType.POINTERUP || event.type == MapBrowserEventType.POINTERCANCEL) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  };\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (this.emulateClicks_ && !newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n      this.emulateClick_(this.down_);\n    }\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  };\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n    return pointerEvent.button === 0;\n  };\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n    this.down_ = pointerEvent;\n    if (this.dragListenerKeys_.length === 0) {\n      var doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(listen(doc, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n      /* Note that the listener for `pointercancel is set up on\n       * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n       * the `pointerup` and `pointermove` listeners.\n       *\n       * The reason for this is the following: `TouchSource.vacuumTouches_()`\n       * issues `pointercancel` events, when there was no `touchend` for a\n       * `touchstart`. Now, let's say a first `touchstart` is registered on\n       * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n       * But `documentPointerEventHandler_` doesn't know about the first\n       * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n       * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n       * only registered there.\n       */\n      listen(this.element_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(listen(this.element_.getRootNode(), MapBrowserEventType.POINTERUP, this.handlePointerUp_, this));\n      }\n    }\n  };\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n      this.dispatchEvent(newEvent);\n    }\n  };\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n  };\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handleTouchMove_ = function (event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    if (!this.originalPointerMoveEvent_ || this.originalPointerMoveEvent_.defaultPrevented) {\n      event.preventDefault();\n    }\n  };\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n    return this.dragging_ || Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ || Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n  };\n  /**\n   * Clean up.\n   */\n  MapBrowserEventHandler.prototype.disposeInternal = function () {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(EventType.TOUCHMOVE, this.boundHandleTouchMove_);\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n    this.element_ = null;\n    _super.prototype.disposeInternal.call(this);\n  };\n  return MapBrowserEventHandler;\n}(EventTarget);\nexport default MapBrowserEventHandler;\n", "/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */function () {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  function PriorityQueue(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n  /**\n   * FIXME empty description for jsdoc\n   */\n  PriorityQueue.prototype.clear = function () {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  };\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  PriorityQueue.prototype.dequeue = function () {\n    var elements = this.elements_;\n    var priorities = this.priorities_;\n    var element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    var elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  };\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  PriorityQueue.prototype.enqueue = function (element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    var priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  };\n  /**\n   * @return {number} Count.\n   */\n  PriorityQueue.prototype.getCount = function () {\n    return this.elements_.length;\n  };\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n    return index * 2 + 1;\n  };\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n    return index * 2 + 2;\n  };\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  PriorityQueue.prototype.getParentIndex_ = function (index) {\n    return index - 1 >> 1;\n  };\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  PriorityQueue.prototype.heapify_ = function () {\n    var i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  };\n  /**\n   * @return {boolean} Is empty.\n   */\n  PriorityQueue.prototype.isEmpty = function () {\n    return this.elements_.length === 0;\n  };\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  PriorityQueue.prototype.isKeyQueued = function (key) {\n    return key in this.queuedElements_;\n  };\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  PriorityQueue.prototype.isQueued = function (element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  };\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  PriorityQueue.prototype.siftUp_ = function (index) {\n    var elements = this.elements_;\n    var priorities = this.priorities_;\n    var count = elements.length;\n    var element = elements[index];\n    var priority = priorities[index];\n    var startIndex = index;\n    while (index < count >> 1) {\n      var lIndex = this.getLeftChildIndex_(index);\n      var rIndex = this.getRightChildIndex_(index);\n      var smallerChildIndex = rIndex < count && priorities[rIndex] < priorities[lIndex] ? rIndex : lIndex;\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  };\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n    var elements = this.elements_;\n    var priorities = this.priorities_;\n    var element = elements[index];\n    var priority = priorities[index];\n    while (index > startIndex) {\n      var parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  };\n  /**\n   * FIXME empty description for jsdoc\n   */\n  PriorityQueue.prototype.reprioritize = function () {\n    var priorityFunction = this.priorityFunction_;\n    var elements = this.elements_;\n    var priorities = this.priorities_;\n    var index = 0;\n    var n = elements.length;\n    var element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  };\n  return PriorityQueue;\n}();\nexport default PriorityQueue;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, { DROP } from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */function (_super) {\n  __extends(TileQueue, _super);\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  function TileQueue(tilePriorityFunction, tileChangeCallback) {\n    var _this = _super.call(this,\n    /**\n     * @param {Array} element Element.\n     * @return {number} Priority.\n     */\n    function (element) {\n      return tilePriorityFunction.apply(null, element);\n    },\n    /**\n     * @param {Array} element Element.\n     * @return {string} Key.\n     */\n    function (element) {\n      return /** @type {import(\"./Tile.js\").default} */element[0].getKey();\n    }) || this;\n    /** @private */\n    _this.boundHandleTileChange_ = _this.handleTileChange.bind(_this);\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    _this.tileChangeCallback_ = tileChangeCallback;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.tilesLoading_ = 0;\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    _this.tilesLoadingKeys_ = {};\n    return _this;\n  }\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  TileQueue.prototype.enqueue = function (element) {\n    var added = _super.prototype.enqueue.call(this, element);\n    if (added) {\n      var tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  };\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  TileQueue.prototype.getTilesLoading = function () {\n    return this.tilesLoading_;\n  };\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  TileQueue.prototype.handleTileChange = function (event) {\n    var tile = /** @type {import(\"./Tile.js\").default} */event.target;\n    var state = tile.getState();\n    if (tile.hifi && state === TileState.LOADED || state === TileState.ERROR || state === TileState.EMPTY) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      var tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  };\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n    var newLoads = 0;\n    var state, tile, tileKey;\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads && this.getCount() > 0) {\n      tile = /** @type {import(\"./Tile.js\").default} */this.dequeue()[0];\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  };\n  return TileQueue;\n}(PriorityQueue);\nexport default TileQueue;\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(frameState, tile, tileSourceKey, tileCenter, tileResolution) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  var center = frameState.viewState.center;\n  var deltaX = tileCenter[0] - center[0];\n  var deltaY = tileCenter[1] - center[1];\n  return 65536 * Math.log(tileResolution) + Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n}\n", "/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n", "/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @param {Array<number>=} opt_centerShift Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        var shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        var shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        var minX = extent[0] + viewWidth / 2 + shiftX;\n        var maxX = extent[2] - viewWidth / 2 + shiftX;\n        var minY = extent[1] + viewHeight / 2 + shiftY;\n        var maxY = extent[3] - viewHeight / 2 + shiftY;\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n        var x = clamp(center[0], minX, maxX);\n        var y = clamp(center[1], minY, maxY);\n        var ratio = 30 * resolution;\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x += -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) + ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y += -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) + ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n", "/**\n * @module ol/resolutionconstraint\n */\nimport { clamp } from './math.js';\nimport { getHeight, getWidth } from './extent.js';\nimport { linearFindNearest } from './array.js';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize, showFullExtent) {\n  var xResolution = getWidth(maxExtent) / viewportSize[0];\n  var yResolution = getHeight(maxExtent) / viewportSize[1];\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  var result = Math.min(resolution, maxResolution);\n  var ratio = 50;\n  result *= Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio + 1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /= Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) / ratio + 1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        var maxResolution = resolutions[0];\n        var minResolution = resolutions[resolutions.length - 1];\n        var cappedMaxRes = opt_maxExtent ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent) : maxResolution;\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          var smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        var capped = Math.min(cappedMaxRes, resolution);\n        var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        var cappedMaxRes = opt_maxExtent ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent) : maxResolution;\n        var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          var smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        var tolerance = 1e-9;\n        var minZoomLevel = Math.ceil(Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance);\n        var offset = -direction * (0.5 - tolerance) + 0.5;\n        var capped = Math.min(cappedMaxRes, resolution);\n        var cappedZoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n        var zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        var newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        var cappedMaxRes = opt_maxExtent ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent) : maxResolution;\n        var smooth = opt_smooth !== undefined ? opt_smooth : true;\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n", "/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  var tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n", "/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  var x1 = flatCoordinates[offset1];\n  var y1 = flatCoordinates[offset1 + 1];\n  var dx = flatCoordinates[offset2] - x1;\n  var dy = flatCoordinates[offset2 + 1] - y1;\n  var offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (var i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  var i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var index = offset + stride;\n  while (index < end) {\n    assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) / maxDelta | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n", "/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  var twiceArea = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  var area = 0;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var area = 0;\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */function (_super) {\n  __extends(LinearRing, _super);\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  function LinearRing(coordinates, opt_layout) {\n    var _this = _super.call(this) || this;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.maxDelta_ = -1;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.maxDeltaRevision_ = -1;\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */coordinates);\n    } else {\n      _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */coordinates, opt_layout);\n    }\n    return _this;\n  }\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  LinearRing.prototype.clone = function () {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  };\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  LinearRing.prototype.getArea = function () {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  LinearRing.prototype.getCoordinates = function () {\n    return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  LinearRing.prototype.getType = function () {\n    return GeometryType.LINEAR_RING;\n  };\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  LinearRing.prototype.intersectsExtent = function (extent) {\n    return false;\n  };\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n  return LinearRing;\n}(SimpleGeometry);\nexport default LinearRing;\n", "/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  var outside = forEachCorner(extent,\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains (x, y).\n   */\n  function (coordinate) {\n    return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n  });\n  return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n", "/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { linearRingsContainsXY } from './contains.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  var i, ii, x, x1, x2, y1, y2;\n  var y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  var intersections = [];\n  // Calculate intersections with the horizontal line\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\n    var end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if (y <= y1 && y2 <= y || y1 <= y && y <= y2) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  var pointX = NaN;\n  var maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    var segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  var interiorPoints = [];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n", "/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var point2 = [];\n  var ret;\n  for (; offset + stride < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback(point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n", "/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment } from '../../extent.js';\nimport { forEach as forEachSegment } from './segments.js';\nimport { linearRingContainsExtent, linearRingContainsXY } from './contains.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n   * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n   * @return {boolean} `true` if the segment and the extent intersect,\n   *     `false` otherwise.\n   */\n  function (point1, point2) {\n    return intersectsSegment(extent, point1, point2);\n  });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n", "/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (var i = 0; i < stride; ++i) {\n      var tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n", "/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  var edge = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if (right && isClockwise || !right && !isClockwise) {\n        return false;\n      }\n    } else {\n      if (right && !isClockwise || !right && isClockwise) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n    var reverse = i === 0 ? right && isClockwise || !right && !isClockwise : right && !isClockwise || !right && isClockwise;\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { arrayMaxSquaredDelta, assignClosestArrayPoint } from './flat/closest.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { modulo } from '../math.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { offset as sphereOffset } from '../sphere.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */function (_super) {\n  __extends(Polygon, _super);\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n   */\n  function Polygon(coordinates, opt_layout, opt_ends) {\n    var _this = _super.call(this) || this;\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    _this.ends_ = [];\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.flatInteriorPointRevision_ = -1;\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    _this.flatInteriorPoint_ = null;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.maxDelta_ = -1;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.maxDeltaRevision_ = -1;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.orientedRevision_ = -1;\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    _this.orientedFlatCoordinates_ = null;\n    if (opt_layout !== undefined && opt_ends) {\n      _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */coordinates);\n      _this.ends_ = opt_ends;\n    } else {\n      _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */coordinates, opt_layout);\n    }\n    return _this;\n  }\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  Polygon.prototype.appendLinearRing = function (linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  Polygon.prototype.clone = function () {\n    var polygon = new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    polygon.applyProperties(this);\n    return polygon;\n  };\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  Polygon.prototype.containsXY = function (x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  };\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  Polygon.prototype.getArea = function () {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  };\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  Polygon.prototype.getCoordinates = function (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  };\n  /**\n   * @return {Array<number>} Ends.\n   */\n  Polygon.prototype.getEnds = function () {\n    return this.ends_;\n  };\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  Polygon.prototype.getFlatInteriorPoint = function () {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      var flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  };\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  Polygon.prototype.getInteriorPoint = function () {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  };\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRingCount = function () {\n    return this.ends_.length;\n  };\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  Polygon.prototype.getLinearRing = function (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRings = function () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var linearRings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  };\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  Polygon.prototype.getOrientedFlatCoordinates = function () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  Polygon.prototype.getType = function () {\n    return GeometryType.POLYGON;\n  };\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  Polygon.prototype.intersectsExtent = function (extent) {\n    return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  };\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n  return Polygon;\n}(SimpleGeometry);\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  var n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  var flatCoordinates = [];\n  for (var i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var flatCoordinates = [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  var sides = opt_sides ? opt_sides : 32;\n  var stride = circle.getStride();\n  var layout = circle.getLayout();\n  var center = circle.getCenter();\n  var arrayLength = stride * (sides + 1);\n  var flatCoordinates = new Array(arrayLength);\n  for (var i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (var j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  var ends = [flatCoordinates.length];\n  var polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  var flatCoordinates = polygon.getFlatCoordinates();\n  var stride = polygon.getStride();\n  var sides = flatCoordinates.length / stride - 1;\n  var startAngle = opt_angle ? opt_angle : 0;\n  for (var i = 0; i <= sides; ++i) {\n    var offset = i * stride;\n    var angle = startAngle + modulo(i, sides) * 2 * Math.PI / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { METERS_PER_UNIT, createProjection, fromUserCoordinate, fromUserExtent, getUserProjection, toUserCoordinate, toUserExtent } from './proj.js';\nimport { VOID } from './functions.js';\nimport { add as addCoordinate, equals as coordinatesEqual, rotate as rotateCoordinate } from './coordinate.js';\nimport { assert } from './asserts.js';\nimport { assign } from './obj.js';\nimport { none as centerNone, createExtent } from './centerconstraint.js';\nimport { clamp, modulo } from './math.js';\nimport { createMinMaxResolution } from './resolutionconstraint.js';\nimport { createSnapToN, createSnapToZero, disable, none as rotationNone } from './rotationconstraint.js';\nimport { createSnapToPower, createSnapToResolutions } from './resolutionconstraint.js';\nimport { easeOut } from './easing.js';\nimport { equals } from './coordinate.js';\nimport { getCenter, getForViewAndSize, getHeight, getWidth, isEmpty } from './extent.js';\nimport { inAndOut } from './easing.js';\nimport { linearFindNearest } from './array.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean):void} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */function (_super) {\n  __extends(View, _super);\n  /**\n   * @param {ViewOptions=} opt_options View options.\n   */\n  function View(opt_options) {\n    var _this = _super.call(this) || this;\n    var options = assign({}, opt_options);\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    _this.hints_ = [0, 0];\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    _this.animations_ = [];\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    _this.updateAnimationKey_;\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    _this.viewportSize_ = [100, 100];\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    _this.targetCenter_ = null;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    _this.targetResolution_;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    _this.targetRotation_;\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    _this.cancelAnchor_ = undefined;\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, _this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, _this.projection_);\n    }\n    _this.applyOptions_(options);\n    return _this;\n  }\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  View.prototype.applyOptions_ = function (options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = {};\n    var resolutionConstraintInfo = createResolutionConstraint(options);\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n    /**\n     * Padding (in css pixels).\n     * If the map viewport is partially covered with other content (overlays) along\n     * its edges, this setting allows to shift the center of the viewport away from that\n     * content. The order of the values in the array is top, right, bottom, left.\n     * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n     * @type {Array<number>|undefined}\n     * @api\n     */\n    this.padding = options.padding;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n    var centerConstraint = createCenterConstraint(options);\n    var resolutionConstraint = resolutionConstraintInfo.constraint;\n    var rotationConstraint = createRotationConstraint(options);\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint\n    };\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(options.center !== undefined ? options.center : null);\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n    this.setProperties(properties);\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  };\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  View.prototype.getUpdatedOptions_ = function (newOptions) {\n    var options = assign({}, this.options_);\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n    // preserve center\n    options.center = this.getCenterInternal();\n    // preserve rotation\n    options.rotation = this.getRotation();\n    return assign({}, options, newOptions);\n  };\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  View.prototype.animate = function (var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; ++i) {\n      var options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(options.center, this.getProjection());\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(options.anchor, this.getProjection());\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  };\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  View.prototype.animateInternal = function (var_args) {\n    var animationCount = arguments.length;\n    var callback;\n    if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      var state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    var start = Date.now();\n    var center = this.targetCenter_.slice();\n    var resolution = this.targetResolution_;\n    var rotation = this.targetRotation_;\n    var series = [];\n    for (var i = 0; i < animationCount; ++i) {\n      var options = /** @type {AnimationOptions} */arguments[i];\n      var animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback\n      };\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  };\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  View.prototype.getAnimating = function () {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  };\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  View.prototype.getInteracting = function () {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  };\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  View.prototype.cancelAnimations = function () {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    var anchor;\n    for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n      var series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (var j = 0, jj = series.length; j < jj; ++j) {\n          var animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n  };\n  /**\n   * Update all animations.\n   */\n  View.prototype.updateAnimations_ = function () {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    var now = Date.now();\n    var more = false;\n    for (var i = this.animations_.length - 1; i >= 0; --i) {\n      var series = this.animations_[i];\n      var seriesComplete = true;\n      for (var j = 0, jj = series.length; j < jj; ++j) {\n        var animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        var elapsed = now - animation.start;\n        var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        var progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          var x0 = animation.sourceCenter[0];\n          var y0 = animation.sourceCenter[1];\n          var x1 = animation.targetCenter[0];\n          var y1 = animation.targetCenter[1];\n          var x = x0 + progress * (x1 - x0);\n          var y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          var resolution = progress === 1 ? animation.targetResolution : animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            var size = this.getViewportSize_(this.getRotation());\n            var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n            this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n          }\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n          var rotation = progress === 1 ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI : animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            var constrainedRotation = this.constraints_.rotation(rotation, true);\n            this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n          }\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        var callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n    }\n  };\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  View.prototype.calculateCenterRotate = function (rotation, anchor) {\n    var center;\n    var currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  };\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  View.prototype.calculateCenterZoom = function (resolution, anchor) {\n    var center;\n    var currentCenter = this.getCenterInternal();\n    var currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n      var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  };\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  View.prototype.getViewportSize_ = function (opt_rotation) {\n    var size = this.viewportSize_;\n    if (opt_rotation) {\n      var w = size[0];\n      var h = size[1];\n      return [Math.abs(w * Math.cos(opt_rotation)) + Math.abs(h * Math.sin(opt_rotation)), Math.abs(w * Math.sin(opt_rotation)) + Math.abs(h * Math.cos(opt_rotation))];\n    } else {\n      return size;\n    }\n  };\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size=} opt_size Viewport size; if undefined, [100, 100] is assumed\n   */\n  View.prototype.setViewportSize = function (opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size) ? opt_size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  };\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getCenter = function () {\n    var center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  };\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  View.prototype.getCenterInternal = function () {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */this.get(ViewProperty.CENTER);\n  };\n  /**\n   * @return {Constraints} Constraints.\n   */\n  View.prototype.getConstraints = function () {\n    return this.constraints_;\n  };\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  View.prototype.getConstrainResolution = function () {\n    return this.options_.constrainResolution;\n  };\n  /**\n   * @param {Array<number>=} opt_hints Destination array.\n   * @return {Array<number>} Hint.\n   */\n  View.prototype.getHints = function (opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  };\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  View.prototype.calculateExtent = function (opt_size) {\n    var extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  };\n  /**\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  View.prototype.calculateExtentInternal = function (opt_size) {\n    var size = opt_size || this.getViewportSize_();\n    var center = /** @type {!import(\"./coordinate.js\").Coordinate} */this.getCenterInternal();\n    assert(center, 1); // The view center is not defined\n    var resolution = /** @type {!number} */this.getResolution();\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    var rotation = /** @type {!number} */this.getRotation();\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n    return getForViewAndSize(center, resolution, rotation, size);\n  };\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  View.prototype.getMaxResolution = function () {\n    return this.maxResolution_;\n  };\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  View.prototype.getMinResolution = function () {\n    return this.minResolution_;\n  };\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  View.prototype.getMaxZoom = function () {\n    return /** @type {number} */this.getZoomForResolution(this.minResolution_);\n  };\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  View.prototype.setMaxZoom = function (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({\n      maxZoom: zoom\n    }));\n  };\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  View.prototype.getMinZoom = function () {\n    return /** @type {number} */this.getZoomForResolution(this.maxResolution_);\n  };\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  View.prototype.setMinZoom = function (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({\n      minZoom: zoom\n    }));\n  };\n  /**\n   * Set whether the view shoud allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  View.prototype.setConstrainResolution = function (enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({\n      constrainResolution: enabled\n    }));\n  };\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  View.prototype.getProjection = function () {\n    return this.projection_;\n  };\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getResolution = function () {\n    return /** @type {number|undefined} */this.get(ViewProperty.RESOLUTION);\n  };\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  View.prototype.getResolutions = function () {\n    return this.resolutions_;\n  };\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  View.prototype.getResolutionForExtent = function (extent, opt_size) {\n    return this.getResolutionForExtentInternal(fromUserExtent(extent, this.getProjection()), opt_size);\n  };\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  View.prototype.getResolutionForExtentInternal = function (extent, opt_size) {\n    var size = opt_size || this.getViewportSize_();\n    var xResolution = getWidth(extent) / size[0];\n    var yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  };\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  View.prototype.getResolutionForValueFunction = function (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        var resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  };\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.getRotation = function () {\n    return /** @type {number} */this.get(ViewProperty.ROTATION);\n  };\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  View.prototype.getValueForResolutionFunction = function (opt_power) {\n    var logPower = Math.log(opt_power || 2);\n    var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        var value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  };\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  View.prototype.getViewportSizeMinusPadding_ = function (opt_rotation) {\n    var size = this.getViewportSize_(opt_rotation);\n    var padding = this.padding;\n    if (padding) {\n      size = [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]];\n    }\n    return size;\n  };\n  /**\n   * @return {State} View state.\n   */\n  View.prototype.getState = function () {\n    var projection = this.getProjection();\n    var resolution = /** @type {number} */this.getResolution();\n    var rotation = this.getRotation();\n    var center = /** @type {import(\"./coordinate.js\").Coordinate} */this.getCenterInternal();\n    var padding = this.padding;\n    if (padding) {\n      var reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(center, this.getViewportSize_(), [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]], resolution, rotation);\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom()\n    };\n  };\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  View.prototype.getZoom = function () {\n    var zoom;\n    var resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  };\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  View.prototype.getZoomForResolution = function (resolution) {\n    var offset = this.minZoom_ || 0;\n    var max, zoomFactor;\n    if (this.resolutions_) {\n      var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  };\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  View.prototype.getResolutionForZoom = function (zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n      var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return this.resolutions_[baseLevel] / Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1));\n    } else {\n      return this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_);\n    }\n  };\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions=} opt_options Options.\n   * @api\n   */\n  View.prototype.fit = function (geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    var geometry;\n    assert(Array.isArray(geometryOrExtent) || typeof (/** @type {?} */geometryOrExtent.getSimplifiedGeometry) === 'function', 24); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      var extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      var extent = fromUserExtent(geometryOrExtent.getExtent(), this.getProjection());\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      var userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */geometryOrExtent.clone().transform(userProjection, this.getProjection());\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n    this.fitInternal(geometry, opt_options);\n  };\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions=} opt_options Options.\n   */\n  View.prototype.fitInternal = function (geometry, opt_options) {\n    var options = opt_options || {};\n    var size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    var nearest = options.nearest !== undefined ? options.nearest : false;\n    var minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n    var coords = geometry.getFlatCoordinates();\n    // calculate rotated extent\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var minRotX = +Infinity;\n    var minRotY = +Infinity;\n    var maxRotX = -Infinity;\n    var maxRotY = -Infinity;\n    var stride = geometry.getStride();\n    for (var i = 0, ii = coords.length; i < ii; i += stride) {\n      var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    // calculate resolution\n    var resolution = this.getResolutionForExtentInternal([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n    resolution = isNaN(resolution) ? minResolution : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerRotX = (minRotX + maxRotX) / 2;\n    var centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n    centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n    var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    var center = this.getConstrainedCenter([centerX, centerY], resolution);\n    var callback = options.callback ? options.callback : VOID;\n    if (options.duration !== undefined) {\n      this.animateInternal({\n        resolution: resolution,\n        center: center,\n        duration: options.duration,\n        easing: options.easing\n      }, callback);\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  };\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  View.prototype.centerOn = function (coordinate, size, position) {\n    this.centerOnInternal(fromUserCoordinate(coordinate, this.getProjection()), size, position);\n  };\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  View.prototype.centerOnInternal = function (coordinate, size, position) {\n    this.setCenterInternal(calculateCenterOn(coordinate, size, position, this.getResolution(), this.getRotation()));\n  };\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  View.prototype.calculateCenterShift = function (center, resolution, rotation, size) {\n    var centerShift;\n    var padding = this.padding;\n    if (padding && center) {\n      var reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      var shiftedCenter = calculateCenterOn(center, size, [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]], resolution, rotation);\n      centerShift = [center[0] - shiftedCenter[0], center[1] - shiftedCenter[1]];\n    }\n    return centerShift;\n  };\n  /**\n   * @return {boolean} Is defined.\n   */\n  View.prototype.isDef = function () {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  };\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  View.prototype.adjustCenter = function (deltaCoordinates) {\n    var center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\n  };\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  View.prototype.adjustCenterInternal = function (deltaCoordinates) {\n    var center = this.targetCenter_;\n    this.setCenterInternal([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\n  };\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   * @api\n   */\n  View.prototype.adjustResolution = function (ratio, opt_anchor) {\n    var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  };\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   */\n  View.prototype.adjustResolutionInternal = function (ratio, opt_anchor) {\n    var isMoving = this.getAnimating() || this.getInteracting();\n    var size = this.getViewportSize_(this.getRotation());\n    var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  };\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   * @api\n   */\n  View.prototype.adjustZoom = function (delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  };\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  View.prototype.adjustRotation = function (delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  };\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   */\n  View.prototype.adjustRotationInternal = function (delta, opt_anchor) {\n    var isMoving = this.getAnimating() || this.getInteracting();\n    var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  };\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setCenter = function (center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  };\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  View.prototype.setCenterInternal = function (center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  };\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  View.prototype.setHint = function (hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  };\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setResolution = function (resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  };\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.setRotation = function (rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  };\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  View.prototype.setZoom = function (zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  };\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n   * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n   * @private\n   */\n  View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n    var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n    // compute rotation\n    var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n    var size = this.getViewportSize_(newRotation);\n    var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n    var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving, this.calculateCenterShift(this.targetCenter_, newResolution, newRotation, size));\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (!this.get(ViewProperty.CENTER) || !equals(this.get(ViewProperty.CENTER), newCenter)) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  };\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number=} opt_duration The animation duration in ms.\n   * @param {number=} opt_resolutionDirection Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   */\n  View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n    var duration = opt_duration !== undefined ? opt_duration : 200;\n    var direction = opt_resolutionDirection || 0;\n    var newRotation = this.constraints_.rotation(this.targetRotation_);\n    var size = this.getViewportSize_(newRotation);\n    var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n    var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, false, this.calculateCenterShift(this.targetCenter_, newResolution, newRotation, size));\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n    var anchor = opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n    if (this.getResolution() !== newResolution || this.getRotation() !== newRotation || !this.getCenterInternal() || !equals(this.getCenterInternal(), newCenter)) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor\n      });\n    }\n  };\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  View.prototype.beginInteraction = function () {\n    this.resolveConstraints(0);\n    this.setHint(ViewHint.INTERACTING, 1);\n  };\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number=} opt_duration Animation duration in ms.\n   * @param {number=} opt_resolutionDirection Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   * @api\n   */\n  View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n    var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  };\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number=} opt_duration Animation duration in ms.\n   * @param {number=} opt_resolutionDirection Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   */\n  View.prototype.endInteractionInternal = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  };\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n    var size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n  };\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number=} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n    var targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(this.getConstrainedResolution(targetRes, opt_direction));\n  };\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number=} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n    var direction = opt_direction || 0;\n    var size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.resolution(targetResolution, direction, size);\n  };\n  return View;\n}(BaseObject);\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    var smooth = options.smoothExtentConstraint !== undefined ? options.smoothExtentConstraint : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n  var projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    var extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n  return centerNone;\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  var resolutionConstraint;\n  var maxResolution;\n  var minResolution;\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  var defaultMaxZoom = 28;\n  var defaultZoomFactor = 2;\n  var minZoom = options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n  var maxZoom = options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n  var zoomFactor = options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n  var multiWorld = options.multiWorld !== undefined ? options.multiWorld : false;\n  var smooth = options.smoothResolutionConstraint !== undefined ? options.smoothResolutionConstraint : true;\n  var showFullExtent = options.showFullExtent !== undefined ? options.showFullExtent : false;\n  var projection = createProjection(options.projection, 'EPSG:3857');\n  var projExtent = projection.getExtent();\n  var constrainOnlyCenter = options.constrainOnlyCenter;\n  var extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n  if (options.resolutions !== undefined) {\n    var resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ? resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(resolutions, smooth, !constrainOnlyCenter && extent, showFullExtent);\n    } else {\n      resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n    }\n  } else {\n    // calculate the default min and max resolution\n    var size = !projExtent ?\n    // use an extent that can fit the whole world if need be\n    360 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit() : Math.max(getWidth(projExtent), getHeight(projExtent));\n    var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n    var defaultMinResolution = defaultMaxResolution / Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n    } else {\n      resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor\n  };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  var enableRotation = options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    var constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  var cosAngle = Math.cos(-rotation);\n  var sinAngle = Math.sin(-rotation);\n  var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  var centerX = rotX * cosAngle - rotY * sinAngle;\n  var centerY = rotY * cosAngle + rotX * sinAngle;\n  return [centerX, centerY];\n}\nexport default View;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/PluggableMap\n */\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, { getTilePriority } from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { DEVICE_PIXEL_RATIO, IMAGE_DECODE, PASSIVE_EVENT_LISTENERS } from './has.js';\nimport { TRUE } from './functions.js';\nimport { apply as applyTransform, create as createTransform } from './transform.js';\nimport { assert } from './asserts.js';\nimport { clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty } from './extent.js';\nimport { fromUserCoordinate, toUserCoordinate } from './proj.js';\nimport { hasArea } from './size.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { removeNode } from './dom.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {import(\"rbush\").default} declutterTree\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {number} layerIndex\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */function (_super) {\n  __extends(PluggableMap, _super);\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  function PluggableMap(options) {\n    var _this = _super.call(this) || this;\n    var optionsInternal = createOptionsInternal(options);\n    /** @private */\n    _this.boundHandleBrowserEvent_ = _this.handleBrowserEvent.bind(_this);\n    /**\n     * @type {number}\n     * @private\n     */\n    _this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.pixelRatio_ = options.pixelRatio !== undefined ? options.pixelRatio : DEVICE_PIXEL_RATIO;\n    /**\n     * @private\n     * @type {*}\n     */\n    _this.postRenderTimeoutHandle_;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    _this.animationDelayKey_;\n    /**\n     * @private\n     */\n    _this.animationDelay_ = /** @this {PluggableMap} */function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(_this);\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    _this.coordinateToPixelTransform_ = createTransform();\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    _this.pixelToCoordinateTransform_ = createTransform();\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.frameIndex_ = 0;\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    _this.frameState_ = null;\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    _this.previousExtent_ = null;\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    _this.viewPropertyListenerKey_ = null;\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    _this.viewChangeListenerKey_ = null;\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    _this.layerGroupPropertyListenerKeys_ = null;\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    _this.viewport_ = document.createElement('div');\n    _this.viewport_.className = 'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    _this.viewport_.style.position = 'relative';\n    _this.viewport_.style.overflow = 'hidden';\n    _this.viewport_.style.width = '100%';\n    _this.viewport_.style.height = '100%';\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    _this.overlayContainer_ = document.createElement('div');\n    _this.overlayContainer_.style.position = 'absolute';\n    _this.overlayContainer_.style.zIndex = '0';\n    _this.overlayContainer_.style.width = '100%';\n    _this.overlayContainer_.style.height = '100%';\n    _this.overlayContainer_.style.pointerEvents = 'none';\n    _this.overlayContainer_.className = 'ol-overlaycontainer';\n    _this.viewport_.appendChild(_this.overlayContainer_);\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    _this.overlayContainerStopEvent_ = document.createElement('div');\n    _this.overlayContainerStopEvent_.style.position = 'absolute';\n    _this.overlayContainerStopEvent_.style.zIndex = '0';\n    _this.overlayContainerStopEvent_.style.width = '100%';\n    _this.overlayContainerStopEvent_.style.height = '100%';\n    _this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    _this.mapBrowserEventHandler_ = null;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.moveTolerance_ = options.moveTolerance;\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    _this.keyHandlerKeys_ = null;\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    _this.controls = optionsInternal.controls || new Collection();\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    _this.interactions = optionsInternal.interactions || new Collection();\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    _this.overlays_ = optionsInternal.overlays;\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    _this.overlayIdIndex_ = {};\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    _this.renderer_ = null;\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    _this.handleResize_;\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    _this.postRenderFunctions_ = [];\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n    _this.addEventListener(getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_);\n    _this.addEventListener(getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_);\n    _this.addEventListener(getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_);\n    _this.addEventListener(getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_);\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    _this.setProperties(optionsInternal.values);\n    _this.controls.forEach(\n    /**\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @this {PluggableMap}\n     */\n    function (control) {\n      control.setMap(this);\n    }.bind(_this));\n    _this.controls.addEventListener(CollectionEventType.ADD,\n    /**\n     * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n     */\n    function (event) {\n      event.element.setMap(this);\n    }.bind(_this));\n    _this.controls.addEventListener(CollectionEventType.REMOVE,\n    /**\n     * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n     */\n    function (event) {\n      event.element.setMap(null);\n    }.bind(_this));\n    _this.interactions.forEach(\n    /**\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n     * @this {PluggableMap}\n     */\n    function (interaction) {\n      interaction.setMap(this);\n    }.bind(_this));\n    _this.interactions.addEventListener(CollectionEventType.ADD,\n    /**\n     * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n     */\n    function (event) {\n      event.element.setMap(this);\n    }.bind(_this));\n    _this.interactions.addEventListener(CollectionEventType.REMOVE,\n    /**\n     * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n     */\n    function (event) {\n      event.element.setMap(null);\n    }.bind(_this));\n    _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n    _this.overlays_.addEventListener(CollectionEventType.ADD,\n    /**\n     * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n     */\n    function (event) {\n      this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */event.element);\n    }.bind(_this));\n    _this.overlays_.addEventListener(CollectionEventType.REMOVE,\n    /**\n     * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n     */\n    function (event) {\n      var overlay = /** @type {import(\"./Overlay.js\").default} */event.element;\n      var id = overlay.getId();\n      if (id !== undefined) {\n        delete this.overlayIdIndex_[id.toString()];\n      }\n      event.element.setMap(null);\n    }.bind(_this));\n    return _this;\n  }\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  PluggableMap.prototype.createRenderer = function () {\n    throw new Error('Use a map type that has a createRenderer method');\n  };\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  PluggableMap.prototype.addControl = function (control) {\n    this.getControls().push(control);\n  };\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  PluggableMap.prototype.addInteraction = function (interaction) {\n    this.getInteractions().push(interaction);\n  };\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  PluggableMap.prototype.addLayer = function (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  };\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  PluggableMap.prototype.addOverlay = function (overlay) {\n    this.getOverlays().push(overlay);\n  };\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n    var id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  };\n  /**\n   *\n   * Clean up.\n   */\n  PluggableMap.prototype.disposeInternal = function () {\n    this.setTarget(null);\n    _super.prototype.disposeInternal.call(this);\n  };\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    var checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, callback, null, layerFilter, null);\n  };\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n    var features = [];\n    this.forEachFeatureAtPixel(pixel, function (feature) {\n      features.push(feature);\n    }, opt_options);\n    return features;\n  };\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var options = opt_options || {};\n    var hitTolerance = options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    var layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n  };\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    var coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    var checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, layerFilter, null);\n  };\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  PluggableMap.prototype.getEventCoordinate = function (event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  };\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  PluggableMap.prototype.getEventCoordinateInternal = function (event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  };\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  PluggableMap.prototype.getEventPixel = function (event) {\n    var viewportPosition = this.viewport_.getBoundingClientRect();\n    var eventPosition =\n    //FIXME Are we really calling this with a TouchEvent anywhere?\n    'changedTouches' in event ? /** @type {TouchEvent} */event.changedTouches[0] : (/** @type {MouseEvent} */event);\n    return [eventPosition.clientX - viewportPosition.left, eventPosition.clientY - viewportPosition.top];\n  };\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getTarget = function () {\n    return /** @type {HTMLElement|string|undefined} */this.get(MapProperty.TARGET);\n  };\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  PluggableMap.prototype.getTargetElement = function () {\n    var target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string' ? document.getElementById(target) : target;\n    } else {\n      return null;\n    }\n  };\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n    return toUserCoordinate(this.getCoordinateFromPixelInternal(pixel), this.getView().getProjection());\n  };\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  PluggableMap.prototype.getCoordinateFromPixelInternal = function (pixel) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    }\n  };\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  PluggableMap.prototype.getControls = function () {\n    return this.controls;\n  };\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  PluggableMap.prototype.getOverlays = function () {\n    return this.overlays_;\n  };\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  PluggableMap.prototype.getOverlayById = function (id) {\n    var overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  };\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  PluggableMap.prototype.getInteractions = function () {\n    return this.interactions;\n  };\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getLayerGroup = function () {\n    return /** @type {LayerGroup} */this.get(MapProperty.LAYERGROUP);\n  };\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  PluggableMap.prototype.getLayers = function () {\n    var layers = this.getLayerGroup().getLayers();\n    return layers;\n  };\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  PluggableMap.prototype.getLoading = function () {\n    var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layer = layerStatesArray[i].layer;\n      var source = /** @type {import(\"./layer/Layer.js\").default} */layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  };\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n    var viewCoordinate = fromUserCoordinate(coordinate, this.getView().getProjection());\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  };\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  PluggableMap.prototype.getPixelFromCoordinateInternal = function (coordinate) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n    }\n  };\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  PluggableMap.prototype.getRenderer = function () {\n    return this.renderer_;\n  };\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getSize = function () {\n    return /** @type {import(\"./size.js\").Size|undefined} */this.get(MapProperty.SIZE);\n  };\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getView = function () {\n    return /** @type {View} */this.get(MapProperty.VIEW);\n  };\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  PluggableMap.prototype.getViewport = function () {\n    return this.viewport_;\n  };\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  PluggableMap.prototype.getOverlayContainer = function () {\n    return this.overlayContainer_;\n  };\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n    return this.overlayContainerStopEvent_;\n  };\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  PluggableMap.prototype.getOwnerDocument = function () {\n    return this.getTargetElement() ? this.getTargetElement().ownerDocument : document;\n  };\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(this.frameState_, tile, tileSourceKey, tileCenter, tileResolution);\n  };\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n    var type = opt_type || browserEvent.type;\n    var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  };\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    var originalEvent = /** @type {PointerEvent} */mapBrowserEvent.originalEvent;\n    var eventType = originalEvent.type;\n    if (eventType === PointerEventType.POINTERDOWN || eventType === EventType.WHEEL || eventType === EventType.KEYDOWN) {\n      var doc = this.getOwnerDocument();\n      var rootNode = this.viewport_.getRootNode ? this.viewport_.getRootNode() : doc;\n      var target = 'host' in rootNode // ShadowRoot\n      ? /** @type {ShadowRoot} */rootNode.elementFromPoint(originalEvent.clientX, originalEvent.clientY) : (/** @type {Node} */originalEvent.target);\n      if (\n      // Abort if the target is a child of the container for elements whose events are not meant\n      // to be handled by map interactions.\n      this.overlayContainerStopEvent_.contains(target) ||\n      // Abort if the event target is a child of the container that is no longer in the page.\n      // It's possible for the target to no longer be in the page if it has been removed in an\n      // event listener, this might happen in a Control that recreates it's content based on\n      // user interaction either manually or via a render in something like https://reactjs.org/\n      !(rootNode === doc ? doc.documentElement : rootNode).contains(target)) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      var interactionsArray = this.getInteractions().getArray().slice();\n      for (var i = interactionsArray.length - 1; i >= 0; i--) {\n        var interaction = interactionsArray[i];\n        if (interaction.getMap() !== this || !interaction.getActive() || !this.getTargetElement()) {\n          continue;\n        }\n        var cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  };\n  /**\n   * @protected\n   */\n  PluggableMap.prototype.handlePostRender = function () {\n    var frameState = this.frameState_;\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    var tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      var maxTotalLoading = this.maxTilesLoading_;\n      var maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        var hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          var lowOnFrameBudget = !IMAGE_DECODE && Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n    if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate && !this.tileQueue_.getTilesLoading() && !this.getLoading()) {\n      this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n    }\n    var postRenderFunctions = this.postRenderFunctions_;\n    for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  };\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleSizeChanged_ = function () {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n    this.render();\n  };\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTargetChanged_ = function () {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n    var targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n    if (this.mapBrowserEventHandler_) {\n      for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_);\n      this.viewport_.removeEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_);\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, this.moveTolerance_);\n      for (var key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(MapBrowserEventType[key], this.handleMapBrowserEvent.bind(this));\n      }\n      this.viewport_.addEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_, false);\n      this.viewport_.addEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_, PASSIVE_EVENT_LISTENERS ? {\n        passive: false\n      } : false);\n      var keyboardEventTarget = !this.keyboardEventTarget_ ? targetElement : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this), listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)];\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  };\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTileChange_ = function () {\n    this.render();\n  };\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n    this.render();\n  };\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewChanged_ = function () {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    var view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n      this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n      this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n      view.resolveConstraints(0);\n    }\n    this.render();\n  };\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    var layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this), listen(layerGroup, EventType.CHANGE, this.render, this)];\n    }\n    this.render();\n  };\n  /**\n   * @return {boolean} Is rendered.\n   */\n  PluggableMap.prototype.isRendered = function () {\n    return !!this.frameState_;\n  };\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  PluggableMap.prototype.renderSync = function () {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  };\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  PluggableMap.prototype.redrawText = function () {\n    var layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (var i = 0, ii = layerStates.length; i < ii; ++i) {\n      var layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  };\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  PluggableMap.prototype.render = function () {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  };\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeControl = function (control) {\n    return this.getControls().remove(control);\n  };\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeInteraction = function (interaction) {\n    return this.getInteractions().remove(interaction);\n  };\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeLayer = function (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  };\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeOverlay = function (overlay) {\n    return this.getOverlays().remove(overlay);\n  };\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  PluggableMap.prototype.renderFrame_ = function (time) {\n    var _this = this;\n    var size = this.getSize();\n    var view = this.getView();\n    var previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    var frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n      var viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, size),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {}\n      };\n    }\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n      if (previousFrameState) {\n        var moveStart = !this.previousExtent_ || !isEmpty(this.previousExtent_) && !equals(frameState.extent, this.previousExtent_);\n        if (moveStart) {\n          this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n      var idle = this.previousExtent_ && !frameState.viewHints[ViewHint.ANIMATING] && !frameState.viewHints[ViewHint.INTERACTING] && !equals(frameState.extent, this.previousExtent_);\n      if (idle) {\n        this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(function () {\n        _this.postRenderTimeoutHandle_ = undefined;\n        _this.handlePostRender();\n      }, 0);\n    }\n  };\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  };\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setSize = function (size) {\n    this.set(MapProperty.SIZE, size);\n  };\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setTarget = function (target) {\n    this.set(MapProperty.TARGET, target);\n  };\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setView = function (view) {\n    this.set(MapProperty.VIEW, view);\n  };\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.updateSize = function () {\n    var targetElement = this.getTargetElement();\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      var computedStyle = getComputedStyle(targetElement);\n      this.setSize([targetElement.offsetWidth - parseFloat(computedStyle['borderLeftWidth']) - parseFloat(computedStyle['paddingLeft']) - parseFloat(computedStyle['paddingRight']) - parseFloat(computedStyle['borderRightWidth']), targetElement.offsetHeight - parseFloat(computedStyle['borderTopWidth']) - parseFloat(computedStyle['paddingTop']) - parseFloat(computedStyle['paddingBottom']) - parseFloat(computedStyle['borderBottomWidth'])]);\n    }\n    this.updateViewportSize_();\n  };\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  PluggableMap.prototype.updateViewportSize_ = function () {\n    var view = this.getView();\n    if (view) {\n      var size = undefined;\n      var computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [parseInt(computedStyle.width, 10), parseInt(computedStyle.height, 10)];\n      }\n      view.setViewportSize(size);\n    }\n  };\n  return PluggableMap;\n}(BaseObject);\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  var keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ? document.getElementById(options.keyboardEventTarget) : options.keyboardEventTarget;\n  }\n  /**\n   * @type {Object<string, *>}\n   */\n  var values = {};\n  var layerGroup = options.layers && typeof (/** @type {?} */options.layers.getLayers) === 'function' ? (/** @type {LayerGroup} */options.layers) : new LayerGroup({\n    layers: (/** @type {Collection} */options.layers)\n  });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n  values[MapProperty.TARGET] = options.target;\n  values[MapProperty.VIEW] = options.view !== undefined ? options.view : new View();\n  var controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(typeof (/** @type {?} */options.controls.getArray) === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */options.controls;\n    }\n  }\n  var interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(typeof (/** @type {?} */options.interactions.getArray) === 'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */options.interactions;\n    }\n  }\n  var overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(typeof (/** @type {?} */options.overlays.getArray) === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n}\nexport default PluggableMap;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/control/OverviewMap\n */\nimport CompositeMapRenderer from '../renderer/Composite.js';\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport OverlayPositioning from '../OverlayPositioning.js';\nimport PluggableMap from '../PluggableMap.js';\nimport View from '../View.js';\nimport ViewProperty from '../ViewProperty.js';\nimport { CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { containsExtent, equals as equalsExtent, getBottomRight, getTopLeft, scaleFromCenter } from '../extent.js';\nimport { getChangeEventType } from '../Object.js';\nimport { listen, listenOnce } from '../events.js';\nimport { fromExtent as polygonFromExtent } from '../geom/Polygon.js';\nimport { replaceNode } from '../dom.js';\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nvar MAX_RATIO = 0.75;\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nvar MIN_RATIO = 0.1;\nvar ControlledMap = /** @class */function (_super) {\n  __extends(ControlledMap, _super);\n  function ControlledMap() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ControlledMap.prototype.createRenderer = function () {\n    return new CompositeMapRenderer(this);\n  };\n  return ControlledMap;\n}(PluggableMap);\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='Â«'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='Â»'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Layer.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Layer.js\").default>} [layers]\n * Layers for the overview map.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {boolean} [rotateWithView=false] Whether the control view should rotate with the main map view.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {View} [view] Custom view for the overview map (should use same projection as main map). If not provided,\n * a default view with the same projection as the main map will be used.\n */\n/**\n * Create a new control with a map acting as an overview map for another\n * defined map.\n *\n * @api\n */\nvar OverviewMap = /** @class */function (_super) {\n  __extends(OverviewMap, _super);\n  /**\n   * @param {Options=} opt_options OverviewMap options.\n   */\n  function OverviewMap(opt_options) {\n    var _this = this;\n    var options = opt_options ? opt_options : {};\n    _this = _super.call(this, {\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target\n    }) || this;\n    /**\n     * @private\n     */\n    _this.boundHandleRotationChanged_ = _this.handleRotationChanged_.bind(_this);\n    /**\n     * @type {boolean}\n     * @private\n     */\n    _this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.collapsible_ = options.collapsible !== undefined ? options.collapsible : true;\n    if (!_this.collapsible_) {\n      _this.collapsed_ = false;\n    }\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.rotateWithView_ = options.rotateWithView !== undefined ? options.rotateWithView : false;\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    _this.viewExtent_ = undefined;\n    var className = options.className !== undefined ? options.className : 'ol-overviewmap';\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00AB';\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      _this.collapseLabel_ = document.createElement('span');\n      _this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      _this.collapseLabel_ = collapseLabel;\n    }\n    var label = options.label !== undefined ? options.label : '\\u00BB';\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      _this.label_ = document.createElement('span');\n      _this.label_.textContent = label;\n    } else {\n      _this.label_ = label;\n    }\n    var activeLabel = _this.collapsible_ && !_this.collapsed_ ? _this.collapseLabel_ : _this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n    button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    _this.ovmapDiv_ = document.createElement('div');\n    _this.ovmapDiv_.className = 'ol-overviewmap-map';\n    /**\n     * Explicitly given view to be used instead of a view derived from the main map.\n     * @type {View}\n     * @private\n     */\n    _this.view_ = options.view;\n    /**\n     * @type {ControlledMap}\n     * @private\n     */\n    _this.ovmap_ = new ControlledMap({\n      view: options.view\n    });\n    var ovmap = _this.ovmap_;\n    if (options.layers) {\n      options.layers.forEach(function (layer) {\n        ovmap.addLayer(layer);\n      });\n    }\n    var box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    _this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: OverlayPositioning.CENTER_CENTER,\n      element: box\n    });\n    _this.ovmap_.addOverlay(_this.boxOverlay_);\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL + (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') + (_this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = _this.element;\n    element.className = cssClasses;\n    element.appendChild(_this.ovmapDiv_);\n    element.appendChild(button);\n    /* Interactive map */\n    var scope = _this;\n    var overlay = _this.boxOverlay_;\n    var overlayBox = _this.boxOverlay_.getElement();\n    /* Functions definition */\n    var computeDesiredMousePosition = function (mousePosition) {\n      return {\n        clientX: mousePosition.clientX,\n        clientY: mousePosition.clientY\n      };\n    };\n    var move = function (event) {\n      var position = /** @type {?} */computeDesiredMousePosition(event);\n      var coordinates = ovmap.getEventCoordinateInternal(/** @type {MouseEvent} */position);\n      overlay.setPosition(coordinates);\n    };\n    var endMoving = function (event) {\n      var coordinates = ovmap.getEventCoordinateInternal(event);\n      scope.getMap().getView().setCenterInternal(coordinates);\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n    /* Binding */\n    overlayBox.addEventListener('mousedown', function () {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n    return _this;\n  }\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  OverviewMap.prototype.setMap = function (map) {\n    var oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      var oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    _super.prototype.setMap.call(this, map);\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(listen(map, ObjectEventType.PROPERTYCHANGE, this.handleMapPropertyChange_, this));\n      var view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n    }\n  };\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  OverviewMap.prototype.handleMapPropertyChange_ = function (event) {\n    if (event.key === MapProperty.VIEW) {\n      var oldView = /** @type {import(\"../View.js\").default} */event.oldValue;\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      var newView = this.getMap().getView();\n      this.bindView_(newView);\n    }\n  };\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  OverviewMap.prototype.bindView_ = function (view) {\n    if (!this.view_) {\n      // Unless an explicit view definition was given, derive default from whatever main map uses.\n      var newView = new View({\n        projection: view.getProjection()\n      });\n      this.ovmap_.setView(newView);\n    }\n    view.addEventListener(getChangeEventType(ViewProperty.ROTATION), this.boundHandleRotationChanged_);\n    // Sync once with the new view\n    this.handleRotationChanged_();\n  };\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  OverviewMap.prototype.unbindView_ = function (view) {\n    view.removeEventListener(getChangeEventType(ViewProperty.ROTATION), this.boundHandleRotationChanged_);\n  };\n  /**\n   * Handle rotation changes to the main map.\n   * @private\n   */\n  OverviewMap.prototype.handleRotationChanged_ = function () {\n    if (this.rotateWithView_) {\n      this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n    }\n  };\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  OverviewMap.prototype.validateExtent_ = function () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n    var mapSize = /** @type {import(\"../size.js\").Size} */map.getSize();\n    var view = map.getView();\n    var extent = view.calculateExtentInternal(mapSize);\n    if (this.viewExtent_ && equalsExtent(extent, this.viewExtent_)) {\n      // repeats of the same extent may indicate constraint conflicts leading to an endless cycle\n      return;\n    }\n    this.viewExtent_ = extent;\n    var ovmapSize = /** @type {import(\"../size.js\").Size} */ovmap.getSize();\n    var ovview = ovmap.getView();\n    var ovextent = ovview.calculateExtentInternal(ovmapSize);\n    var topLeftPixel = ovmap.getPixelFromCoordinateInternal(getTopLeft(extent));\n    var bottomRightPixel = ovmap.getPixelFromCoordinateInternal(getBottomRight(extent));\n    var boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    var boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n    var ovmapWidth = ovmapSize[0];\n    var ovmapHeight = ovmapSize[1];\n    if (boxWidth < ovmapWidth * MIN_RATIO || boxHeight < ovmapHeight * MIN_RATIO || boxWidth > ovmapWidth * MAX_RATIO || boxHeight > ovmapHeight * MAX_RATIO) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  };\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  OverviewMap.prototype.resetExtent_ = function () {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n    var mapSize = /** @type {import(\"../size.js\").Size} */map.getSize();\n    var view = map.getView();\n    var extent = view.calculateExtentInternal(mapSize);\n    var ovview = ovmap.getView();\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    var steps = Math.log(MAX_RATIO / MIN_RATIO) / Math.LN2;\n    var ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fitInternal(polygonFromExtent(extent));\n  };\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  OverviewMap.prototype.recenter_ = function () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n    var view = map.getView();\n    var ovview = ovmap.getView();\n    ovview.setCenterInternal(view.getCenterInternal());\n  };\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  OverviewMap.prototype.updateBox_ = function () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n    var mapSize = /** @type {import(\"../size.js\").Size} */map.getSize();\n    var view = map.getView();\n    var ovview = ovmap.getView();\n    var rotation = this.rotateWithView_ ? 0 : -view.getRotation();\n    var overlay = this.boxOverlay_;\n    var box = this.boxOverlay_.getElement();\n    var center = view.getCenterInternal();\n    var resolution = view.getResolution();\n    var ovresolution = ovview.getResolution();\n    var width = mapSize[0] * resolution / ovresolution;\n    var height = mapSize[1] * resolution / ovresolution;\n    // set position using center coordinates\n    overlay.setPosition(center);\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = width + 'px';\n      box.style.height = height + 'px';\n      var transform = 'rotate(' + rotation + 'rad)';\n      box.style.transform = transform;\n    }\n  };\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  OverviewMap.prototype.handleClick_ = function (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n  /**\n   * @private\n   */\n  OverviewMap.prototype.handleToggle_ = function () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    var ovmap = this.ovmap_;\n    if (!this.collapsed_) {\n      if (ovmap.isRendered()) {\n        this.viewExtent_ = undefined;\n        ovmap.render();\n        return;\n      }\n      ovmap.updateSize();\n      this.resetExtent_();\n      listenOnce(ovmap, MapEventType.POSTRENDER, function (event) {\n        this.updateBox_();\n      }, this);\n    }\n  };\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  OverviewMap.prototype.getCollapsible = function () {\n    return this.collapsible_;\n  };\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  OverviewMap.prototype.setCollapsible = function (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  OverviewMap.prototype.setCollapsed = function (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  OverviewMap.prototype.getCollapsed = function () {\n    return this.collapsed_;\n  };\n  /**\n   * Return `true` if the overview map view can rotate, `false` otherwise.\n   * @return {boolean} True if the control view can rotate.\n   * @api\n   */\n  OverviewMap.prototype.getRotateWithView = function () {\n    return this.rotateWithView_;\n  };\n  /**\n   * Set whether the overview map view should rotate with the main map view.\n   * @param {boolean} rotateWithView True if the control view should rotate.\n   * @api\n   */\n  OverviewMap.prototype.setRotateWithView = function (rotateWithView) {\n    if (this.rotateWithView_ === rotateWithView) {\n      return;\n    }\n    this.rotateWithView_ = rotateWithView;\n    if (this.getMap().getView().getRotation() !== 0) {\n      if (this.rotateWithView_) {\n        this.handleRotationChanged_();\n      } else {\n        this.ovmap_.getView().setRotation(0);\n      }\n      this.viewExtent_ = undefined;\n      this.validateExtent_();\n      this.updateBox_();\n    }\n  };\n  /**\n   * Return the overview map.\n   * @return {import(\"../PluggableMap.js\").default} Overview map.\n   * @api\n   */\n  OverviewMap.prototype.getOverviewMap = function () {\n    return this.ovmap_;\n  };\n  /**\n   * Update the overview map element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  OverviewMap.prototype.render = function (mapEvent) {\n    this.validateExtent_();\n    this.updateBox_();\n  };\n  return OverviewMap;\n}(Control);\nexport default OverviewMap;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport ProjUnits from '../proj/Units.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { METERS_PER_UNIT, getPointResolution } from '../proj.js';\nimport { assert } from '../asserts.js';\nimport { getChangeEventType } from '../Object.js';\n/**\n * @type {string}\n */\nvar UNITS_PROP = 'units';\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport var Units = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us'\n};\n/**\n * @const\n * @type {Array<number>}\n */\nvar LEADING_DIGITS = [1, 2, 5];\n/**\n * @const\n * @type {number}\n */\nvar DEFAULT_DPI = 25.4 / 0.28;\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {import(\"./ScaleLine.js\").Units|string} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nvar ScaleLine = /** @class */function (_super) {\n  __extends(ScaleLine, _super);\n  /**\n   * @param {Options=} opt_options Scale line options.\n   */\n  function ScaleLine(opt_options) {\n    var _this = this;\n    var options = opt_options ? opt_options : {};\n    var className = options.className !== undefined ? options.className : options.bar ? 'ol-scale-bar' : 'ol-scale-line';\n    _this = _super.call(this, {\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target\n    }) || this;\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    _this.innerElement_ = document.createElement('div');\n    _this.innerElement_.className = className + '-inner';\n    _this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    _this.element.appendChild(_this.innerElement_);\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    _this.viewState_ = null;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.renderedVisible_ = false;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    _this.renderedWidth_ = undefined;\n    /**\n     * @private\n     * @type {string}\n     */\n    _this.renderedHTML_ = '';\n    _this.addEventListener(getChangeEventType(UNITS_PROP), _this.handleUnitsChanged_);\n    _this.setUnits(options.units || Units.METRIC);\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.scaleBar_ = options.bar || false;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.scaleBarSteps_ = options.steps || 4;\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.scaleBarText_ = options.text || false;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    _this.dpi_ = options.dpi || undefined;\n    return _this;\n  }\n  /**\n   * Return the units to use in the scale line.\n   * @return {import(\"./ScaleLine.js\").Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  ScaleLine.prototype.getUnits = function () {\n    return this.get(UNITS_PROP);\n  };\n  /**\n   * @private\n   */\n  ScaleLine.prototype.handleUnitsChanged_ = function () {\n    this.updateElement_();\n  };\n  /**\n   * Set the units to use in the scale line.\n   * @param {import(\"./ScaleLine.js\").Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  ScaleLine.prototype.setUnits = function (units) {\n    this.set(UNITS_PROP, units);\n  };\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  ScaleLine.prototype.setDpi = function (dpi) {\n    this.dpi_ = dpi;\n  };\n  /**\n   * @private\n   */\n  ScaleLine.prototype.updateElement_ = function () {\n    var viewState = this.viewState_;\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n    var center = viewState.center;\n    var projection = viewState.projection;\n    var units = this.getUnits();\n    var pointResolutionUnits = units == Units.DEGREES ? ProjUnits.DEGREES : ProjUnits.METERS;\n    var pointResolution = getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n    var minWidth = this.minWidth_ * (this.dpi_ || DEFAULT_DPI) / DEFAULT_DPI;\n    var nominalCount = minWidth * pointResolution;\n    var suffix = '';\n    if (units == Units.DEGREES) {\n      var metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == Units.IMPERIAL) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == Units.NAUTICAL) {\n      pointResolution /= 1852;\n      suffix = 'nm';\n    } else if (units == Units.METRIC) {\n      if (nominalCount < 0.001) {\n        suffix = 'Î¼m';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == Units.US) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n    var i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    var count, width, decimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      var decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[(i % 3 + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      } else if (width >= minWidth) {\n        break;\n      }\n      ++i;\n    }\n    var html;\n    if (this.scaleBar_) {\n      html = this.createScaleBar(width, count, suffix);\n    } else {\n      html = count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n    }\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  };\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @returns {string} The stringified HTML of the scalebar.\n   */\n  ScaleLine.prototype.createScaleBar = function (width, scale, suffix) {\n    var mapScale = '1 : ' + Math.round(this.getScaleForResolution()).toLocaleString();\n    var scaleSteps = [];\n    var stepWidth = width / this.scaleBarSteps_;\n    var backgroundColor = '#ffffff';\n    for (var i = 0; i < this.scaleBarSteps_; i++) {\n      if (i === 0) {\n        // create the first marker at position 0\n        scaleSteps.push(this.createMarker('absolute', i));\n      }\n      scaleSteps.push('<div>' + '<div ' + 'class=\"ol-scale-singlebar\" ' + 'style=' + '\"width: ' + stepWidth + 'px;' + 'background-color: ' + backgroundColor + ';\"' + '>' + '</div>' + this.createMarker('relative', i) + (/*render text every second step, except when only 2 steps */\n      i % 2 === 0 || this.scaleBarSteps_ === 2 ? this.createStepText(i, width, false, scale, suffix) : '') + '</div>');\n      if (i === this.scaleBarSteps_ - 1) {\n        {\n          /*render text at the end */\n        }\n        scaleSteps.push(this.createStepText(i + 1, width, true, scale, suffix));\n      }\n      // switch colors of steps between black and white\n      if (backgroundColor === '#ffffff') {\n        backgroundColor = '#000000';\n      } else {\n        backgroundColor = '#ffffff';\n      }\n    }\n    var scaleBarText;\n    if (this.scaleBarText_) {\n      scaleBarText = '<div ' + 'class=\"ol-scale-text\" ' + 'style=\"width: ' + width + 'px;\">' + mapScale + '</div>';\n    } else {\n      scaleBarText = '';\n    }\n    var container = '<div ' + 'style=\"display: flex;\">' + scaleBarText + scaleSteps.join('') + '</div>';\n    return container;\n  };\n  /**\n   * Creates a marker at given position\n   * @param {string} position - The position, absolute or relative\n   * @param {number} i - The iterator\n   * @returns {string} The stringified div containing the marker\n   */\n  ScaleLine.prototype.createMarker = function (position, i) {\n    var top = position === 'absolute' ? 3 : -10;\n    return '<div ' + 'class=\"ol-scale-step-marker\" ' + 'style=\"position: ' + position + ';' + 'top: ' + top + 'px;\"' + '></div>';\n  };\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i - The iterator\n   * @param {number} width - The width the scalebar will currently use\n   * @param {boolean} isLast - Flag indicating if we add the last step text\n   * @param {number} scale - The current scale for the whole scalebar\n   * @param {string} suffix - The suffix for the scale\n   * @returns {string} The stringified div containing the step text\n   */\n  ScaleLine.prototype.createStepText = function (i, width, isLast, scale, suffix) {\n    var length = i === 0 ? 0 : Math.round(scale / this.scaleBarSteps_ * i * 100) / 100;\n    var lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    var margin = i === 0 ? -3 : width / this.scaleBarSteps_ * -1;\n    var minWidth = i === 0 ? 0 : width / this.scaleBarSteps_ * 2;\n    return '<div ' + 'class=\"ol-scale-step-text\" ' + 'style=\"' + 'margin-left: ' + margin + 'px;' + 'text-align: ' + (i === 0 ? 'left' : 'center') + '; ' + 'min-width: ' + minWidth + 'px;' + 'left: ' + (isLast ? width + 'px' : 'unset') + ';\"' + '>' + lengthString + '</div>';\n  };\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  ScaleLine.prototype.getScaleForResolution = function () {\n    var resolution = getPointResolution(this.viewState_.projection, this.viewState_.resolution, this.viewState_.center);\n    var dpi = this.dpi_ || DEFAULT_DPI;\n    var mpu = this.viewState_.projection.getMetersPerUnit();\n    var inchesPerMeter = 1000 / 25.4;\n    return parseFloat(resolution.toString()) * mpu * inchesPerMeter * dpi;\n  };\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  ScaleLine.prototype.render = function (mapEvent) {\n    var frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  };\n  return ScaleLine;\n}(Control);\nexport default ScaleLine;\n", "/**\n * @module ol/control/ZoomSlider\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { clamp } from '../math.js';\nimport { easeOut } from '../easing.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { stopPropagation } from '../events/Event.js';\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nvar Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1\n};\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nvar ZoomSlider = /** @class */function (_super) {\n  __extends(ZoomSlider, _super);\n  /**\n   * @param {Options=} opt_options Zoom slider options.\n   */\n  function ZoomSlider(opt_options) {\n    var _this = this;\n    var options = opt_options ? opt_options : {};\n    _this = _super.call(this, {\n      element: document.createElement('div'),\n      render: options.render\n    }) || this;\n    /**\n     * @type {!Array.<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    _this.dragListenerKeys_ = [];\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    _this.currentResolution_ = undefined;\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    _this.direction_ = Direction.VERTICAL;\n    /**\n     * @type {boolean}\n     * @private\n     */\n    _this.dragging_;\n    /**\n     * @type {number}\n     * @private\n     */\n    _this.heightLimit_ = 0;\n    /**\n     * @type {number}\n     * @private\n     */\n    _this.widthLimit_ = 0;\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    _this.startX_;\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    _this.startY_;\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    _this.thumbSize_ = null;\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    _this.sliderInitialized_ = false;\n    /**\n     * @type {number}\n     * @private\n     */\n    _this.duration_ = options.duration !== undefined ? options.duration : 200;\n    var className = options.className !== undefined ? options.className : 'ol-zoomslider';\n    var thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    var containerElement = _this.element;\n    containerElement.className = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n    containerElement.addEventListener(PointerEventType.POINTERDOWN, _this.handleDraggerStart_.bind(_this), false);\n    containerElement.addEventListener(PointerEventType.POINTERMOVE, _this.handleDraggerDrag_.bind(_this), false);\n    containerElement.addEventListener(PointerEventType.POINTERUP, _this.handleDraggerEnd_.bind(_this), false);\n    containerElement.addEventListener(EventType.CLICK, _this.handleContainerClick_.bind(_this), false);\n    thumbElement.addEventListener(EventType.CLICK, stopPropagation, false);\n    return _this;\n  }\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  ZoomSlider.prototype.setMap = function (map) {\n    _super.prototype.setMap.call(this, map);\n    if (map) {\n      map.render();\n    }\n  };\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @return {boolean} Initialization successful\n   * @private\n   */\n  ZoomSlider.prototype.initSlider_ = function () {\n    var container = this.element;\n    var containerWidth = container.offsetWidth;\n    var containerHeight = container.offsetHeight;\n    if (containerWidth === 0 && containerHeight === 0) {\n      return this.sliderInitialized_ = false;\n    }\n    var thumb = /** @type {HTMLElement} */container.firstElementChild;\n    var computedStyle = getComputedStyle(thumb);\n    var thumbWidth = thumb.offsetWidth + parseFloat(computedStyle['marginRight']) + parseFloat(computedStyle['marginLeft']);\n    var thumbHeight = thumb.offsetHeight + parseFloat(computedStyle['marginTop']) + parseFloat(computedStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n    if (containerWidth > containerHeight) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerWidth - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerHeight - thumbHeight;\n    }\n    return this.sliderInitialized_ = true;\n  };\n  /**\n   * @param {PointerEvent} event The browser event to handle.\n   * @private\n   */\n  ZoomSlider.prototype.handleContainerClick_ = function (event) {\n    var view = this.getMap().getView();\n    var relativePosition = this.getRelativePosition_(event.offsetX - this.thumbSize_[0] / 2, event.offsetY - this.thumbSize_[1] / 2);\n    var resolution = this.getResolutionForPosition_(relativePosition);\n    var zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\n    view.animateInternal({\n      zoom: zoom,\n      duration: this.duration_,\n      easing: easeOut\n    });\n  };\n  /**\n   * Handle dragger start events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  ZoomSlider.prototype.handleDraggerStart_ = function (event) {\n    if (!this.dragging_ && event.target === this.element.firstElementChild) {\n      var element = /** @type {HTMLElement} */this.element.firstElementChild;\n      this.getMap().getView().beginInteraction();\n      this.startX_ = event.clientX - parseFloat(element.style.left);\n      this.startY_ = event.clientY - parseFloat(element.style.top);\n      this.dragging_ = true;\n      if (this.dragListenerKeys_.length === 0) {\n        var drag = this.handleDraggerDrag_;\n        var end = this.handleDraggerEnd_;\n        var doc = this.getMap().getOwnerDocument();\n        this.dragListenerKeys_.push(listen(doc, PointerEventType.POINTERMOVE, drag, this), listen(doc, PointerEventType.POINTERUP, end, this));\n      }\n    }\n  };\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  ZoomSlider.prototype.handleDraggerDrag_ = function (event) {\n    if (this.dragging_) {\n      var deltaX = event.clientX - this.startX_;\n      var deltaY = event.clientY - this.startY_;\n      var relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ = this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n    }\n  };\n  /**\n   * Handle dragger end events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  ZoomSlider.prototype.handleDraggerEnd_ = function (event) {\n    if (this.dragging_) {\n      var view = this.getMap().getView();\n      view.endInteraction();\n      this.dragging_ = false;\n      this.startX_ = undefined;\n      this.startY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  };\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  ZoomSlider.prototype.setThumbPosition_ = function (res) {\n    var position = this.getPositionForResolution_(res);\n    var thumb = /** @type {HTMLElement} */this.element.firstElementChild;\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  };\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  ZoomSlider.prototype.getRelativePosition_ = function (x, y) {\n    var amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  };\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  ZoomSlider.prototype.getResolutionForPosition_ = function (position) {\n    var fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  };\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  ZoomSlider.prototype.getPositionForResolution_ = function (res) {\n    var fn = this.getMap().getView().getValueForResolutionFunction();\n    return clamp(1 - fn(res), 0, 1);\n  };\n  /**\n   * Update the zoomslider element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  ZoomSlider.prototype.render = function (mapEvent) {\n    if (!mapEvent.frameState) {\n      return;\n    }\n    if (!this.sliderInitialized_ && !this.initSlider_()) {\n      return;\n    }\n    var res = mapEvent.frameState.viewState.resolution;\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  };\n  return ZoomSlider;\n}(Control);\nexport default ZoomSlider;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/control/ZoomToExtent\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { fromExtent as polygonFromExtent } from '../geom/Polygon.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nvar ZoomToExtent = /** @class */function (_super) {\n  __extends(ZoomToExtent, _super);\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  function ZoomToExtent(opt_options) {\n    var _this = this;\n    var options = opt_options ? opt_options : {};\n    _this = _super.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    }) || this;\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @protected\n     */\n    _this.extent = options.extent ? options.extent : null;\n    var className = options.className !== undefined ? options.className : 'ol-zoom-extent';\n    var label = options.label !== undefined ? options.label : 'E';\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(typeof label === 'string' ? document.createTextNode(label) : label);\n    button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = _this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n    return _this;\n  }\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  ZoomToExtent.prototype.handleClick_ = function (event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  };\n  /**\n   * @protected\n   */\n  ZoomToExtent.prototype.handleZoomToExtent = function () {\n    var map = this.getMap();\n    var view = map.getView();\n    var extent = !this.extent ? view.getProjection().getExtent() : this.extent;\n    view.fitInternal(polygonFromExtent(extent));\n  };\n  return ZoomToExtent;\n}(Control);\nexport default ZoomToExtent;\n", "/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\nexport { default as Attribution } from './control/Attribution.js';\nexport { default as Control } from './control/Control.js';\nexport { default as FullScreen } from './control/FullScreen.js';\nexport { default as MousePosition } from './control/MousePosition.js';\nexport { default as OverviewMap } from './control/OverviewMap.js';\nexport { default as Rotate } from './control/Rotate.js';\nexport { default as ScaleLine } from './control/ScaleLine.js';\nexport { default as Zoom } from './control/Zoom.js';\nexport { default as ZoomSlider } from './control/ZoomSlider.js';\nexport { default as ZoomToExtent } from './control/ZoomToExtent.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  var options = opt_options ? opt_options : {};\n  var controls = new Collection();\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n  var attributionControl = options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n  return controls;\n}\n"],
  "mappings": "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",
  "names": ["d", "b", "Control", "__extends", "d", "b", "Attribution", "__extends", "d", "b", "Rotate", "__extends", "d", "b", "Zoom", "__extends", "d", "b", "FullScreen", "EventType_default", "__extends", "d", "b", "MousePosition", "EventType_default", "__extends", "d", "b", "MapRenderer", "layer", "coordinates", "i", "__extends", "d", "b", "CompositeMapRenderer", "Event_default", "EventType_default", "__extends", "d", "b", "LayerGroup", "__extends", "d", "b", "MapEvent", "__extends", "d", "b", "MapBrowserEvent", "__extends", "d", "b", "MapBrowserEventHandler", "EventType_default", "newEvent", "PriorityQueue", "__extends", "d", "b", "TileQueue", "offset", "none", "offset", "squaredDistance", "offset", "__extends", "d", "b", "LinearRing", "coordinates", "offset", "offset", "offset", "offset", "offset", "offset", "__extends", "d", "b", "Polygon", "coordinates", "linearRing", "linearRings", "offset", "__extends", "d", "b", "View", "offset", "equals", "none", "__extends", "d", "b", "PluggableMap", "EventType_default", "equals", "__extends", "d", "b", "ControlledMap", "OverviewMap", "coordinates", "equals", "__extends", "d", "b", "ScaleLine", "__extends", "d", "b", "ZoomSlider", "EventType_default", "__extends", "d", "b", "ZoomToExtent"]
}

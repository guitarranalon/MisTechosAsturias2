{
  "version": 3,
  "sources": ["../../../../../../node_modules/ol/Tile.js", "../../../../../../node_modules/ol/ImageTile.js", "../../../../../../node_modules/ol/structs/LRUCache.js", "../../../../../../node_modules/ol/tilecoord.js", "../../../../../../node_modules/ol/TileCache.js"],
  "sourcesContent": ["var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport { abstract } from './util.js';\nimport { easeIn } from './easing.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /** @class */function (_super) {\n  __extends(Tile, _super);\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options=} opt_options Tile options.\n   */\n  function Tile(tileCoord, state, opt_options) {\n    var _this = _super.call(this) || this;\n    var options = opt_options ? opt_options : {};\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    _this.tileCoord = tileCoord;\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    _this.state = state;\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    _this.interimTile = null;\n    /**\n     * The tile is available at the highest possible resolution. Subclasses can\n     * set this to `false` initially. Tile load listeners will not be\n     * unregistered before this is set to `true` and a `#changed()` is called.\n     * @type {boolean}\n     */\n    _this.hifi = true;\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    _this.key = '';\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    _this.transition_ = options.transition === undefined ? 250 : options.transition;\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    _this.transitionStarts_ = {};\n    return _this;\n  }\n  /**\n   * @protected\n   */\n  Tile.prototype.changed = function () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  Tile.prototype.release = function () {};\n  /**\n   * @return {string} Key.\n   */\n  Tile.prototype.getKey = function () {\n    return this.key + '/' + this.tileCoord;\n  };\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  Tile.prototype.getInterimTile = function () {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    var tile = this.interimTile;\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n    // we can not find a better tile\n    return this;\n  };\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  Tile.prototype.refreshInterimChain = function () {\n    if (!this.interimTile) {\n      return;\n    }\n    var tile = this.interimTile;\n    var prev = /** @type {Tile} */this;\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  };\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  Tile.prototype.getTileCoord = function () {\n    return this.tileCoord;\n  };\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  Tile.prototype.getState = function () {\n    return this.state;\n  };\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  Tile.prototype.setState = function (state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  };\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  Tile.prototype.load = function () {\n    abstract();\n  };\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  Tile.prototype.getAlpha = function (id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n    var start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n    var delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  };\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  Tile.prototype.inTransition = function (id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  };\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  Tile.prototype.endTransition = function (id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  };\n  return Tile;\n}(EventTarget);\nexport default Tile;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenImage } from './Image.js';\nvar ImageTile = /** @class */function (_super) {\n  __extends(ImageTile, _super);\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n   */\n  function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n    var _this = _super.call(this, tileCoord, state, opt_options) || this;\n    /**\n     * @private\n     * @type {?string}\n     */\n    _this.crossOrigin_ = crossOrigin;\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    _this.src_ = src;\n    _this.key = src;\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    _this.image_ = new Image();\n    if (crossOrigin !== null) {\n      _this.image_.crossOrigin = crossOrigin;\n    }\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    _this.unlisten_ = null;\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    _this.tileLoadFunction_ = tileLoadFunction;\n    return _this;\n  }\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  ImageTile.prototype.getImage = function () {\n    return this.image_;\n  };\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageError_ = function () {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  };\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageLoad_ = function () {\n    var image = /** @type {HTMLImageElement} */this.image_;\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  };\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  ImageTile.prototype.load = function () {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n    }\n  };\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.unlistenImage_ = function () {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  };\n  return ImageTile;\n}(Tile);\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  var ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\nexport default ImageTile;\n", "/**\n * @module ol/structs/LRUCache\n */\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nvar LRUCache = /** @class */function () {\n  /**\n   * @param {number=} opt_highWaterMark High water mark.\n   */\n  function LRUCache(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  LRUCache.prototype.canExpireCache = function () {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  };\n  /**\n   * FIXME empty description for jsdoc\n   */\n  LRUCache.prototype.clear = function () {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  };\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  LRUCache.prototype.containsKey = function (key) {\n    return this.entries_.hasOwnProperty(key);\n  };\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  LRUCache.prototype.forEach = function (f) {\n    var entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  };\n  /**\n   * @param {string} key Key.\n   * @param {*=} opt_options Options (reserverd for subclasses).\n   * @return {T} Value.\n   */\n  LRUCache.prototype.get = function (key, opt_options) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */this.oldest_.newer;\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  };\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  LRUCache.prototype.remove = function (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */entry.older;\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */entry.newer;\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  };\n  /**\n   * @return {number} Count.\n   */\n  LRUCache.prototype.getCount = function () {\n    return this.count_;\n  };\n  /**\n   * @return {Array<string>} Keys.\n   */\n  LRUCache.prototype.getKeys = function () {\n    var keys = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  };\n  /**\n   * @return {Array<T>} Values.\n   */\n  LRUCache.prototype.getValues = function () {\n    var values = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  };\n  /**\n   * @return {T} Last value.\n   */\n  LRUCache.prototype.peekLast = function () {\n    return this.oldest_.value_;\n  };\n  /**\n   * @return {string} Last key.\n   */\n  LRUCache.prototype.peekLastKey = function () {\n    return this.oldest_.key_;\n  };\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  LRUCache.prototype.peekFirstKey = function () {\n    return this.newest_.key_;\n  };\n  /**\n   * @return {T} value Value.\n   */\n  LRUCache.prototype.pop = function () {\n    var entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */entry.newer;\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  };\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.replace = function (key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  };\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.set = function (key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    var entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  };\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  LRUCache.prototype.setSize = function (size) {\n    this.highWaterMark = size;\n  };\n  return LRUCache;\n}();\nexport default LRUCache;\n", "/**\n * @module ol/tilecoord\n */\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  var z = tileCoord[0];\n  var x = tileCoord[1];\n  var y = tileCoord[2];\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  var tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /** @class */function (_super) {\n  __extends(TileCache, _super);\n  function TileCache() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  TileCache.prototype.expireCache = function (usedTiles) {\n    while (this.canExpireCache()) {\n      var tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  };\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  TileCache.prototype.pruneExceptNewestZ = function () {\n    if (this.getCount() === 0) {\n      return;\n    }\n    var key = this.peekFirstKey();\n    var tileCoord = fromKey(key);\n    var z = tileCoord[0];\n    this.forEach(function (tile) {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    }.bind(this));\n  };\n  return TileCache;\n}(LRUCache);\nexport default TileCache;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAAA,IAAI,YAAsC,2BAAY;AACpD,MAAI,gBAAgB,SAAU,GAAG,GAAG;AAClC,oBAAgB,OAAO,kBAAkB;AAAA,MACvC,WAAW,CAAC;AAAA,IACd,aAAa,SAAS,SAAUA,IAAGC,IAAG;AACpC,MAAAD,GAAE,YAAYC;AAAA,IAChB,KAAK,SAAUD,IAAGC,IAAG;AACnB,eAAS,KAAKA,GAAG,KAAI,OAAO,UAAU,eAAe,KAAKA,IAAG,CAAC,EAAG,CAAAD,GAAE,CAAC,IAAIC,GAAE,CAAC;AAAA,IAC7E;AACA,WAAO,cAAc,GAAG,CAAC;AAAA,EAC3B;AACA,SAAO,SAAU,GAAG,GAAG;AACrB,kBAAc,GAAG,CAAC;AAClB,aAAS,KAAK;AACZ,WAAK,cAAc;AAAA,IACrB;AACA,MAAE,YAAY,MAAM,OAAO,OAAO,OAAO,CAAC,KAAK,GAAG,YAAY,EAAE,WAAW,IAAI,GAAG;AAAA,EACpF;AACF,EAAE;AAuEF,IAAI;AAAA;AAAA,EAAoB,SAAU,QAAQ;AACxC,cAAUC,OAAM,MAAM;AAMtB,aAASA,MAAK,WAAW,OAAO,aAAa;AAC3C,UAAI,QAAQ,OAAO,KAAK,IAAI,KAAK;AACjC,UAAI,UAAU,cAAc,cAAc,CAAC;AAI3C,YAAM,YAAY;AAKlB,YAAM,QAAQ;AAOd,YAAM,cAAc;AAOpB,YAAM,OAAO;AAOb,YAAM,MAAM;AAKZ,YAAM,cAAc,QAAQ,eAAe,SAAY,MAAM,QAAQ;AAMrE,YAAM,oBAAoB,CAAC;AAC3B,aAAO;AAAA,IACT;AAIA,IAAAA,MAAK,UAAU,UAAU,WAAY;AACnC,WAAK,cAAc,kBAAU,MAAM;AAAA,IACrC;AAIA,IAAAA,MAAK,UAAU,UAAU,WAAY;AAAA,IAAC;AAItC,IAAAA,MAAK,UAAU,SAAS,WAAY;AAClC,aAAO,KAAK,MAAM,MAAM,KAAK;AAAA,IAC/B;AAOA,IAAAA,MAAK,UAAU,iBAAiB,WAAY;AAC1C,UAAI,CAAC,KAAK,aAAa;AAErB,eAAO;AAAA,MACT;AACA,UAAI,OAAO,KAAK;AAKhB,SAAG;AACD,YAAI,KAAK,SAAS,KAAK,kBAAU,QAAQ;AAGvC,eAAK,cAAc;AACnB,iBAAO;AAAA,QACT;AACA,eAAO,KAAK;AAAA,MACd,SAAS;AAET,aAAO;AAAA,IACT;AAKA,IAAAA,MAAK,UAAU,sBAAsB,WAAY;AAC/C,UAAI,CAAC,KAAK,aAAa;AACrB;AAAA,MACF;AACA,UAAI,OAAO,KAAK;AAChB,UAAI;AAAA;AAAA,QAA0B;AAAA;AAC9B,SAAG;AACD,YAAI,KAAK,SAAS,KAAK,kBAAU,QAAQ;AAIvC,eAAK,cAAc;AACnB;AAAA,QACF,WAAW,KAAK,SAAS,KAAK,kBAAU,SAAS;AAG/C,iBAAO;AAAA,QACT,WAAW,KAAK,SAAS,KAAK,kBAAU,MAAM;AAG5C,eAAK,cAAc,KAAK;AAAA,QAC1B,OAAO;AACL,iBAAO;AAAA,QACT;AACA,eAAO,KAAK;AAAA,MACd,SAAS;AAAA,IACX;AAMA,IAAAA,MAAK,UAAU,eAAe,WAAY;AACxC,aAAO,KAAK;AAAA,IACd;AAIA,IAAAA,MAAK,UAAU,WAAW,WAAY;AACpC,aAAO,KAAK;AAAA,IACd;AASA,IAAAA,MAAK,UAAU,WAAW,SAAU,OAAO;AACzC,UAAI,KAAK,UAAU,kBAAU,SAAS,KAAK,QAAQ,OAAO;AACxD,cAAM,IAAI,MAAM,8BAA8B;AAAA,MAChD;AACA,WAAK,QAAQ;AACb,WAAK,QAAQ;AAAA,IACf;AAQA,IAAAA,MAAK,UAAU,OAAO,WAAY;AAChC,eAAS;AAAA,IACX;AAOA,IAAAA,MAAK,UAAU,WAAW,SAAU,IAAI,MAAM;AAC5C,UAAI,CAAC,KAAK,aAAa;AACrB,eAAO;AAAA,MACT;AACA,UAAI,QAAQ,KAAK,kBAAkB,EAAE;AACrC,UAAI,CAAC,OAAO;AACV,gBAAQ;AACR,aAAK,kBAAkB,EAAE,IAAI;AAAA,MAC/B,WAAW,UAAU,IAAI;AACvB,eAAO;AAAA,MACT;AACA,UAAI,QAAQ,OAAO,QAAQ,MAAO;AAClC,UAAI,SAAS,KAAK,aAAa;AAC7B,eAAO;AAAA,MACT;AACA,aAAO,OAAO,QAAQ,KAAK,WAAW;AAAA,IACxC;AAQA,IAAAA,MAAK,UAAU,eAAe,SAAU,IAAI;AAC1C,UAAI,CAAC,KAAK,aAAa;AACrB,eAAO;AAAA,MACT;AACA,aAAO,KAAK,kBAAkB,EAAE,MAAM;AAAA,IACxC;AAKA,IAAAA,MAAK,UAAU,gBAAgB,SAAU,IAAI;AAC3C,UAAI,KAAK,aAAa;AACpB,aAAK,kBAAkB,EAAE,IAAI;AAAA,MAC/B;AAAA,IACF;AACA,WAAOA;AAAA,EACT,EAAE,cAAW;AAAA;AACb,IAAO,eAAQ;;;AC/Sf,IAAIC,aAAsC,2BAAY;AACpD,MAAI,gBAAgB,SAAU,GAAG,GAAG;AAClC,oBAAgB,OAAO,kBAAkB;AAAA,MACvC,WAAW,CAAC;AAAA,IACd,aAAa,SAAS,SAAUC,IAAGC,IAAG;AACpC,MAAAD,GAAE,YAAYC;AAAA,IAChB,KAAK,SAAUD,IAAGC,IAAG;AACnB,eAAS,KAAKA,GAAG,KAAI,OAAO,UAAU,eAAe,KAAKA,IAAG,CAAC,EAAG,CAAAD,GAAE,CAAC,IAAIC,GAAE,CAAC;AAAA,IAC7E;AACA,WAAO,cAAc,GAAG,CAAC;AAAA,EAC3B;AACA,SAAO,SAAU,GAAG,GAAG;AACrB,kBAAc,GAAG,CAAC;AAClB,aAAS,KAAK;AACZ,WAAK,cAAc;AAAA,IACrB;AACA,MAAE,YAAY,MAAM,OAAO,OAAO,OAAO,CAAC,KAAK,GAAG,YAAY,EAAE,WAAW,IAAI,GAAG;AAAA,EACpF;AACF,EAAE;AAQF,IAAI;AAAA;AAAA,EAAyB,SAAU,QAAQ;AAC7C,IAAAF,WAAUG,YAAW,MAAM;AAS3B,aAASA,WAAU,WAAW,OAAO,KAAK,aAAa,kBAAkB,aAAa;AACpF,UAAI,QAAQ,OAAO,KAAK,MAAM,WAAW,OAAO,WAAW,KAAK;AAKhE,YAAM,eAAe;AAOrB,YAAM,OAAO;AACb,YAAM,MAAM;AAKZ,YAAM,SAAS,IAAI,MAAM;AACzB,UAAI,gBAAgB,MAAM;AACxB,cAAM,OAAO,cAAc;AAAA,MAC7B;AAKA,YAAM,YAAY;AAKlB,YAAM,oBAAoB;AAC1B,aAAO;AAAA,IACT;AAMA,IAAAA,WAAU,UAAU,WAAW,WAAY;AACzC,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,WAAU,UAAU,oBAAoB,WAAY;AAClD,WAAK,QAAQ,kBAAU;AACvB,WAAK,eAAe;AACpB,WAAK,SAAS,cAAc;AAC5B,WAAK,QAAQ;AAAA,IACf;AAMA,IAAAA,WAAU,UAAU,mBAAmB,WAAY;AACjD,UAAI;AAAA;AAAA,QAAuC,KAAK;AAAA;AAChD,UAAI,MAAM,gBAAgB,MAAM,eAAe;AAC7C,aAAK,QAAQ,kBAAU;AAAA,MACzB,OAAO;AACL,aAAK,QAAQ,kBAAU;AAAA,MACzB;AACA,WAAK,eAAe;AACpB,WAAK,QAAQ;AAAA,IACf;AAKA,IAAAA,WAAU,UAAU,OAAO,WAAY;AACrC,UAAI,KAAK,SAAS,kBAAU,OAAO;AACjC,aAAK,QAAQ,kBAAU;AACvB,aAAK,SAAS,IAAI,MAAM;AACxB,YAAI,KAAK,iBAAiB,MAAM;AAC9B,eAAK,OAAO,cAAc,KAAK;AAAA,QACjC;AAAA,MACF;AACA,UAAI,KAAK,SAAS,kBAAU,MAAM;AAChC,aAAK,QAAQ,kBAAU;AACvB,aAAK,QAAQ;AACb,aAAK,kBAAkB,MAAM,KAAK,IAAI;AACtC,aAAK,YAAY,YAAY,KAAK,QAAQ,KAAK,iBAAiB,KAAK,IAAI,GAAG,KAAK,kBAAkB,KAAK,IAAI,CAAC;AAAA,MAC/G;AAAA,IACF;AAMA,IAAAA,WAAU,UAAU,iBAAiB,WAAY;AAC/C,UAAI,KAAK,WAAW;AAClB,aAAK,UAAU;AACf,aAAK,YAAY;AAAA,MACnB;AAAA,IACF;AACA,WAAOA;AAAA,EACT,EAAE,YAAI;AAAA;AAKN,SAAS,gBAAgB;AACvB,MAAI,MAAM,sBAAsB,GAAG,CAAC;AACpC,MAAI,YAAY;AAChB,MAAI,SAAS,GAAG,GAAG,GAAG,CAAC;AACvB,SAAO,IAAI;AACb;AACA,IAAO,oBAAQ;;;AC/Hf,IAAI;AAAA;AAAA,EAAwB,WAAY;AAItC,aAASC,UAAS,mBAAmB;AAMnC,WAAK,gBAAgB,sBAAsB,SAAY,oBAAoB;AAK3E,WAAK,SAAS;AAKd,WAAK,WAAW,CAAC;AAKjB,WAAK,UAAU;AAKf,WAAK,UAAU;AAAA,IACjB;AAIA,IAAAA,UAAS,UAAU,iBAAiB,WAAY;AAC9C,aAAO,KAAK,gBAAgB,KAAK,KAAK,SAAS,IAAI,KAAK;AAAA,IAC1D;AAIA,IAAAA,UAAS,UAAU,QAAQ,WAAY;AACrC,WAAK,SAAS;AACd,WAAK,WAAW,CAAC;AACjB,WAAK,UAAU;AACf,WAAK,UAAU;AAAA,IACjB;AAKA,IAAAA,UAAS,UAAU,cAAc,SAAU,KAAK;AAC9C,aAAO,KAAK,SAAS,eAAe,GAAG;AAAA,IACzC;AAOA,IAAAA,UAAS,UAAU,UAAU,SAAU,GAAG;AACxC,UAAI,QAAQ,KAAK;AACjB,aAAO,OAAO;AACZ,UAAE,MAAM,QAAQ,MAAM,MAAM,IAAI;AAChC,gBAAQ,MAAM;AAAA,MAChB;AAAA,IACF;AAMA,IAAAA,UAAS,UAAU,MAAM,SAAU,KAAK,aAAa;AACnD,UAAI,QAAQ,KAAK,SAAS,GAAG;AAC7B,aAAO,UAAU,QAAW,EAAE;AAC9B,UAAI,UAAU,KAAK,SAAS;AAC1B,eAAO,MAAM;AAAA,MACf,WAAW,UAAU,KAAK,SAAS;AACjC,aAAK;AAAA,QAA8B,KAAK,QAAQ;AAChD,aAAK,QAAQ,QAAQ;AAAA,MACvB,OAAO;AACL,cAAM,MAAM,QAAQ,MAAM;AAC1B,cAAM,MAAM,QAAQ,MAAM;AAAA,MAC5B;AACA,YAAM,QAAQ;AACd,YAAM,QAAQ,KAAK;AACnB,WAAK,QAAQ,QAAQ;AACrB,WAAK,UAAU;AACf,aAAO,MAAM;AAAA,IACf;AAMA,IAAAA,UAAS,UAAU,SAAS,SAAU,KAAK;AACzC,UAAI,QAAQ,KAAK,SAAS,GAAG;AAC7B,aAAO,UAAU,QAAW,EAAE;AAC9B,UAAI,UAAU,KAAK,SAAS;AAC1B,aAAK;AAAA,QAA8B,MAAM;AACzC,YAAI,KAAK,SAAS;AAChB,eAAK,QAAQ,QAAQ;AAAA,QACvB;AAAA,MACF,WAAW,UAAU,KAAK,SAAS;AACjC,aAAK;AAAA,QAA8B,MAAM;AACzC,YAAI,KAAK,SAAS;AAChB,eAAK,QAAQ,QAAQ;AAAA,QACvB;AAAA,MACF,OAAO;AACL,cAAM,MAAM,QAAQ,MAAM;AAC1B,cAAM,MAAM,QAAQ,MAAM;AAAA,MAC5B;AACA,aAAO,KAAK,SAAS,GAAG;AACxB,QAAE,KAAK;AACP,aAAO,MAAM;AAAA,IACf;AAIA,IAAAA,UAAS,UAAU,WAAW,WAAY;AACxC,aAAO,KAAK;AAAA,IACd;AAIA,IAAAA,UAAS,UAAU,UAAU,WAAY;AACvC,UAAI,OAAO,IAAI,MAAM,KAAK,MAAM;AAChC,UAAI,IAAI;AACR,UAAI;AACJ,WAAK,QAAQ,KAAK,SAAS,OAAO,QAAQ,MAAM,OAAO;AACrD,aAAK,GAAG,IAAI,MAAM;AAAA,MACpB;AACA,aAAO;AAAA,IACT;AAIA,IAAAA,UAAS,UAAU,YAAY,WAAY;AACzC,UAAI,SAAS,IAAI,MAAM,KAAK,MAAM;AAClC,UAAI,IAAI;AACR,UAAI;AACJ,WAAK,QAAQ,KAAK,SAAS,OAAO,QAAQ,MAAM,OAAO;AACrD,eAAO,GAAG,IAAI,MAAM;AAAA,MACtB;AACA,aAAO;AAAA,IACT;AAIA,IAAAA,UAAS,UAAU,WAAW,WAAY;AACxC,aAAO,KAAK,QAAQ;AAAA,IACtB;AAIA,IAAAA,UAAS,UAAU,cAAc,WAAY;AAC3C,aAAO,KAAK,QAAQ;AAAA,IACtB;AAKA,IAAAA,UAAS,UAAU,eAAe,WAAY;AAC5C,aAAO,KAAK,QAAQ;AAAA,IACtB;AAIA,IAAAA,UAAS,UAAU,MAAM,WAAY;AACnC,UAAI,QAAQ,KAAK;AACjB,aAAO,KAAK,SAAS,MAAM,IAAI;AAC/B,UAAI,MAAM,OAAO;AACf,cAAM,MAAM,QAAQ;AAAA,MACtB;AACA,WAAK;AAAA,MAA8B,MAAM;AACzC,UAAI,CAAC,KAAK,SAAS;AACjB,aAAK,UAAU;AAAA,MACjB;AACA,QAAE,KAAK;AACP,aAAO,MAAM;AAAA,IACf;AAKA,IAAAA,UAAS,UAAU,UAAU,SAAU,KAAK,OAAO;AACjD,WAAK,IAAI,GAAG;AACZ,WAAK,SAAS,GAAG,EAAE,SAAS;AAAA,IAC9B;AAKA,IAAAA,UAAS,UAAU,MAAM,SAAU,KAAK,OAAO;AAC7C,aAAO,EAAE,OAAO,KAAK,WAAW,EAAE;AAClC,UAAI,QAAQ;AAAA,QACV,MAAM;AAAA,QACN,OAAO;AAAA,QACP,OAAO,KAAK;AAAA,QACZ,QAAQ;AAAA,MACV;AACA,UAAI,CAAC,KAAK,SAAS;AACjB,aAAK,UAAU;AAAA,MACjB,OAAO;AACL,aAAK,QAAQ,QAAQ;AAAA,MACvB;AACA,WAAK,UAAU;AACf,WAAK,SAAS,GAAG,IAAI;AACrB,QAAE,KAAK;AAAA,IACT;AAMA,IAAAA,UAAS,UAAU,UAAU,SAAU,MAAM;AAC3C,WAAK,gBAAgB;AAAA,IACvB;AACA,WAAOA;AAAA,EACT,EAAE;AAAA;AACF,IAAO,mBAAQ;;;AChOR,SAAS,eAAe,GAAG,GAAG,GAAG,eAAe;AACrD,MAAI,kBAAkB,QAAW;AAC/B,kBAAc,CAAC,IAAI;AACnB,kBAAc,CAAC,IAAI;AACnB,kBAAc,CAAC,IAAI;AACnB,WAAO;AAAA,EACT,OAAO;AACL,WAAO,CAAC,GAAG,GAAG,CAAC;AAAA,EACjB;AACF;AAOO,SAAS,UAAU,GAAG,GAAG,GAAG;AACjC,SAAO,IAAI,MAAM,IAAI,MAAM;AAC7B;AAMO,SAAS,OAAO,WAAW;AAChC,SAAO,UAAU,UAAU,CAAC,GAAG,UAAU,CAAC,GAAG,UAAU,CAAC,CAAC;AAC3D;AAMO,SAAS,QAAQ,KAAK;AAC3B,SAAO,IAAI,MAAM,GAAG,EAAE,IAAI,MAAM;AAClC;AAKO,SAAS,KAAK,WAAW;AAC9B,UAAQ,UAAU,CAAC,KAAK,UAAU,CAAC,KAAK,UAAU,CAAC;AACrD;AAMO,SAAS,iBAAiB,WAAW,UAAU;AACpD,MAAI,IAAI,UAAU,CAAC;AACnB,MAAI,IAAI,UAAU,CAAC;AACnB,MAAI,IAAI,UAAU,CAAC;AACnB,MAAI,SAAS,WAAW,IAAI,KAAK,IAAI,SAAS,WAAW,GAAG;AAC1D,WAAO;AAAA,EACT;AACA,MAAI,YAAY,SAAS,iBAAiB,CAAC;AAC3C,MAAI,CAAC,WAAW;AACd,WAAO;AAAA,EACT,OAAO;AACL,WAAO,UAAU,WAAW,GAAG,CAAC;AAAA,EAClC;AACF;;;AC5EA,IAAIC,aAAsC,2BAAY;AACpD,MAAI,gBAAgB,SAAU,GAAG,GAAG;AAClC,oBAAgB,OAAO,kBAAkB;AAAA,MACvC,WAAW,CAAC;AAAA,IACd,aAAa,SAAS,SAAUC,IAAGC,IAAG;AACpC,MAAAD,GAAE,YAAYC;AAAA,IAChB,KAAK,SAAUD,IAAGC,IAAG;AACnB,eAAS,KAAKA,GAAG,KAAI,OAAO,UAAU,eAAe,KAAKA,IAAG,CAAC,EAAG,CAAAD,GAAE,CAAC,IAAIC,GAAE,CAAC;AAAA,IAC7E;AACA,WAAO,cAAc,GAAG,CAAC;AAAA,EAC3B;AACA,SAAO,SAAU,GAAG,GAAG;AACrB,kBAAc,GAAG,CAAC;AAClB,aAAS,KAAK;AACZ,WAAK,cAAc;AAAA,IACrB;AACA,MAAE,YAAY,MAAM,OAAO,OAAO,OAAO,CAAC,KAAK,GAAG,YAAY,EAAE,WAAW,IAAI,GAAG;AAAA,EACpF;AACF,EAAE;AAMF,IAAI;AAAA;AAAA,EAAyB,SAAU,QAAQ;AAC7C,IAAAF,WAAUG,YAAW,MAAM;AAC3B,aAASA,aAAY;AACnB,aAAO,WAAW,QAAQ,OAAO,MAAM,MAAM,SAAS,KAAK;AAAA,IAC7D;AAIA,IAAAA,WAAU,UAAU,cAAc,SAAU,WAAW;AACrD,aAAO,KAAK,eAAe,GAAG;AAC5B,YAAI,OAAO,KAAK,SAAS;AACzB,YAAI,KAAK,OAAO,KAAK,WAAW;AAC9B;AAAA,QACF,OAAO;AACL,eAAK,IAAI,EAAE,QAAQ;AAAA,QACrB;AAAA,MACF;AAAA,IACF;AAIA,IAAAA,WAAU,UAAU,qBAAqB,WAAY;AACnD,UAAI,KAAK,SAAS,MAAM,GAAG;AACzB;AAAA,MACF;AACA,UAAI,MAAM,KAAK,aAAa;AAC5B,UAAI,YAAY,QAAQ,GAAG;AAC3B,UAAI,IAAI,UAAU,CAAC;AACnB,WAAK,QAAQ,SAAU,MAAM;AAC3B,YAAI,KAAK,UAAU,CAAC,MAAM,GAAG;AAC3B,eAAK,OAAO,OAAO,KAAK,SAAS,CAAC;AAClC,eAAK,QAAQ;AAAA,QACf;AAAA,MACF,EAAE,KAAK,IAAI,CAAC;AAAA,IACd;AACA,WAAOA;AAAA,EACT,EAAE,gBAAQ;AAAA;AACV,IAAO,oBAAQ;",
  "names": ["d", "b", "Tile", "__extends", "d", "b", "ImageTile", "LRUCache", "__extends", "d", "b", "TileCache"]
}

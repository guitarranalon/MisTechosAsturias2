{
  "version": 3,
  "sources": ["../../../../../../node_modules/ol/interaction/Property.js", "../../../../../../node_modules/ol/interaction/Interaction.js", "../../../../../../node_modules/ol/interaction/DoubleClickZoom.js", "../../../../../../node_modules/ol/interaction/Pointer.js", "../../../../../../node_modules/ol/events/condition.js", "../../../../../../node_modules/ol/interaction/DragPan.js", "../../../../../../node_modules/ol/interaction/DragRotate.js", "../../../../../../node_modules/ol/render/Box.js", "../../../../../../node_modules/ol/interaction/DragBox.js", "../../../../../../node_modules/ol/interaction/DragZoom.js", "../../../../../../node_modules/ol/events/KeyCode.js", "../../../../../../node_modules/ol/interaction/KeyboardPan.js", "../../../../../../node_modules/ol/interaction/KeyboardZoom.js", "../../../../../../node_modules/ol/Kinetic.js", "../../../../../../node_modules/ol/interaction/MouseWheelZoom.js", "../../../../../../node_modules/ol/interaction/PinchRotate.js", "../../../../../../node_modules/ol/interaction/PinchZoom.js", "../../../../../../node_modules/ol/interaction/DragAndDrop.js", "../../../../../../node_modules/ol/interaction/DragRotateAndZoom.js", "../../../../../../node_modules/ol/geom/Circle.js", "../../../../../../node_modules/ol/Feature.js", "../../../../../../node_modules/ol/geom/flat/interpolate.js", "../../../../../../node_modules/ol/geom/LineString.js", "../../../../../../node_modules/ol/geom/MultiLineString.js", "../../../../../../node_modules/ol/geom/MultiPoint.js", "../../../../../../node_modules/ol/geom/flat/center.js", "../../../../../../node_modules/ol/geom/MultiPolygon.js", "../../../../../../node_modules/ol/interaction/Draw.js", "../../../../../../node_modules/ol/interaction/Extent.js", "../../../../../../node_modules/ol/interaction/Modify.js", "../../../../../../node_modules/ol/interaction/Select.js", "../../../../../../node_modules/ol/interaction/Snap.js", "../../../../../../node_modules/ol/interaction/Translate.js", "../../../../../../node_modules/ol/interaction.js", "../../../../../../node_modules/ol/Map.js"],
  "sourcesContent": ["/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport { easeOut, linear } from '../easing.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */function (_super) {\n  __extends(Interaction, _super);\n  /**\n   * @param {InteractionOptions=} opt_options Options.\n   */\n  function Interaction(opt_options) {\n    var _this = _super.call(this) || this;\n    if (opt_options && opt_options.handleEvent) {\n      _this.handleEvent = opt_options.handleEvent;\n    }\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    _this.map_ = null;\n    _this.setActive(true);\n    return _this;\n  }\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.getActive = function () {\n    return /** @type {boolean} */this.get(InteractionProperty.ACTIVE);\n  };\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Interaction.prototype.getMap = function () {\n    return this.map_;\n  };\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n    return true;\n  };\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.setActive = function (active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  };\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  Interaction.prototype.setMap = function (map) {\n    this.map_ = map;\n  };\n  return Interaction;\n}(BaseObject);\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  var currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center)\n    });\n  }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate in the user projection.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  var currentZoom = view.getZoom();\n  if (currentZoom === undefined) {\n    return;\n  }\n  var newZoom = view.getConstrainedZoom(currentZoom + delta);\n  var newResolution = view.getResolutionForZoom(newZoom);\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut\n  });\n}\nexport default Interaction;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */function (_super) {\n  __extends(DoubleClickZoom, _super);\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  function DoubleClickZoom(opt_options) {\n    var _this = _super.call(this) || this;\n    var options = opt_options ? opt_options : {};\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.delta_ = options.delta ? options.delta : 1;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.duration_ = options.duration !== undefined ? options.duration : 250;\n    return _this;\n  }\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  DoubleClickZoom.prototype.handleEvent = function (mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      var browserEvent = /** @type {MouseEvent} */mapBrowserEvent.originalEvent;\n      var map = mapBrowserEvent.map;\n      var anchor = mapBrowserEvent.coordinate;\n      var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      var view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  };\n  return DoubleClickZoom;\n}(Interaction);\nexport default DoubleClickZoom;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */function (_super) {\n  __extends(PointerInteraction, _super);\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  function PointerInteraction(opt_options) {\n    var _this = this;\n    var options = opt_options ? opt_options : {};\n    _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */options) || this;\n    if (options.handleDownEvent) {\n      _this.handleDownEvent = options.handleDownEvent;\n    }\n    if (options.handleDragEvent) {\n      _this.handleDragEvent = options.handleDragEvent;\n    }\n    if (options.handleMoveEvent) {\n      _this.handleMoveEvent = options.handleMoveEvent;\n    }\n    if (options.handleUpEvent) {\n      _this.handleUpEvent = options.handleUpEvent;\n    }\n    if (options.stopDown) {\n      _this.stopDown = options.stopDown;\n    }\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    _this.handlingDownUpSequence = false;\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    _this.trackedPointers_ = {};\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    _this.targetPointers = [];\n    return _this;\n  }\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  PointerInteraction.prototype.getPointerCount = function () {\n    return this.targetPointers.length;\n  };\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n    return false;\n  };\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) {};\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    var stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        var handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        var handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  };\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) {};\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n    return false;\n  };\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  PointerInteraction.prototype.stopDown = function (handled) {\n    return handled;\n  };\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      var event_1 = mapBrowserEvent.originalEvent;\n      var id = event_1.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event_1;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event_1;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  };\n  return PointerInteraction;\n}(Interaction);\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  var length = pointerEvents.length;\n  var clientX = 0;\n  var clientY = 0;\n  for (var i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  var type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN || type === MapBrowserEventType.POINTERDRAG || type === MapBrowserEventType.POINTERUP;\n}\nexport default PointerInteraction;\n", "/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { FALSE, TRUE } from '../functions.js';\nimport { MAC, WEBKIT } from '../has.js';\nimport { assert } from '../asserts.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  var conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    var pass = true;\n    for (var i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */mapBrowserEvent.originalEvent;\n  return originalEvent.altKey && !(originalEvent.metaKey || originalEvent.ctrlKey) && !originalEvent.shiftKey;\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */mapBrowserEvent.originalEvent;\n  return originalEvent.altKey && !(originalEvent.metaKey || originalEvent.ctrlKey) && originalEvent.shiftKey;\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport var focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex') ? focus(event) : true;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n  var originalEvent = /** @type {MouseEvent} */mapBrowserEvent.originalEvent;\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */mapBrowserEvent.originalEvent;\n  return !originalEvent.altKey && !(originalEvent.metaKey || originalEvent.ctrlKey) && !originalEvent.shiftKey;\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */mapBrowserEvent.originalEvent;\n  return !originalEvent.altKey && (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) && !originalEvent.shiftKey;\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */mapBrowserEvent.originalEvent;\n  return !originalEvent.altKey && !(originalEvent.metaKey || originalEvent.ctrlKey) && originalEvent.shiftKey;\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */mapBrowserEvent.originalEvent;\n  var tagName = /** @type {Element} */originalEvent.target.tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */mapBrowserEvent.originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n  var pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */mapBrowserEvent.originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n  var pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */mapBrowserEvent.originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */mapBrowserEvent.originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { all, focusWithTabindex, noModifierKeys, primaryAction } from '../events/condition.js';\nimport { easeOut } from '../easing.js';\nimport { rotate as rotateCoordinate, scale as scaleCoordinate } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */function (_super) {\n  __extends(DragPan, _super);\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  function DragPan(opt_options) {\n    var _this = _super.call(this, {\n      stopDown: FALSE\n    }) || this;\n    var options = opt_options ? opt_options : {};\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    _this.kinetic_ = options.kinetic;\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    _this.lastCentroid = null;\n    /**\n     * @type {number}\n     */\n    _this.lastPointersCount_;\n    /**\n     * @type {boolean}\n     */\n    _this.panning_ = false;\n    var condition = options.condition ? options.condition : all(noModifierKeys, primaryAction);\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    _this.condition_ = options.onFocusOnly ? all(focusWithTabindex, condition) : condition;\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.noKinetic_ = false;\n    return _this;\n  }\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    var targetPointers = this.targetPointers;\n    var centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        var delta = [this.lastCentroid[0] - centroid[0], centroid[1] - this.lastCentroid[1]];\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  };\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        var distance = this.kinetic_.getDistance();\n        var angle = this.kinetic_.getAngle();\n        var center = view.getCenterInternal();\n        var centerpx = map.getPixelFromCoordinateInternal(center);\n        var dest = map.getCoordinateFromPixelInternal([centerpx[0] - distance * Math.cos(angle), centerpx[1] - distance * Math.sin(angle)]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  };\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  };\n  return DragPan;\n}(PointerInteraction);\nexport default DragPan;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { altShiftKeysOnly, mouseActionButton, mouseOnly } from '../events/condition.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */function (_super) {\n  __extends(DragRotate, _super);\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  function DragRotate(opt_options) {\n    var _this = this;\n    var options = opt_options ? opt_options : {};\n    _this = _super.call(this, {\n      stopDown: FALSE\n    }) || this;\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    _this.lastAngle_ = undefined;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.duration_ = options.duration !== undefined ? options.duration : 250;\n    return _this;\n  }\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    var size = map.getSize();\n    var offset = mapBrowserEvent.pixel;\n    var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      var delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  };\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  };\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n    if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  };\n  return DragRotate;\n}(PointerInteraction);\nexport default DragRotate;\n", "/**\n * @module ol/render/Box\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */function (_super) {\n  __extends(RenderBox, _super);\n  /**\n   * @param {string} className CSS class name.\n   */\n  function RenderBox(className) {\n    var _this = _super.call(this) || this;\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    _this.geometry_ = null;\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    _this.element_ = document.createElement('div');\n    _this.element_.style.position = 'absolute';\n    _this.element_.style.pointerEvents = 'auto';\n    _this.element_.className = 'ol-box ' + className;\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    _this.map_ = null;\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    _this.startPixel_ = null;\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    _this.endPixel_ = null;\n    return _this;\n  }\n  /**\n   * Clean up.\n   */\n  RenderBox.prototype.disposeInternal = function () {\n    this.setMap(null);\n  };\n  /**\n   * @private\n   */\n  RenderBox.prototype.render_ = function () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var px = 'px';\n    var style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  };\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  RenderBox.prototype.setMap = function (map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      var style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  };\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  };\n  /**\n   * Creates or updates the cached geometry.\n   */\n  RenderBox.prototype.createOrUpdateGeometry = function () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var pixels = [startPixel, [startPixel[0], endPixel[1]], endPixel, [endPixel[0], startPixel[1]]];\n    var coordinates = pixels.map(this.map_.getCoordinateFromPixelInternal, this.map_);\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  };\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  RenderBox.prototype.getGeometry = function () {\n    return this.geometry_;\n  };\n  return RenderBox;\n}(Disposable);\nexport default RenderBox;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport { mouseActionButton } from '../events/condition.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */function (_super) {\n  __extends(DragBoxEvent, _super);\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n    var _this = _super.call(this, type) || this;\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    _this.coordinate = coordinate;\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    _this.mapBrowserEvent = mapBrowserEvent;\n    return _this;\n  }\n  return DragBoxEvent;\n}(Event);\nexport { DragBoxEvent };\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */function (_super) {\n  __extends(DragBox, _super);\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  function DragBox(opt_options) {\n    var _this = _super.call(this) || this;\n    var options = opt_options ? opt_options : {};\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n    /**\n     * @type {number}\n     * @private\n     */\n    _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n    if (options.onBoxEnd) {\n      _this.onBoxEnd = options.onBoxEnd;\n    }\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    _this.startPixel_ = null;\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    _this.condition_ = options.condition ? options.condition : mouseActionButton;\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    _this.boxEndCondition_ = options.boxEndCondition ? options.boxEndCondition : _this.defaultBoxEndCondition;\n    return _this;\n  }\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n    var width = endPixel[0] - startPixel[0];\n    var height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  };\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  DragBox.prototype.getGeometry = function () {\n    return this.box_.getGeometry();\n  };\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n  };\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n    this.box_.setMap(null);\n    var completeBox = this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel);\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(new DragBoxEvent(completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL, mapBrowserEvent.coordinate, mapBrowserEvent));\n    return false;\n  };\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  DragBox.prototype.onBoxEnd = function (event) {};\n  return DragBox;\n}(PointerInteraction);\nexport default DragBox;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter } from '../extent.js';\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */function (_super) {\n  __extends(DragZoom, _super);\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  function DragZoom(opt_options) {\n    var _this = this;\n    var options = opt_options ? opt_options : {};\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n    _this = _super.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea\n    }) || this;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.duration_ = options.duration !== undefined ? options.duration : 200;\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.out_ = options.out !== undefined ? options.out : false;\n    return _this;\n  }\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  DragZoom.prototype.onBoxEnd = function (event) {\n    var map = this.getMap();\n    var view = /** @type {!import(\"../View.js\").default} */map.getView();\n    var size = /** @type {!import(\"../size.js\").Size} */map.getSize();\n    var extent = this.getGeometry().getExtent();\n    if (this.out_) {\n      var mapExtent = view.calculateExtentInternal(size);\n      var boxPixelExtent = createOrUpdateFromCoordinates([map.getPixelFromCoordinateInternal(getBottomLeft(extent)), map.getPixelFromCoordinateInternal(getTopRight(extent))]);\n      var factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n      scaleFromCenter(mapExtent, 1 / factor);\n      extent = mapExtent;\n    }\n    var resolution = view.getConstrainedResolution(view.getResolutionForExtentInternal(extent, size));\n    var center = view.getConstrainedCenter(getCenter(extent), resolution);\n    view.animateInternal({\n      resolution: resolution,\n      center: center,\n      duration: this.duration_,\n      easing: easeOut\n    });\n  };\n  return DragZoom;\n}(DragBox);\nexport default DragZoom;\n", "/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { pan } from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport { rotate as rotateCoordinate } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */function (_super) {\n  __extends(KeyboardPan, _super);\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  function KeyboardPan(opt_options) {\n    var _this = _super.call(this) || this;\n    var options = opt_options || {};\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    _this.defaultCondition_ = function (mapBrowserEvent) {\n      return noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent);\n    };\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    _this.condition_ = options.condition !== undefined ? options.condition : _this.defaultCondition_;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.duration_ = options.duration !== undefined ? options.duration : 100;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.pixelDelta_ = options.pixelDelta !== undefined ? options.pixelDelta : 128;\n    return _this;\n  }\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  KeyboardPan.prototype.handleEvent = function (mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      var keyEvent = /** @type {KeyboardEvent} */mapBrowserEvent.originalEvent;\n      var keyCode = keyEvent.keyCode;\n      if (this.condition_(mapBrowserEvent) && (keyCode == KeyCode.DOWN || keyCode == KeyCode.LEFT || keyCode == KeyCode.RIGHT || keyCode == KeyCode.UP)) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        var deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        var delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  };\n  return KeyboardPan;\n}(Interaction);\nexport default KeyboardPan;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { targetNotEditable } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */function (_super) {\n  __extends(KeyboardZoom, _super);\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  function KeyboardZoom(opt_options) {\n    var _this = _super.call(this) || this;\n    var options = opt_options ? opt_options : {};\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    _this.condition_ = options.condition ? options.condition : targetNotEditable;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.delta_ = options.delta ? options.delta : 1;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.duration_ = options.duration !== undefined ? options.duration : 100;\n    return _this;\n  }\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  KeyboardZoom.prototype.handleEvent = function (mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN || mapBrowserEvent.type == EventType.KEYPRESS) {\n      var keyEvent = /** @type {KeyboardEvent} */mapBrowserEvent.originalEvent;\n      var charCode = keyEvent.charCode;\n      if (this.condition_(mapBrowserEvent) && (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n        var map = mapBrowserEvent.map;\n        var delta = charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        var view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  };\n  return KeyboardZoom;\n}(Interaction);\nexport default KeyboardZoom;\n", "/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */function () {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  function Kinetic(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n  /**\n   * FIXME empty description for jsdoc\n   */\n  Kinetic.prototype.begin = function () {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  };\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  Kinetic.prototype.update = function (x, y) {\n    this.points_.push(x, y, Date.now());\n  };\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  Kinetic.prototype.end = function () {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    var delay = Date.now() - this.delay_;\n    var lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n    // get the first point which still falls into the delay time\n    var firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n    var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n    var dx = this.points_[lastIndex] - this.points_[firstIndex];\n    var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  };\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  Kinetic.prototype.getDistance = function () {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  };\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  Kinetic.prototype.getAngle = function () {\n    return this.angle_;\n  };\n  return Kinetic;\n}();\nexport default Kinetic;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX } from '../has.js';\nimport { all, always, focusWithTabindex } from '../events/condition.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */function (_super) {\n  __extends(MouseWheelZoom, _super);\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  function MouseWheelZoom(opt_options) {\n    var _this = this;\n    var options = opt_options ? opt_options : {};\n    _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */options) || this;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.totalDelta_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.lastDelta_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.duration_ = options.duration !== undefined ? options.duration : 250;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.constrainResolution_ = options.constrainResolution !== undefined ? options.constrainResolution : false;\n    var condition = options.condition ? options.condition : always;\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    _this.condition_ = options.onFocusOnly ? all(focusWithTabindex, condition) : condition;\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    _this.lastAnchor_ = null;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    _this.startTime_ = undefined;\n    /**\n     * @private\n     * @type {?}\n     */\n    _this.timeoutId_;\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    _this.mode_ = undefined;\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    _this.trackpadEventGap_ = 400;\n    /**\n     * @type {?}\n     */\n    _this.trackpadTimeoutId_;\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    _this.deltaPerZoom_ = 300;\n    return _this;\n  }\n  /**\n   * @private\n   */\n  MouseWheelZoom.prototype.endInteraction_ = function () {\n    this.trackpadTimeoutId_ = undefined;\n    var view = this.getMap().getView();\n    view.endInteraction(undefined, this.lastDelta_ ? this.lastDelta_ > 0 ? 1 : -1 : 0, this.lastAnchor_);\n  };\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    var type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n    var map = mapBrowserEvent.map;\n    var wheelEvent = /** @type {WheelEvent} */mapBrowserEvent.originalEvent;\n    wheelEvent.preventDefault();\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    var delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n    var now = Date.now();\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n    var view = map.getView();\n    if (this.mode_ === Mode.TRACKPAD && !(view.getConstrainResolution() || this.constrainResolution_)) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.timeout_);\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n    this.totalDelta_ += delta;\n    var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n    return false;\n  };\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n    var view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    var delta = -clamp(this.totalDelta_, -this.maxDelta_ * this.deltaPerZoom_, this.maxDelta_ * this.deltaPerZoom_) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? delta > 0 ? 1 : -1 : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  };\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  };\n  return MouseWheelZoom;\n}(Interaction);\nexport default MouseWheelZoom;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */function (_super) {\n  __extends(PinchRotate, _super);\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  function PinchRotate(opt_options) {\n    var _this = this;\n    var options = opt_options ? opt_options : {};\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */options;\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n    _this = _super.call(this, pointerOptions) || this;\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    _this.anchor_ = null;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    _this.lastAngle_ = undefined;\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.rotating_ = false;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.rotationDelta_ = 0.0;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.duration_ = options.duration !== undefined ? options.duration : 250;\n    return _this;\n  }\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n    var rotationDelta = 0.0;\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n    // angle between touches\n    var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n    if (this.lastAngle_ !== undefined) {\n      var delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  };\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  };\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n  return PinchRotate;\n}(PointerInteraction);\nexport default PinchRotate;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\nimport { FALSE } from '../functions.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */function (_super) {\n  __extends(PinchZoom, _super);\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  function PinchZoom(opt_options) {\n    var _this = this;\n    var options = opt_options ? opt_options : {};\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */options;\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n    _this = _super.call(this, pointerOptions) || this;\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    _this.anchor_ = null;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.duration_ = options.duration !== undefined ? options.duration : 400;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    _this.lastDistance_ = undefined;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.lastScaleDelta_ = 1;\n    return _this;\n  }\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n    var scaleDelta = 1.0;\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n    var dx = touch0.clientX - touch1.clientX;\n    var dy = touch0.clientY - touch1.clientY;\n    // distance between touches\n    var distance = Math.sqrt(dx * dx + dy * dy);\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n    // scale anchor point.\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  };\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  };\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n  return PinchZoom;\n}(PointerInteraction);\nexport default PinchZoom;\n", "/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport FormatType from '../format/FormatType.js';\nimport Interaction from './Interaction.js';\nimport { TRUE } from '../functions.js';\nimport { get as getProjection } from '../proj.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default|import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors\n * (and/or formats pre-constructed with options).\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n/**\n * @enum {string}\n */\nvar DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nvar DragAndDropEvent = /** @class */function (_super) {\n  __extends(DragAndDropEvent, _super);\n  /**\n   * @param {DragAndDropEventType} type Type.\n   * @param {File} file File.\n   * @param {Array<import(\"../Feature.js\").default>=} opt_features Features.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   */\n  function DragAndDropEvent(type, file, opt_features, opt_projection) {\n    var _this = _super.call(this, type) || this;\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n    _this.features = opt_features;\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    _this.file = file;\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n    _this.projection = opt_projection;\n    return _this;\n  }\n  return DragAndDropEvent;\n}(Event);\nexport { DragAndDropEvent };\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * Note that the DragAndDrop interaction uses the TextDecoder() constructor if the supplied\n * combinnation of formats read both text string and ArrayBuffer sources. Older browsers such\n * as IE which do not support this will need a TextDecoder polyfill to be loaded before use.\n *\n * @api\n *\n * @fires DragAndDropEvent\n */\nvar DragAndDrop = /** @class */function (_super) {\n  __extends(DragAndDrop, _super);\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  function DragAndDrop(opt_options) {\n    var _this = this;\n    var options = opt_options ? opt_options : {};\n    _this = _super.call(this, {\n      handleEvent: TRUE\n    }) || this;\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.readAsBuffer_ = false;\n    /**\n     * @private\n     * @type {Array<import(\"../format/Feature.js\").default>}\n     */\n    _this.formats_ = [];\n    var formatConstructors = options.formatConstructors ? options.formatConstructors : [];\n    for (var i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      var format = formatConstructors[i];\n      if (typeof format === 'function') {\n        format = new format();\n      }\n      _this.formats_.push(format);\n      _this.readAsBuffer_ = _this.readAsBuffer_ || format.getType() === FormatType.ARRAY_BUFFER;\n    }\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    _this.projection_ = options.projection ? getProjection(options.projection) : null;\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    _this.dropListenKeys_ = null;\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n    _this.source_ = options.source || null;\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    _this.target = options.target ? options.target : null;\n    return _this;\n  }\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  DragAndDrop.prototype.handleResult_ = function (file, event) {\n    var result = event.target.result;\n    var map = this.getMap();\n    var projection = this.projection_;\n    if (!projection) {\n      var view = map.getView();\n      projection = view.getProjection();\n    }\n    var text;\n    var formats = this.formats_;\n    for (var i = 0, ii = formats.length; i < ii; ++i) {\n      var format = formats[i];\n      var input = result;\n      if (this.readAsBuffer_ && format.getType() !== FormatType.ARRAY_BUFFER) {\n        if (text === undefined) {\n          text = new TextDecoder().decode(result);\n        }\n        input = text;\n      }\n      var features = this.tryReadFeatures_(format, input, {\n        featureProjection: projection\n      });\n      if (features && features.length > 0) {\n        if (this.source_) {\n          this.source_.clear();\n          this.source_.addFeatures(features);\n        }\n        this.dispatchEvent(new DragAndDropEvent(DragAndDropEventType.ADD_FEATURES, file, features, projection));\n        break;\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  DragAndDrop.prototype.registerListeners_ = function () {\n    var map = this.getMap();\n    if (map) {\n      var dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [listen(dropArea, EventType.DROP, this.handleDrop, this), listen(dropArea, EventType.DRAGENTER, this.handleStop, this), listen(dropArea, EventType.DRAGOVER, this.handleStop, this), listen(dropArea, EventType.DROP, this.handleStop, this)];\n    }\n  };\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  DragAndDrop.prototype.setActive = function (active) {\n    if (!this.getActive() && active) {\n      this.registerListeners_();\n    }\n    if (this.getActive() && !active) {\n      this.unregisterListeners_();\n    }\n    _super.prototype.setActive.call(this, active);\n  };\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  DragAndDrop.prototype.setMap = function (map) {\n    this.unregisterListeners_();\n    _super.prototype.setMap.call(this, map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  };\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  DragAndDrop.prototype.tryReadFeatures_ = function (format, text, options) {\n    try {\n      return /** @type {Array<import(\"../Feature.js\").default>} */format.readFeatures(text, options);\n    } catch (e) {\n      return null;\n    }\n  };\n  /**\n   * @private\n   */\n  DragAndDrop.prototype.unregisterListeners_ = function () {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  };\n  /**\n   * @param {DragEvent} event Event.\n   */\n  DragAndDrop.prototype.handleDrop = function (event) {\n    var files = event.dataTransfer.files;\n    for (var i = 0, ii = files.length; i < ii; ++i) {\n      var file = files.item(i);\n      var reader = new FileReader();\n      reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\n      if (this.readAsBuffer_) {\n        reader.readAsArrayBuffer(file);\n      } else {\n        reader.readAsText(file);\n      }\n    }\n  };\n  /**\n   * @param {DragEvent} event Event.\n   */\n  DragAndDrop.prototype.handleStop = function (event) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n  };\n  return DragAndDrop;\n}(Interaction);\nexport default DragAndDrop;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport PointerInteraction from './Pointer.js';\nimport { mouseOnly, shiftKeyOnly } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nvar DragRotateAndZoom = /** @class */function (_super) {\n  __extends(DragRotateAndZoom, _super);\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  function DragRotateAndZoom(opt_options) {\n    var _this = this;\n    var options = opt_options ? opt_options : {};\n    _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */options) || this;\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    _this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    _this.lastAngle_ = undefined;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    _this.lastMagnitude_ = undefined;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.lastScaleDelta_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.duration_ = options.duration !== undefined ? options.duration : 400;\n    return _this;\n  }\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  DragRotateAndZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n    var map = mapBrowserEvent.map;\n    var size = map.getSize();\n    var offset = mapBrowserEvent.pixel;\n    var deltaX = offset[0] - size[0] / 2;\n    var deltaY = size[1] / 2 - offset[1];\n    var theta = Math.atan2(deltaY, deltaX);\n    var magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    var view = map.getView();\n    if (this.lastAngle_ !== undefined) {\n      var angleDelta = this.lastAngle_ - theta;\n      view.adjustRotationInternal(angleDelta);\n    }\n    this.lastAngle_ = theta;\n    if (this.lastMagnitude_ !== undefined) {\n      view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);\n    }\n    if (this.lastMagnitude_ !== undefined) {\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n    }\n    this.lastMagnitude_ = magnitude;\n  };\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  DragRotateAndZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n    view.endInteraction(this.duration_, direction);\n    this.lastScaleDelta_ = 0;\n    return false;\n  };\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  DragRotateAndZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n    if (this.condition_(mapBrowserEvent)) {\n      mapBrowserEvent.map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      this.lastMagnitude_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  };\n  return DragRotateAndZoom;\n}(PointerInteraction);\nexport default DragRotateAndZoom;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/geom/Circle\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { createOrUpdate, forEachCorner, intersects } from '../extent.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { rotate, translate } from './flat/transform.js';\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nvar Circle = /** @class */function (_super) {\n  __extends(Circle, _super);\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `opt_layout` and no\n   *     `opt_radius` are also accepted.\n   * @param {number=} opt_radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  function Circle(center, opt_radius, opt_layout) {\n    var _this = _super.call(this) || this;\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      _this.setFlatCoordinates(opt_layout, center);\n    } else {\n      var radius = opt_radius ? opt_radius : 0;\n      _this.setCenterAndRadius(center, radius, opt_layout);\n    }\n    return _this;\n  }\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   */\n  Circle.prototype.clone = function () {\n    var circle = new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n    circle.applyProperties(this);\n    return circle;\n  };\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  Circle.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    var squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (var i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        var delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (var i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  Circle.prototype.containsXY = function (x, y) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  };\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  Circle.prototype.getCenter = function () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  Circle.prototype.computeExtent = function (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(flatCoordinates[0] - radius, flatCoordinates[1] - radius, flatCoordinates[0] + radius, flatCoordinates[1] + radius, extent);\n  };\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  Circle.prototype.getRadius = function () {\n    return Math.sqrt(this.getRadiusSquared_());\n  };\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  Circle.prototype.getRadiusSquared_ = function () {\n    var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  };\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  Circle.prototype.getType = function () {\n    return GeometryType.CIRCLE;\n  };\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  Circle.prototype.intersectsExtent = function (extent) {\n    var circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      var center = this.getCenter();\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  };\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  Circle.prototype.setCenter = function (center) {\n    var stride = this.stride;\n    var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    var flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (var i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  };\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  Circle.prototype.setCenterAndRadius = function (center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    var flatCoordinates = this.flatCoordinates;\n    var offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (var i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  };\n  Circle.prototype.getCoordinates = function () {\n    return null;\n  };\n  Circle.prototype.setCoordinates = function (coordinates, opt_layout) {};\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  Circle.prototype.setRadius = function (radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  };\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  Circle.prototype.rotate = function (angle, anchor) {\n    var center = this.getCenter();\n    var stride = this.getStride();\n    this.setCenter(rotate(center, 0, center.length, stride, angle, anchor, center));\n    this.changed();\n  };\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  Circle.prototype.translate = function (deltaX, deltaY) {\n    var center = this.getCenter();\n    var stride = this.getStride();\n    this.setCenter(translate(center, 0, center.length, stride, deltaX, deltaY, center));\n    this.changed();\n  };\n  return Circle;\n}(SimpleGeometry);\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/Feature\n */\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport EventType from './events/EventType.js';\nimport { assert } from './asserts.js';\nimport { listen, unlistenByKey } from './events.js';\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nvar Feature = /** @class */function (_super) {\n  __extends(Feature, _super);\n  /**\n   * @param {Geometry|Object<string, *>=} opt_geometryOrProperties\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  function Feature(opt_geometryOrProperties) {\n    var _this = _super.call(this) || this;\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    _this.id_ = undefined;\n    /**\n     * @type {string}\n     * @private\n     */\n    _this.geometryName_ = 'geometry';\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    _this.style_ = null;\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    _this.styleFunction_ = undefined;\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    _this.geometryChangeKey_ = null;\n    _this.addEventListener(getChangeEventType(_this.geometryName_), _this.handleGeometryChanged_);\n    if (opt_geometryOrProperties) {\n      if (typeof (/** @type {?} */opt_geometryOrProperties.getSimplifiedGeometry) === 'function') {\n        var geometry = /** @type {Geometry} */opt_geometryOrProperties;\n        _this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        var properties = opt_geometryOrProperties;\n        _this.setProperties(properties);\n      }\n    }\n    return _this;\n  }\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  Feature.prototype.clone = function () {\n    var clone = new Feature(this.hasProperties() ? this.getProperties() : null);\n    clone.setGeometryName(this.getGeometryName());\n    var geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    var style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  };\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  Feature.prototype.getGeometry = function () {\n    return /** @type {Geometry|undefined} */this.get(this.geometryName_);\n  };\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Feature.prototype.getId = function () {\n    return this.id_;\n  };\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  Feature.prototype.getGeometryName = function () {\n    return this.geometryName_;\n  };\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  Feature.prototype.getStyle = function () {\n    return this.style_;\n  };\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  Feature.prototype.getStyleFunction = function () {\n    return this.styleFunction_;\n  };\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChange_ = function () {\n    this.changed();\n  };\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChanged_ = function () {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    var geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\n    }\n    this.changed();\n  };\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  Feature.prototype.setGeometry = function (geometry) {\n    this.set(this.geometryName_, geometry);\n  };\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike=} opt_style Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  Feature.prototype.setStyle = function (opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style ? undefined : createStyleFunction(opt_style);\n    this.changed();\n  };\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  Feature.prototype.setId = function (id) {\n    this.id_ = id;\n    this.changed();\n  };\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  Feature.prototype.setGeometryName = function (name) {\n    this.removeEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  };\n  return Feature;\n}(BaseObject);\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    var styles_1;\n    if (Array.isArray(obj)) {\n      styles_1 = obj;\n    } else {\n      assert(typeof (/** @type {?} */obj.getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      var style = /** @type {import(\"./style/Style.js\").default} */obj;\n      styles_1 = [style];\n    }\n    return function () {\n      return styles_1;\n    };\n  }\n}\nexport default Feature;\n", "/**\n * @module ol/geom/flat/interpolate\n */\nimport { binarySearch } from '../../array.js';\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @param {number=} opt_dimension Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest, opt_dimension) {\n  var o, t;\n  var n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length_1 = 0;\n    var cumulativeLengths = [0];\n    for (var i = offset + stride; i < end; i += stride) {\n      var x2 = flatCoordinates[i];\n      var y2 = flatCoordinates[i + 1];\n      length_1 += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length_1);\n      x1 = x2;\n      y1 = y2;\n    }\n    var target = fraction * length_1;\n    var index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t = (target - cumulativeLengths[-index - 2]) / (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var dest = opt_dest ? opt_dest : new Array(dimension);\n  for (var i = 0; i < dimension; ++i) {\n    dest[i] = o === undefined ? NaN : t === undefined ? flatCoordinates[o + i] : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  var coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  var lo = offset / stride;\n  var hi = end / stride;\n  while (lo < hi) {\n    var mid = lo + hi >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  var m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  var m1 = flatCoordinates[(lo + 1) * stride - 1];\n  var t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (var i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  var coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { extend } from '../array.js';\nimport { forEach as forEachSegment } from './flat/segments.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { interpolatePoint, lineStringCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineString } from './flat/intersectsextent.js';\nimport { lineStringLength } from './flat/length.js';\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /** @class */function (_super) {\n  __extends(LineString, _super);\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  function LineString(coordinates, opt_layout) {\n    var _this = _super.call(this) || this;\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    _this.flatMidpoint_ = null;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.flatMidpointRevision_ = -1;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.maxDelta_ = -1;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.maxDeltaRevision_ = -1;\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */coordinates);\n    } else {\n      _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */coordinates, opt_layout);\n    }\n    return _this;\n  }\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  LineString.prototype.appendCoordinate = function (coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  };\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  LineString.prototype.clone = function () {\n    var lineString = new LineString(this.flatCoordinates.slice(), this.layout);\n    lineString.applyProperties(this);\n    return lineString;\n  };\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  LineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  LineString.prototype.forEachSegment = function (callback) {\n    return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n  };\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  LineString.prototype.getCoordinateAtM = function (m, opt_extrapolate) {\n    if (this.layout != GeometryLayout.XYM && this.layout != GeometryLayout.XYZM) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate);\n  };\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  LineString.prototype.getCoordinates = function () {\n    return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  LineString.prototype.getCoordinateAt = function (fraction, opt_dest) {\n    return interpolatePoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, opt_dest, this.stride);\n  };\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  LineString.prototype.getLength = function () {\n    return lineStringLength(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  LineString.prototype.getFlatMidpoint = function () {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  };\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  LineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  LineString.prototype.getType = function () {\n    return GeometryType.LINE_STRING;\n  };\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  LineString.prototype.intersectsExtent = function (extent) {\n    return intersectsLineString(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n  };\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  LineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n  return LineString;\n}(SimpleGeometry);\nexport default LineString;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { arrayMaxSquaredDelta, assignClosestArrayPoint } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { douglasPeuckerArray } from './flat/simplify.js';\nimport { extend } from '../array.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { interpolatePoint, lineStringsCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineStringArray } from './flat/intersectsextent.js';\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /** @class */function (_super) {\n  __extends(MultiLineString, _super);\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @param {Array<number>=} opt_ends Flat coordinate ends for internal use.\n   */\n  function MultiLineString(coordinates, opt_layout, opt_ends) {\n    var _this = _super.call(this) || this;\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    _this.ends_ = [];\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.maxDelta_ = -1;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.maxDeltaRevision_ = -1;\n    if (Array.isArray(coordinates[0])) {\n      _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */coordinates, opt_layout);\n    } else if (opt_layout !== undefined && opt_ends) {\n      _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */coordinates);\n      _this.ends_ = opt_ends;\n    } else {\n      var layout = _this.getLayout();\n      var lineStrings = /** @type {Array<LineString>} */coordinates;\n      var flatCoordinates = [];\n      var ends = [];\n      for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n        var lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      _this.setFlatCoordinates(layout, flatCoordinates);\n      _this.ends_ = ends;\n    }\n    return _this;\n  }\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  MultiLineString.prototype.appendLineString = function (lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  MultiLineString.prototype.clone = function () {\n    var multiLineString = new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  };\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  MultiLineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  MultiLineString.prototype.getCoordinateAtM = function (m, opt_extrapolate, opt_interpolate) {\n    if (this.layout != GeometryLayout.XYM && this.layout != GeometryLayout.XYZM || this.flatCoordinates.length === 0) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(this.flatCoordinates, 0, this.ends_, this.stride, m, extrapolate, interpolate);\n  };\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  MultiLineString.prototype.getCoordinates = function () {\n    return inflateCoordinatesArray(this.flatCoordinates, 0, this.ends_, this.stride);\n  };\n  /**\n   * @return {Array<number>} Ends.\n   */\n  MultiLineString.prototype.getEnds = function () {\n    return this.ends_;\n  };\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  MultiLineString.prototype.getLineString = function (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  MultiLineString.prototype.getLineStrings = function () {\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var layout = this.layout;\n    /** @type {Array<LineString>} */\n    var lineStrings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  };\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  MultiLineString.prototype.getFlatMidpoints = function () {\n    var midpoints = [];\n    var flatCoordinates = this.flatCoordinates;\n    var offset = 0;\n    var ends = this.ends_;\n    var stride = this.stride;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var midpoint = interpolatePoint(flatCoordinates, offset, end, stride, 0.5);\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  };\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  MultiLineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  MultiLineString.prototype.getType = function () {\n    return GeometryType.MULTI_LINE_STRING;\n  };\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  MultiLineString.prototype.intersectsExtent = function (extent) {\n    return intersectsLineStringArray(this.flatCoordinates, 0, this.ends_, this.stride, extent);\n  };\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @api\n   */\n  MultiLineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n  return MultiLineString;\n}(SimpleGeometry);\nexport default MultiLineString;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { closestSquaredDistanceXY, containsXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /** @class */function (_super) {\n  __extends(MultiPoint, _super);\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  function MultiPoint(coordinates, opt_layout) {\n    var _this = _super.call(this) || this;\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */coordinates);\n    } else {\n      _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */coordinates, opt_layout);\n    }\n    return _this;\n  }\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  MultiPoint.prototype.appendPoint = function (point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  };\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  MultiPoint.prototype.clone = function () {\n    var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  };\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  MultiPoint.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var squaredDistance = squaredDx(x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (var j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  };\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  MultiPoint.prototype.getCoordinates = function () {\n    return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  MultiPoint.prototype.getPoint = function (index) {\n    var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(this.flatCoordinates.slice(index * this.stride, (index + 1) * this.stride), this.layout);\n  };\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  MultiPoint.prototype.getPoints = function () {\n    var flatCoordinates = this.flatCoordinates;\n    var layout = this.layout;\n    var stride = this.stride;\n    /** @type {Array<Point>} */\n    var points = [];\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  };\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  MultiPoint.prototype.getType = function () {\n    return GeometryType.MULTI_POINT;\n  };\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  MultiPoint.prototype.intersectsExtent = function (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  MultiPoint.prototype.setCoordinates = function (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n  return MultiPoint;\n}(SimpleGeometry);\nexport default MultiPoint;\n", "/**\n * @module ol/geom/flat/center\n */\nimport { createEmpty, createOrUpdateFromFlatCoordinates } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var flatCenters = [];\n  var extent = createEmpty();\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateMultiCoordinatesArray } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointsOfMultiArray } from './flat/interiorpoint.js';\nimport { inflateMultiCoordinatesArray } from './flat/inflate.js';\nimport { intersectsLinearRingMultiArray } from './flat/intersectsextent.js';\nimport { linearRingssAreOriented, orientLinearRingsArray } from './flat/orient.js';\nimport { linearRingss as linearRingssArea } from './flat/area.js';\nimport { linearRingss as linearRingssCenter } from './flat/center.js';\nimport { linearRingssContainsXY } from './flat/contains.js';\nimport { quantizeMultiArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /** @class */function (_super) {\n  __extends(MultiPolygon, _super);\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @param {Array<Array<number>>=} opt_endss Array of ends for internal use with flat coordinates.\n   */\n  function MultiPolygon(coordinates, opt_layout, opt_endss) {\n    var _this = _super.call(this) || this;\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    _this.endss_ = [];\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.flatInteriorPointsRevision_ = -1;\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    _this.flatInteriorPoints_ = null;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.maxDelta_ = -1;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.maxDeltaRevision_ = -1;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.orientedRevision_ = -1;\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    _this.orientedFlatCoordinates_ = null;\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      var layout = _this.getLayout();\n      var polygons = /** @type {Array<Polygon>} */coordinates;\n      var flatCoordinates = [];\n      var endss = [];\n      for (var i = 0, ii = polygons.length; i < ii; ++i) {\n        var polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        var offset = flatCoordinates.length;\n        var ends = polygon.getEnds();\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */coordinates);\n      _this.endss_ = opt_endss;\n    } else {\n      _this.setCoordinates(/** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */coordinates, opt_layout);\n    }\n    return _this;\n  }\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.appendPolygon = function (polygon) {\n    /** @type {Array<number>} */\n    var ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      var offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  };\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  MultiPolygon.prototype.clone = function () {\n    var len = this.endss_.length;\n    var newEndss = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n    var multiPolygon = new MultiPolygon(this.flatCoordinates.slice(), this.layout, newEndss);\n    multiPolygon.applyProperties(this);\n    return multiPolygon;\n  };\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  MultiPolygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(this.flatCoordinates, 0, this.endss_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  MultiPolygon.prototype.containsXY = function (x, y) {\n    return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n  };\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  MultiPolygon.prototype.getArea = function () {\n    return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n  };\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  MultiPolygon.prototype.getCoordinates = function (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(flatCoordinates, 0, this.endss_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n    return inflateMultiCoordinatesArray(flatCoordinates, 0, this.endss_, this.stride);\n  };\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  MultiPolygon.prototype.getEndss = function () {\n    return this.endss_;\n  };\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  MultiPolygon.prototype.getFlatInteriorPoints = function () {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      var flatCenters = linearRingssCenter(this.flatCoordinates, 0, this.endss_, this.stride);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, flatCenters);\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  };\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  MultiPolygon.prototype.getInteriorPoints = function () {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n  };\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  MultiPolygon.prototype.getOrientedFlatCoordinates = function () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  MultiPolygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(this.flatCoordinates, 0, this.endss_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEndss);\n    return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n  };\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygon = function (index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    var offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      var prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    var ends = this.endss_[index].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n  };\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygons = function () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var endss = this.endss_;\n    var polygons = [];\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      var ends = endss[i].slice();\n      var end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  };\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  MultiPolygon.prototype.getType = function () {\n    return GeometryType.MULTI_POLYGON;\n  };\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  MultiPolygon.prototype.intersectsExtent = function (extent) {\n    return intersectsLinearRingMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n  };\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  MultiPolygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = deflateMultiCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  };\n  return MultiPolygon;\n}(SimpleGeometry);\nexport default MultiPolygon;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, { fromCircle, makeRegular } from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { FALSE, TRUE } from '../functions.js';\nimport { always, noModifierKeys, shiftKeyOnly } from '../events/condition.js';\nimport { boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../extent.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { fromUserCoordinate, getUserProjection } from '../proj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { squaredDistance as squaredCoordinateDistance } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/GeometryType.js\").default} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nvar Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n/**\n * @enum {string}\n */\nvar DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nvar DrawEvent = /** @class */function (_super) {\n  __extends(DrawEvent, _super);\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  function DrawEvent(type, feature) {\n    var _this = _super.call(this, type) || this;\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    _this.feature = feature;\n    return _this;\n  }\n  return DrawEvent;\n}(Event);\nexport { DrawEvent };\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nvar Draw = /** @class */function (_super) {\n  __extends(Draw, _super);\n  /**\n   * @param {Options} options Options.\n   */\n  function Draw(options) {\n    var _this = this;\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */options;\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n    _this = _super.call(this, pointerOptions) || this;\n    /**\n     * @type {boolean}\n     * @private\n     */\n    _this.shouldHandle_ = false;\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    _this.downPx_ = null;\n    /**\n     * @type {?}\n     * @private\n     */\n    _this.downTimeout_;\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    _this.lastDragTime_;\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    _this.pointerType_;\n    /**\n     * @type {boolean}\n     * @private\n     */\n    _this.freehand_ = false;\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource}\n     * @private\n     */\n    _this.source_ = options.source ? options.source : null;\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>}\n     * @private\n     */\n    _this.features_ = options.features ? options.features : null;\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    _this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/GeometryType.js\").default}\n     * @private\n     */\n    _this.type_ = /** @type {import(\"../geom/GeometryType.js\").default} */options.type;\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    _this.mode_ = getMode(_this.type_);\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    _this.stopClick_ = !!options.stopClick;\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    _this.minPoints_ = options.minPoints ? options.minPoints : _this.mode_ === Mode.POLYGON ? 3 : 2;\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    _this.maxPoints_ = _this.mode_ === Mode.CIRCLE ? 2 : options.maxPoints ? options.maxPoints : Infinity;\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    _this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n    var geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      var mode_1 = _this.mode_;\n      if (mode_1 === Mode.CIRCLE) {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          var circle = geometry ? (/** @type {Circle} */geometry) : new Circle([NaN, NaN]);\n          var center = fromUserCoordinate(coordinates[0], projection);\n          var squaredLength = squaredCoordinateDistance(center, fromUserCoordinate(coordinates[coordinates.length - 1], projection));\n          circle.setCenterAndRadius(center, Math.sqrt(squaredLength));\n          var userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        var Constructor_1;\n        if (mode_1 === Mode.POINT) {\n          Constructor_1 = Point;\n        } else if (mode_1 === Mode.LINE_STRING) {\n          Constructor_1 = LineString;\n        } else if (mode_1 === Mode.POLYGON) {\n          Constructor_1 = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          if (geometry) {\n            if (mode_1 === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor_1(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    _this.geometryFunction_ = geometryFunction;\n    /**\n     * @type {number}\n     * @private\n     */\n    _this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    _this.finishCoordinate_ = null;\n    /**\n     * Sketch feature.\n     * @type {Feature}\n     * @private\n     */\n    _this.sketchFeature_ = null;\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    _this.sketchPoint_ = null;\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    _this.sketchCoords_ = null;\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    _this.sketchLine_ = null;\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    _this.sketchLineCoords_ = null;\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    _this.squaredClickTolerance_ = options.clickTolerance ? options.clickTolerance * options.clickTolerance : 36;\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    _this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true\n    });\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    _this.geometryName_ = options.geometryName;\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    _this.condition_ = options.condition ? options.condition : noModifierKeys;\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    _this.freehandCondition_;\n    if (options.freehand) {\n      _this.freehandCondition_ = always;\n    } else {\n      _this.freehandCondition_ = options.freehandCondition ? options.freehandCondition : shiftKeyOnly;\n    }\n    _this.addEventListener(getChangeEventType(InteractionProperty.ACTIVE), _this.updateState_);\n    return _this;\n  }\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  Draw.prototype.setMap = function (map) {\n    _super.prototype.setMap.call(this, map);\n    this.updateState_();\n  };\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  Draw.prototype.getOverlay = function () {\n    return this.overlay_;\n  };\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  Draw.prototype.handleEvent = function (event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n    var move = event.type === MapBrowserEventType.POINTERMOVE;\n    var pass = true;\n    if (!this.freehand_ && this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n      var now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (this.freehand_ && event.type === MapBrowserEventType.POINTERDRAG && this.sketchFeature_ !== null) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (this.freehand_ && event.type === MapBrowserEventType.POINTERDOWN) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (event.originalEvent.pointerType === 'mouse' || event.type === MapBrowserEventType.POINTERDRAG && this.downTimeout_ === undefined) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n    return _super.prototype.handleEvent.call(this, event) && pass;\n  };\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  Draw.prototype.handleDownEvent = function (event) {\n    this.shouldHandle_ = !this.freehand_;\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    } else if (this.condition_(event)) {\n      this.lastDragTime_ = Date.now();\n      this.downTimeout_ = setTimeout(function () {\n        this.handlePointerMove_(new MapBrowserEvent(MapBrowserEventType.POINTERMOVE, event.map, event.originalEvent, false, event.frameState));\n      }.bind(this), this.dragVertexDelay_);\n      this.downPx_ = event.pixel;\n      return true;\n    } else {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n  };\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  Draw.prototype.handleUpEvent = function (event) {\n    var pass = true;\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n      this.handlePointerMove_(event);\n      if (this.shouldHandle_) {\n        switch (true) {\n          case !this.finishCoordinate_:\n            this.startDrawing_(event.coordinate);\n            if (this.mode_ !== Mode.POINT) {\n              break;\n            }\n          // eslint-disable-next-line no-fallthrough\n          case this.freehand_ || this.atFinish_(event.pixel) && this.finishCondition_(event):\n            this.finishDrawing();\n            break;\n          case !this.freehand_:\n            this.addToDrawing_(event.coordinate);\n            break;\n          default:\n            break;\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n    if (!pass && this.stopClick_) {\n      event.originalEvent.stopPropagation();\n    }\n    return pass;\n  };\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @private\n   */\n  Draw.prototype.handlePointerMove_ = function (event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (this.downPx_ && (!this.freehand_ && this.shouldHandle_ || this.freehand_ && !this.shouldHandle_)) {\n      var downPx = this.downPx_;\n      var clickPx = event.pixel;\n      var dx = downPx[0] - clickPx[0];\n      var dy = downPx[1] - clickPx[1];\n      var squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_ ? squaredDistance > this.squaredClickTolerance_ : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event.coordinate);\n    } else {\n      this.createOrUpdateSketchPoint_(event);\n    }\n  };\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  Draw.prototype.atFinish_ = function (pixel) {\n    var at = false;\n    if (this.sketchFeature_) {\n      var potentiallyDone = false;\n      var potentiallyFinishCoordinates = [this.finishCoordinate_];\n      var mode = this.mode_;\n      if (mode === Mode.POINT) {\n        at = true;\n      } else if (mode === Mode.CIRCLE) {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === Mode.POLYGON) {\n        var sketchCoords = /** @type {PolyCoordType} */this.sketchCoords_;\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [sketchCoords[0][0], sketchCoords[0][sketchCoords[0].length - 2]];\n      }\n      if (potentiallyDone) {\n        var map = this.getMap();\n        for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          var finishCoordinate = potentiallyFinishCoordinates[i];\n          var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          var dx = pixel[0] - finishPixel[0];\n          var dy = pixel[1] - finishPixel[1];\n          var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  };\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.createOrUpdateSketchPoint_ = function (event) {\n    var coordinates = event.coordinate.slice();\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      var sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  };\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  Draw.prototype.createOrUpdateCustomSketchLine_ = function (geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    var ring = geometry.getLinearRing(0);\n    var sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(ring.getLayout(), ring.getFlatCoordinates());\n      sketchLineGeom.changed();\n    }\n  };\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  Draw.prototype.startDrawing_ = function (start) {\n    var projection = this.getMap().getView().getProjection();\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    var geometry = this.geometryFunction_(this.sketchCoords_, undefined, projection);\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  Draw.prototype.modifyDrawing_ = function (coordinate) {\n    var map = this.getMap();\n    var geometry = this.sketchFeature_.getGeometry();\n    var projection = map.getView().getProjection();\n    var coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */this.sketchCoords_[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(/** @type {!LineCoordType} */this.sketchCoords_, geometry, projection);\n    if (this.sketchPoint_) {\n      var sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (geometry.getType() === GeometryType.POLYGON && this.mode_ !== Mode.POLYGON) {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */geometry);\n    } else if (this.sketchLineCoords_) {\n      var sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  };\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @private\n   */\n  Draw.prototype.addToDrawing_ = function (coordinate) {\n    var geometry = this.sketchFeature_.getGeometry();\n    var projection = this.getMap().getView().getProjection();\n    var done;\n    var coordinates;\n    var mode = this.mode_;\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */this.sketchCoords_;\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */this.sketchCoords_[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  };\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  Draw.prototype.removeLastPoint = function () {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    var geometry = this.sketchFeature_.getGeometry();\n    var projection = this.getMap().getView().getProjection();\n    var coordinates;\n    var mode = this.mode_;\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n      coordinates = /** @type {LineCoordType} */this.sketchCoords_;\n      coordinates.splice(-2, 1);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n        var finishCoordinate = this.finishCoordinate_.slice();\n        coordinates[coordinates.length - 1] = finishCoordinate;\n        this.sketchPoint_.setGeometry(new Point(finishCoordinate));\n      }\n      this.geometryFunction_(coordinates, geometry, projection);\n      if (geometry.getType() === GeometryType.POLYGON && this.sketchLine_) {\n        this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */geometry);\n      }\n    } else if (mode === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */this.sketchCoords_[0];\n      coordinates.splice(-2, 1);\n      var sketchLineGeom = this.sketchLine_.getGeometry();\n      if (coordinates.length >= 2) {\n        var finishCoordinate = coordinates[coordinates.length - 2].slice();\n        coordinates[coordinates.length - 1] = finishCoordinate;\n        this.sketchPoint_.setGeometry(new Point(finishCoordinate));\n      }\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    if (coordinates.length === 1) {\n      this.abortDrawing();\n    }\n    this.updateSketchFeatures_();\n  };\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  Draw.prototype.finishDrawing = function () {\n    var sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    var coordinates = this.sketchCoords_;\n    var geometry = sketchFeature.getGeometry();\n    var projection = this.getMap().getView().getProjection();\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */\n      coordinates[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(new MultiPoint([(/** @type {PointCoordType} */coordinates)]));\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(new MultiLineString([(/** @type {LineCoordType} */coordinates)]));\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(new MultiPolygon([(/** @type {PolyCoordType} */coordinates)]));\n    }\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  };\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature} The sketch feature (or null if none).\n   * @private\n   */\n  Draw.prototype.abortDrawing_ = function () {\n    this.finishCoordinate_ = null;\n    var sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    return sketchFeature;\n  };\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  Draw.prototype.abortDrawing = function () {\n    var sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  };\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  Draw.prototype.appendCoordinates = function (coordinates) {\n    var mode = this.mode_;\n    var newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    var sketchCoords;\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n      sketchCoords = /** @type {LineCoordType} */this.sketchCoords_;\n    } else if (mode === Mode.POLYGON) {\n      sketchCoords = this.sketchCoords_ && this.sketchCoords_.length ? /** @type {PolyCoordType} */this.sketchCoords_[0] : [];\n    } else {\n      return;\n    }\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n    // Append coordinate list\n    for (var i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n    var ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  };\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  Draw.prototype.extend = function (feature) {\n    var geometry = feature.getGeometry();\n    var lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  Draw.prototype.updateSketchFeatures_ = function () {\n    var sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    var overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  };\n  /**\n   * @private\n   */\n  Draw.prototype.updateState_ = function () {\n    var map = this.getMap();\n    var active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  };\n  return Draw;\n}(PointerInteraction);\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number=} opt_angle Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function (coordinates, opt_geometry, projection) {\n    var center = fromUserCoordinate(/** @type {LineCoordType} */coordinates[0], projection);\n    var end = fromUserCoordinate(/** @type {LineCoordType} */coordinates[coordinates.length - 1], projection);\n    var radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    var geometry = opt_geometry ? (/** @type {Polygon} */opt_geometry) : fromCircle(new Circle(center), opt_sides);\n    var angle = opt_angle;\n    if (!opt_angle && opt_angle !== 0) {\n      var x = end[0] - center[0];\n      var y = end[1] - center[1];\n      angle = Math.atan2(y, x);\n    }\n    makeRegular(geometry, center, radius, angle);\n    var userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, opt_geometry, projection) {\n    var extent = boundingExtent(/** @type {LineCoordType} */[coordinates[0], coordinates[coordinates.length - 1]].map(function (coordinate) {\n      return fromUserCoordinate(coordinate, projection);\n    }));\n    var boxCoordinates = [[getBottomLeft(extent), getBottomRight(extent), getTopRight(extent), getTopLeft(extent), getBottomLeft(extent)]];\n    var geometry = opt_geometry;\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    var userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/GeometryType.js\").default} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  var mode;\n  if (type === GeometryType.POINT || type === GeometryType.MULTI_POINT) {\n    mode = Mode.POINT;\n  } else if (type === GeometryType.LINE_STRING || type === GeometryType.MULTI_LINE_STRING) {\n    mode = Mode.LINE_STRING;\n  } else if (type === GeometryType.POLYGON || type === GeometryType.MULTI_POLYGON) {\n    mode = Mode.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Mode.CIRCLE;\n  }\n  return /** @type {!Mode} */mode;\n}\nexport default Draw;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/Extent\n */\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { always } from '../events/condition.js';\nimport { boundingExtent, getArea } from '../extent.js';\nimport { closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment } from '../coordinate.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { fromExtent as polygonFromExtent } from '../geom/Polygon.js';\nimport { toUserExtent } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~always}.\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n/**\n * @enum {string}\n */\nvar ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event ExtentEvent#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nvar ExtentEvent = /** @class */function (_super) {\n  __extends(ExtentEvent, _super);\n  /**\n   * @param {import(\"../extent.js\").Extent} extent the new extent\n   */\n  function ExtentEvent(extent) {\n    var _this = _super.call(this, ExtentEventType.EXTENTCHANGED) || this;\n    /**\n     * The current extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    _this.extent = extent;\n    return _this;\n  }\n  return ExtentEvent;\n}(Event);\nexport { ExtentEvent };\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nvar Extent = /** @class */function (_super) {\n  __extends(Extent, _super);\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  function Extent(opt_options) {\n    var _this = this;\n    var options = opt_options || {};\n    _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */options) || this;\n    /**\n     * Condition\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    _this.condition_ = options.condition ? options.condition : always;\n    /**\n     * Extent of the drawn box\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    _this.extent_ = null;\n    /**\n     * Handler for pointer move events\n     * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n     * @private\n     */\n    _this.pointerHandler_ = null;\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    _this.pixelTolerance_ = options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    _this.snappedToVertex_ = false;\n    /**\n     * Feature for displaying the visible extent\n     * @type {Feature}\n     * @private\n     */\n    _this.extentFeature_ = null;\n    /**\n     * Feature for displaying the visible pointer\n     * @type {Feature<Point>}\n     * @private\n     */\n    _this.vertexFeature_ = null;\n    if (!opt_options) {\n      opt_options = {};\n    }\n    /**\n     * Layer for the extentFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    _this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.boxStyle ? opt_options.boxStyle : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n    /**\n     * Layer for the vertexFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    _this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.pointerStyle ? opt_options.pointerStyle : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n    if (opt_options.extent) {\n      _this.setExtent(opt_options.extent);\n    }\n    return _this;\n  }\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n   * @param {import(\"../PluggableMap.js\").default} map map\n   * @returns {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  Extent.prototype.snapToVertex_ = function (pixel, map) {\n    var pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\n    var sortByDistance = function (a, b) {\n      return squaredDistanceToSegment(pixelCoordinate, a) - squaredDistanceToSegment(pixelCoordinate, b);\n    };\n    var extent = this.getExtentInternal();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      var segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      var closestSegment = segments[0];\n      var vertex = closestOnSegment(pixelCoordinate, closestSegment);\n      var vertexPixel = map.getPixelFromCoordinateInternal(vertex);\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        var pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\n        var pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\n        var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  };\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n   * @private\n   */\n  Extent.prototype.handlePointerMove_ = function (mapBrowserEvent) {\n    var pixel = mapBrowserEvent.pixel;\n    var map = mapBrowserEvent.map;\n    var vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  };\n  /**\n   * @param {import(\"../extent.js\").Extent} extent extent\n   * @returns {Feature} extent as featrue\n   * @private\n   */\n  Extent.prototype.createOrUpdateExtentFeature_ = function (extent) {\n    var extentFeature = this.extentFeature_;\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      this.extentOverlay_.getSource().addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  };\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n   * @returns {Feature} vertex as feature\n   * @private\n   */\n  Extent.prototype.createOrUpdatePointerFeature_ = function (vertex) {\n    var vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\n    } else {\n      var geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  };\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  Extent.prototype.handleEvent = function (mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent || !this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    //display pointer (if not dragging)\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    //call pointer to determine up/down/drag\n    _super.prototype.handleEvent.call(this, mapBrowserEvent);\n    //return false to stop propagation\n    return false;\n  };\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  Extent.prototype.handleDownEvent = function (mapBrowserEvent) {\n    var pixel = mapBrowserEvent.pixel;\n    var map = mapBrowserEvent.map;\n    var extent = this.getExtentInternal();\n    var vertex = this.snapToVertex_(pixel, map);\n    //find the extent corner opposite the passed corner\n    var getOpposingPoint = function (point) {\n      var x_ = null;\n      var y_ = null;\n      if (point[0] == extent[0]) {\n        x_ = extent[2];\n      } else if (point[0] == extent[2]) {\n        x_ = extent[0];\n      }\n      if (point[1] == extent[1]) {\n        y_ = extent[3];\n      } else if (point[1] == extent[3]) {\n        y_ = extent[1];\n      }\n      if (x_ !== null && y_ !== null) {\n        return [x_, y_];\n      }\n      return null;\n    };\n    if (vertex && extent) {\n      var x = vertex[0] == extent[0] || vertex[0] == extent[2] ? vertex[0] : null;\n      var y = vertex[1] == extent[1] || vertex[1] == extent[3] ? vertex[1] : null;\n      //snap to point\n      if (x !== null && y !== null) {\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n        //snap to edge\n      } else if (x !== null) {\n        this.pointerHandler_ = getEdgeHandler(getOpposingPoint([x, extent[1]]), getOpposingPoint([x, extent[3]]));\n      } else if (y !== null) {\n        this.pointerHandler_ = getEdgeHandler(getOpposingPoint([extent[0], y]), getOpposingPoint([extent[2], y]));\n      }\n      //no snap - new bbox\n    } else {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n      this.pointerHandler_ = getPointHandler(vertex);\n    }\n    return true; //event handled; start downup sequence\n  };\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  Extent.prototype.handleDragEvent = function (mapBrowserEvent) {\n    if (this.pointerHandler_) {\n      var pixelCoordinate = mapBrowserEvent.coordinate;\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\n    }\n  };\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  Extent.prototype.handleUpEvent = function (mapBrowserEvent) {\n    this.pointerHandler_ = null;\n    //If bbox is zero area, set to null;\n    var extent = this.getExtentInternal();\n    if (!extent || getArea(extent) === 0) {\n      this.setExtent(null);\n    }\n    return false; //Stop handling downup sequence\n  };\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  Extent.prototype.setMap = function (map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    _super.prototype.setMap.call(this, map);\n  };\n  /**\n   * Returns the current drawn extent in the view projection (or user projection if set)\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  Extent.prototype.getExtent = function () {\n    return toUserExtent(this.getExtentInternal(), this.getMap().getView().getProjection());\n  };\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  Extent.prototype.getExtentInternal = function () {\n    return this.extent_;\n  };\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent\n   * @api\n   */\n  Extent.prototype.setExtent = function (extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentEvent(this.extent_));\n  };\n  return Extent;\n}(PointerInteraction);\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  var style = createEditingStyle();\n  return function (feature, resolution) {\n    return style[GeometryType.POLYGON];\n  };\n}\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  var style = createEditingStyle();\n  return function (feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function (point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  } else if (fixedP1[1] == fixedP2[1]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  } else {\n    return null;\n  }\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @returns {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [[[extent[0], extent[1]], [extent[0], extent[3]]], [[extent[0], extent[3]], [extent[2], extent[3]]], [[extent[2], extent[3]], [extent[2], extent[1]]], [[extent[2], extent[1]], [extent[0], extent[1]]]];\n}\nexport default Extent;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { altKeyOnly, always, primaryAction, singleClick } from '../events/condition.js';\nimport { boundingExtent, buffer as bufferExtent, createOrUpdateFromCoordinate as createExtent } from '../extent.js';\nimport { closestOnSegment, distance as coordinateDistance, equals as coordinatesEqual, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment } from '../coordinate.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { equals } from '../array.js';\nimport { fromCircle } from '../geom/Polygon.js';\nimport { fromUserCoordinate, fromUserExtent, getUserProjection, toUserCoordinate, toUserExtent } from '../proj.js';\nimport { getUid } from '../util.js';\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CENTER_INDEX = 0;\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CIRCUMFERENCE_INDEX = 1;\nvar tempExtent = [0, 0, 0, 0];\nvar tempSegment = [];\n/**\n * @enum {string}\n */\nvar ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth]\n * @property {Feature} feature\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} [index]\n * @property {Array<import(\"../extent.js\").Extent>} segment\n * @property {Array<SegmentData>} [featureSegments]\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style used for the modification point or vertex. For linestrings and polygons, this will\n * be the affected vertex, for circles a point along the circle, and for points the actual\n * point. If not configured, the default edit style is used (see {@link module:ol/style}).\n * When using a style function, the point feature passed to the function will have a `features`\n * property - an array whose entries are the features that are being modified, and a `geometries`\n * property - an array whose entries are the geometries that are being modified. Both arrays are\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\n * the geometry will be the particular geometry from the collection that is being modified.\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the `features` option.\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\n * features will be considered for modification based on their visual appearance, instead of being within\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector} is\n * provided, only the rendered representation of the features on that layer will be considered.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the `source` option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nvar ModifyEvent = /** @class */function (_super) {\n  __extends(ModifyEvent, _super);\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<Feature>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserEvent.js\").default} MapBrowserEvent\n   * Associated {@link module:ol/MapBrowserEvent}.\n   */\n  function ModifyEvent(type, features, MapBrowserEvent) {\n    var _this = _super.call(this, type) || this;\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    _this.features = features;\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    _this.mapBrowserEvent = MapBrowserEvent;\n    return _this;\n  }\n  return ModifyEvent;\n}(Event);\nexport { ModifyEvent };\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * Cartesian distance from the pointer is used to determine the features that\n * will be modified. This means that geometries will only be considered for\n * modification when they are within the configured `pixelTolerane`. For point\n * geometries, the `hitDetection` option can be used to match their visual\n * appearance.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nvar Modify = /** @class */function (_super) {\n  __extends(Modify, _super);\n  /**\n   * @param {Options} options Options.\n   */\n  function Modify(options) {\n    var _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */options) || this;\n    /** @private */\n    _this.boundHandleFeatureChange_ = _this.handleFeatureChange_.bind(_this);\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    _this.condition_ = options.condition ? options.condition : primaryAction;\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    _this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    _this.deleteCondition_ = options.deleteCondition ? options.deleteCondition : _this.defaultDeleteCondition_;\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    _this.insertVertexCondition_ = options.insertVertexCondition ? options.insertVertexCondition : always;\n    /**\n     * Editing vertex.\n     * @type {Feature}\n     * @private\n     */\n    _this.vertexFeature_ = null;\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    _this.vertexSegments_ = null;\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    _this.lastPixel_ = [0, 0];\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    _this.ignoreNextSingleClick_ = false;\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    _this.featuresBeingModified_ = null;\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    _this.rBush_ = new RBush();\n    /**\n     * @type {number}\n     * @private\n     */\n    _this.pixelTolerance_ = options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n    /**\n     * @type {boolean}\n     * @private\n     */\n    _this.snappedToVertex_ = false;\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    _this.changingFeature_ = false;\n    /**\n     * @type {Array}\n     * @private\n     */\n    _this.dragSegments_ = [];\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    _this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    _this.SEGMENT_WRITERS_ = {\n      'Point': _this.writePointGeometry_.bind(_this),\n      'LineString': _this.writeLineStringGeometry_.bind(_this),\n      'LinearRing': _this.writeLineStringGeometry_.bind(_this),\n      'Polygon': _this.writePolygonGeometry_.bind(_this),\n      'MultiPoint': _this.writeMultiPointGeometry_.bind(_this),\n      'MultiLineString': _this.writeMultiLineStringGeometry_.bind(_this),\n      'MultiPolygon': _this.writeMultiPolygonGeometry_.bind(_this),\n      'Circle': _this.writeCircleGeometry_.bind(_this),\n      'GeometryCollection': _this.writeGeometryCollectionGeometry_.bind(_this)\n    };\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    _this.source_ = null;\n    /**\n     * @type {boolean|import(\"../layer/BaseVector\").default}\n     */\n    _this.hitDetection_ = null;\n    var features;\n    if (options.features) {\n      features = options.features;\n    } else if (options.source) {\n      _this.source_ = options.source;\n      features = new Collection(_this.source_.getFeatures());\n      _this.source_.addEventListener(VectorEventType.ADDFEATURE, _this.handleSourceAdd_.bind(_this));\n      _this.source_.addEventListener(VectorEventType.REMOVEFEATURE, _this.handleSourceRemove_.bind(_this));\n    }\n    if (!features) {\n      throw new Error('The modify interaction requires features, a source or a layer');\n    }\n    if (options.hitDetection) {\n      _this.hitDetection_ = options.hitDetection;\n    }\n    /**\n     * @type {Collection<import(\"../Feature.js\").FeatureLike>}\n     * @private\n     */\n    _this.features_ = features;\n    _this.features_.forEach(_this.addFeature_.bind(_this));\n    _this.features_.addEventListener(CollectionEventType.ADD, _this.handleFeatureAdd_.bind(_this));\n    _this.features_.addEventListener(CollectionEventType.REMOVE, _this.handleFeatureRemove_.bind(_this));\n    /**\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @private\n     */\n    _this.lastPointerEvent_ = null;\n    /**\n     * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\n     * @type {Array<number>}\n     */\n    _this.delta_ = [0, 0];\n    return _this;\n  }\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.addFeature_ = function (feature) {\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    var map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  };\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @param {Array<Array<SegmentData>>} segments The segments subject to modification.\n   * @private\n   */\n  Modify.prototype.willModifyFeatures_ = function (evt, segments) {\n    if (!this.featuresBeingModified_) {\n      this.featuresBeingModified_ = new Collection();\n      var features = this.featuresBeingModified_.getArray();\n      for (var i = 0, ii = segments.length; i < ii; ++i) {\n        var feature = segments[i][0].feature;\n        if (features.indexOf(feature) === -1) {\n          this.featuresBeingModified_.push(feature);\n        }\n      }\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYSTART, this.featuresBeingModified_, evt));\n    }\n  };\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.removeFeature_ = function (feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of canditate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  };\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.removeFeatureSegmentData_ = function (feature) {\n    var rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    var nodesToRemove = [];\n    rBush.forEach(\n    /**\n     * @param {SegmentData} node RTree node.\n     */\n    function (node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n      var nodeToRemove = nodesToRemove[i];\n      for (var j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  };\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  Modify.prototype.setActive = function (active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    _super.prototype.setActive.call(this, active);\n  };\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  Modify.prototype.setMap = function (map) {\n    this.overlay_.setMap(map);\n    _super.prototype.setMap.call(this, map);\n  };\n  /**\n   * Get the overlay layer that this interaction renders the modification point or vertex to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  Modify.prototype.getOverlay = function () {\n    return this.overlay_;\n  };\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  Modify.prototype.handleSourceAdd_ = function (event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  };\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  Modify.prototype.handleSourceRemove_ = function (event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  };\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureAdd_ = function (evt) {\n    this.addFeature_(/** @type {Feature} */evt.element);\n  };\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureChange_ = function (evt) {\n    if (!this.changingFeature_) {\n      var feature = /** @type {Feature} */evt.target;\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  };\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureRemove_ = function (evt) {\n    var feature = /** @type {Feature} */evt.element;\n    this.removeFeature_(feature);\n  };\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writePointGeometry_ = function (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    /** @type {SegmentData} */\n    var segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates]\n    };\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  };\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiPointGeometry_ = function (feature, geometry) {\n    var points = geometry.getCoordinates();\n    for (var i = 0, ii = points.length; i < ii; ++i) {\n      var coordinates = points[i];\n      /** @type {SegmentData} */\n      var segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates]\n      };\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  };\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeLineStringGeometry_ = function (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      /** @type {SegmentData} */\n      var segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment\n      };\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiLineStringGeometry_ = function (feature, geometry) {\n    var lines = geometry.getCoordinates();\n    for (var j = 0, jj = lines.length; j < jj; ++j) {\n      var coordinates = lines[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        /** @type {SegmentData} */\n        var segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        };\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writePolygonGeometry_ = function (feature, geometry) {\n    var rings = geometry.getCoordinates();\n    for (var j = 0, jj = rings.length; j < jj; ++j) {\n      var coordinates = rings[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        /** @type {SegmentData} */\n        var segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        };\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiPolygonGeometry_ = function (feature, geometry) {\n    var polygons = geometry.getCoordinates();\n    for (var k = 0, kk = polygons.length; k < kk; ++k) {\n      var rings = polygons[k];\n      for (var j = 0, jj = rings.length; j < jj; ++j) {\n        var coordinates = rings[j];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          var segment = coordinates.slice(i, i + 2);\n          /** @type {SegmentData} */\n          var segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment\n          };\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  };\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeCircleGeometry_ = function (feature, geometry) {\n    var coordinates = geometry.getCenter();\n    /** @type {SegmentData} */\n    var centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates]\n    };\n    /** @type {SegmentData} */\n    var circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates]\n    };\n    var featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    var circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */geometry;\n    var userProjection = getUserProjection();\n    if (userProjection && this.getMap()) {\n      var projection = this.getMap().getView().getProjection();\n      circleGeometry = circleGeometry.clone().transform(userProjection, projection);\n      circleGeometry = fromCircle(/** @type {import(\"../geom/Circle.js\").default} */circleGeometry).transform(projection, userProjection);\n    }\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n  };\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeGeometryCollectionGeometry_ = function (feature, geometry) {\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0; i < geometries.length; ++i) {\n      var geometry_1 = geometries[i];\n      var writer = this.SEGMENT_WRITERS_[geometry_1.getType()];\n      writer(feature, geometry_1);\n    }\n  };\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {Array<Feature>} features The features being modified.\n   * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  Modify.prototype.createOrUpdateVertexFeature_ = function (coordinates, features, geometries) {\n    var vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      var geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    vertexFeature.set('features', features);\n    vertexFeature.set('geometries', geometries);\n    return vertexFeature;\n  };\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the geometry.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  Modify.prototype.handleEvent = function (mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n    var handled;\n    if (!mapBrowserEvent.map.getView().getInteracting() && mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n    return _super.prototype.handleEvent.call(this, mapBrowserEvent) && !handled;\n  };\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   */\n  Modify.prototype.handleDragEvent = function (evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt, this.dragSegments_);\n    var vertex = [evt.coordinate[0] + this.delta_[0], evt.coordinate[1] + this.delta_[1]];\n    var features = [];\n    var geometries = [];\n    for (var i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      var dragSegment = this.dragSegments_[i];\n      var segmentData = dragSegment[0];\n      var feature = segmentData.feature;\n      if (features.indexOf(feature) === -1) {\n        features.push(feature);\n      }\n      var geometry = segmentData.geometry;\n      if (geometries.indexOf(geometry) === -1) {\n        geometries.push(geometry);\n      }\n      var depth = segmentData.depth;\n      var coordinates = void 0;\n      var segment = segmentData.segment;\n      var index = dragSegment[1];\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n      switch (geometry.getType()) {\n        case GeometryType.POINT:\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case GeometryType.MULTI_POINT:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case GeometryType.LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.CIRCLE:\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else {\n            // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            var projection = evt.map.getView().getProjection();\n            var radius = coordinateDistance(fromUserCoordinate(geometry.getCenter(), projection), fromUserCoordinate(vertex, projection));\n            var userProjection = getUserProjection();\n            if (userProjection) {\n              var circleGeometry = geometry.clone().transform(userProjection, projection);\n              circleGeometry.setRadius(radius);\n              radius = circleGeometry.transform(projection, userProjection).getRadius();\n            }\n            geometry.setRadius(radius);\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n        // pass\n      }\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex, features, geometries);\n  };\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  Modify.prototype.handleDownEvent = function (evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    var pixelCoordinate = evt.coordinate;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.featuresBeingModified_ = null;\n    var vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      var projection = evt.map.getView().getProjection();\n      var insertVertices = [];\n      var vertex = vertexFeature.getGeometry().getCoordinates();\n      var vertexExtent = boundingExtent([vertex]);\n      var segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      var componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (var i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        var segmentDataMatch = segmentDataMatches[i];\n        var segment = segmentDataMatch.segment;\n        var uid = getUid(segmentDataMatch.geometry);\n        var depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n        if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE && segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n          var closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch, projection);\n          if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n          continue;\n        }\n        if (coordinatesEqual(segment[0], vertex) && !componentSegments[uid][0]) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n          continue;\n        }\n        if (coordinatesEqual(segment[1], vertex) && !componentSegments[uid][1]) {\n          // prevent dragging closed linestrings by the connecting node\n          if ((segmentDataMatch.geometry.getType() === GeometryType.LINE_STRING || segmentDataMatch.geometry.getType() === GeometryType.MULTI_LINE_STRING) && componentSegments[uid][0] && componentSegments[uid][0].index === 0) {\n            continue;\n          }\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n          continue;\n        }\n        if (getUid(segment) in this.vertexSegments_ && !componentSegments[uid][0] && !componentSegments[uid][1] && this.insertVertexCondition_(evt)) {\n          insertVertices.push(segmentDataMatch);\n        }\n      }\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt, [insertVertices]);\n      }\n      for (var j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_(insertVertices[j], vertex);\n      }\n    }\n    return !!this.vertexFeature_;\n  };\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  Modify.prototype.handleUpEvent = function (evt) {\n    for (var i = this.dragSegments_.length - 1; i >= 0; --i) {\n      var segmentData = this.dragSegments_[i][0];\n      var geometry = segmentData.geometry;\n      if (geometry.getType() === GeometryType.CIRCLE) {\n        // Update a circle object in the R* bush:\n        var coordinates = geometry.getCenter();\n        var centerSegmentData = segmentData.featureSegments[0];\n        var circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        var circleGeometry = geometry;\n        var userProjection = getUserProjection();\n        if (userProjection) {\n          var projection = evt.map.getView().getProjection();\n          circleGeometry = circleGeometry.clone().transform(userProjection, projection);\n          circleGeometry = fromCircle(circleGeometry).transform(projection, userProjection);\n        }\n        this.rBush_.update(circleGeometry.getExtent(), circumferenceSegmentData);\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.featuresBeingModified_) {\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.featuresBeingModified_, evt));\n      this.featuresBeingModified_ = null;\n    }\n    return false;\n  };\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  Modify.prototype.handlePointerMove_ = function (evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n  };\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_coordinate The pixel Coordinate.\n   * @private\n   */\n  Modify.prototype.handlePointerAtPixel_ = function (pixel, map, opt_coordinate) {\n    var _this = this;\n    var pixelCoordinate = opt_coordinate || map.getCoordinateFromPixel(pixel);\n    var projection = map.getView().getProjection();\n    var sortByDistance = function (a, b) {\n      return projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) - projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection);\n    };\n    var nodes, hitPointGeometry;\n    if (this.hitDetection_) {\n      var layerFilter = typeof this.hitDetection_ === 'object' ? function (layer) {\n        return layer === _this.hitDetection_;\n      } : undefined;\n      map.forEachFeatureAtPixel(pixel, function (feature, layer, geometry) {\n        geometry = geometry || feature.getGeometry();\n        if (geometry.getType() === GeometryType.POINT) {\n          hitPointGeometry = geometry;\n          var coordinate = geometry.getCoordinates();\n          nodes = [{\n            feature: feature,\n            geometry: geometry,\n            segment: [coordinate, coordinate]\n          }];\n        }\n        return true;\n      }, {\n        layerFilter: layerFilter\n      });\n    }\n    if (!nodes) {\n      var viewExtent = fromUserExtent(createExtent(pixelCoordinate, tempExtent), projection);\n      var buffer = map.getView().getResolution() * this.pixelTolerance_;\n      var box = toUserExtent(bufferExtent(viewExtent, buffer, tempExtent), projection);\n      nodes = this.rBush_.getInExtent(box);\n    }\n    if (nodes && nodes.length > 0) {\n      var node = nodes.sort(sortByDistance)[0];\n      var closestSegment = node.segment;\n      var vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      var vertexPixel = map.getPixelFromCoordinate(vertex);\n      var dist = coordinateDistance(pixel, vertexPixel);\n      if (hitPointGeometry || dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        var vertexSegments = {};\n        vertexSegments[getUid(closestSegment)] = true;\n        this.delta_[0] = vertex[0] - pixelCoordinate[0];\n        this.delta_[1] = vertex[1] - pixelCoordinate[1];\n        if (node.geometry.getType() === GeometryType.CIRCLE && node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(vertex, [node.feature], [node.geometry]);\n        } else {\n          var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(vertex, [node.feature], [node.geometry]);\n          var geometries = {};\n          geometries[getUid(node.geometry)] = true;\n          for (var i = 1, ii = nodes.length; i < ii; ++i) {\n            var segment = nodes[i].segment;\n            if (coordinatesEqual(closestSegment[0], segment[0]) && coordinatesEqual(closestSegment[1], segment[1]) || coordinatesEqual(closestSegment[0], segment[1]) && coordinatesEqual(closestSegment[1], segment[0])) {\n              var geometryUid = getUid(nodes[i].geometry);\n              if (!(geometryUid in geometries)) {\n                geometries[geometryUid] = true;\n                vertexSegments[getUid(segment)] = true;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  };\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  Modify.prototype.insertVertex_ = function (segmentData, vertex) {\n    var segment = segmentData.segment;\n    var feature = segmentData.feature;\n    var geometry = segmentData.geometry;\n    var depth = segmentData.depth;\n    var index = segmentData.index;\n    var coordinates;\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n    this.setGeometryCoordinates_(geometry, coordinates);\n    var rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n    /** @type {SegmentData} */\n    var newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index\n    };\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n    /** @type {SegmentData} */\n    var newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1\n    };\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  };\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  Modify.prototype.removePoint = function () {\n    if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n      var evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt, this.dragSegments_);\n      var removed = this.removeVertex_();\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.featuresBeingModified_, evt));\n      this.featuresBeingModified_ = null;\n      return removed;\n    }\n    return false;\n  };\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  Modify.prototype.removeVertex_ = function () {\n    var dragSegments = this.dragSegments_;\n    var segmentsByFeature = {};\n    var deleted = false;\n    var component, coordinates, dragSegment, geometry, i, index, left;\n    var newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case GeometryType.MULTI_LINE_STRING:\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.LINE_STRING:\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.MULTI_POLYGON:\n          component = component[segmentData.depth[1]];\n        /* falls through */\n        case GeometryType.POLYGON:\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n        // pass\n      }\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        var segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          /** @type {SegmentData} */\n          var newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments\n          };\n          this.rBush_.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n    }\n    return deleted;\n  };\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  Modify.prototype.setGeometryCoordinates_ = function (geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  };\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  Modify.prototype.updateSegmentIndices_ = function (geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(geometry.getExtent(), function (segmentDataMatch) {\n      if (segmentDataMatch.geometry === geometry && (depth === undefined || segmentDataMatch.depth === undefined || equals(segmentDataMatch.depth, depth)) && segmentDataMatch.index > index) {\n        segmentDataMatch.index += delta;\n      }\n    });\n  };\n  return Modify;\n}(PointerInteraction);\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(pointCoordinates, segmentData, projection) {\n  var geometry = segmentData.geometry;\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    var circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */geometry;\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      var userProjection = getUserProjection();\n      if (userProjection) {\n        circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */circleGeometry.clone().transform(userProjection, projection);\n      }\n      var distanceToCenterSquared = squaredCoordinateDistance(circleGeometry.getCenter(), fromUserCoordinate(pointCoordinates, projection));\n      var distanceToCircumference = Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n  var coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  var geometry = segmentData.geometry;\n  if (geometry.getType() === GeometryType.CIRCLE && segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n    var circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */geometry;\n    var userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */circleGeometry.clone().transform(userProjection, projection);\n    }\n    return toUserCoordinate(circleGeometry.getClosestPoint(fromUserCoordinate(pointCoordinates, projection)), projection);\n  }\n  var coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(closestOnSegment(coordinate, tempSegment), projection);\n}\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var style = createEditingStyle();\n  return function (feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\nexport default Modify;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport { TRUE } from '../functions.js';\nimport { clear } from '../obj.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { extend, includes } from '../array.js';\nimport { getUid } from '../util.js';\nimport { never, shiftKeyOnly, singleClick } from '../events/condition.js';\n/**\n * @enum {string}\n */\nvar SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nvar SelectEvent = /** @class */function (_super) {\n  __extends(SelectEvent, _super);\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent}.\n   */\n  function SelectEvent(type, selected, deselected, mapBrowserEvent) {\n    var _this = _super.call(this, type) || this;\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    _this.selected = selected;\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    _this.deselected = deselected;\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    _this.mapBrowserEvent = mapBrowserEvent;\n    return _this;\n  }\n  return SelectEvent;\n}(Event);\nexport { SelectEvent };\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object.<number, import(\"../style/Style.js\").default|Array.<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nvar originalFeatureStyles = {};\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nvar Select = /** @class */function (_super) {\n  __extends(Select, _super);\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  function Select(opt_options) {\n    var _this = _super.call(this) || this;\n    var options = opt_options ? opt_options : {};\n    /**\n     * @private\n     */\n    _this.boundAddFeature_ = _this.addFeature_.bind(_this);\n    /**\n     * @private\n     */\n    _this.boundRemoveFeature_ = _this.removeFeature_.bind(_this);\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    _this.condition_ = options.condition ? options.condition : singleClick;\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    _this.addCondition_ = options.addCondition ? options.addCondition : never;\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    _this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    _this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.multi_ = options.multi ? options.multi : false;\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    _this.filter_ = options.filter ? options.filter : TRUE;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array.<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    _this.style_ = options.style !== undefined ? options.style : getDefaultStyleFunction();\n    /**\n     * @private\n     * @type {import(\"../Collection.js\").default}\n     */\n    _this.features_ = options.features || new Collection();\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n    var layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        var layers_1 = options.layers;\n        layerFilter = function (layer) {\n          return includes(layers_1, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\n     */\n    _this.layerFilter_ = layerFilter;\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    _this.featureLayerAssociation_ = {};\n    return _this;\n  }\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  Select.prototype.addFeatureLayerAssociation_ = function (feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  };\n  /**\n   * Get the selected features.\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n   * @api\n   */\n  Select.prototype.getFeatures = function () {\n    return this.features_;\n  };\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  Select.prototype.getHitTolerance = function () {\n    return this.hitTolerance_;\n  };\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n   * the (last) selected feature. Note that this will not work with any\n   * programmatic method like pushing features to\n   * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  Select.prototype.getLayer = function (feature) {\n    return /** @type {import('../layer/Vector.js').default} */this.featureLayerAssociation_[getUid(feature)];\n  };\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  Select.prototype.setHitTolerance = function (hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  };\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Select.prototype.setMap = function (map) {\n    var currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    _super.prototype.setMap.call(this, map);\n    if (map) {\n      this.features_.addEventListener(CollectionEventType.ADD, this.boundAddFeature_);\n      this.features_.addEventListener(CollectionEventType.REMOVE, this.boundRemoveFeature_);\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(CollectionEventType.ADD, this.boundAddFeature_);\n      this.features_.removeEventListener(CollectionEventType.REMOVE, this.boundRemoveFeature_);\n    }\n  };\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Select.prototype.addFeature_ = function (evt) {\n    var feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n  };\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Select.prototype.removeFeature_ = function (evt) {\n    var feature = evt.element;\n    if (this.style_) {\n      this.restorePreviousStyle_(feature);\n    }\n  };\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  Select.prototype.getStyle = function () {\n    return this.style_;\n  };\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  Select.prototype.applySelectedStyle_ = function (feature) {\n    var key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  };\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  Select.prototype.restorePreviousStyle_ = function (feature) {\n    var interactions = this.getMap().getInteractions().getArray();\n    for (var i = interactions.length - 1; i >= 0; --i) {\n      var interaction = interactions[i];\n      if (interaction !== this && interaction instanceof Select && interaction.getStyle() && interaction.getFeatures().getArray().lastIndexOf(feature) !== -1) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n    var key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  };\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @private\n   */\n  Select.prototype.removeFeatureLayerAssociation_ = function (feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  };\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {Select}\n   */\n  Select.prototype.handleEvent = function (mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    var add = this.addCondition_(mapBrowserEvent);\n    var remove = this.removeCondition_(mapBrowserEvent);\n    var toggle = this.toggleCondition_(mapBrowserEvent);\n    var set = !add && !remove && !toggle;\n    var map = mapBrowserEvent.map;\n    var features = this.getFeatures();\n    var deselected = [];\n    var selected = [];\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      /**\n       * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n       * @param {import(\"../layer/Layer.js\").default} layer Layer.\n       * @return {boolean|undefined} Continue to iterate over the features.\n       */\n      function (feature, layer) {\n        if (this.filter_(feature, layer)) {\n          selected.push(feature);\n          this.addFeatureLayerAssociation_(feature, layer);\n          return !this.multi_;\n        }\n      }.bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n      for (var i = features.getLength() - 1; i >= 0; --i) {\n        var feature = features.item(i);\n        var index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      /**\n       * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n       * @param {import(\"../layer/Layer.js\").default} layer Layer.\n       * @return {boolean|undefined} Continue to iterate over the features.\n       */\n      function (feature, layer) {\n        if (this.filter_(feature, layer)) {\n          if ((add || toggle) && !includes(features.getArray(), feature)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n          } else if ((remove || toggle) && includes(features.getArray(), feature)) {\n            deselected.push(feature);\n            this.removeFeatureLayerAssociation_(feature);\n          }\n          return !this.multi_;\n        }\n      }.bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n      for (var j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(new SelectEvent(SelectEventType.SELECT, selected, deselected, mapBrowserEvent));\n    }\n    return true;\n  };\n  return Select;\n}(Interaction);\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\nexport default Select;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/Snap\n */\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport { FALSE, TRUE } from '../functions.js';\nimport { boundingExtent, createEmpty } from '../extent.js';\nimport { closestOnCircle, closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment } from '../coordinate.js';\nimport { fromCircle } from '../geom/Polygon.js';\nimport { fromUserCoordinate, getUserProjection, toUserCoordinate } from '../proj.js';\nimport { getUid } from '../util.js';\nimport { getValues } from '../obj.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel\n */\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n * @return {import(\"../Feature.js\").default} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (/** @type {import(\"../source/Vector.js\").VectorSourceEvent} */evt.feature) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */evt.feature;\n  } else if (/** @type {import(\"../Collection.js\").CollectionEvent} */evt.element) {\n    return /** @type {import(\"../Feature.js\").default} */ /** @type {import(\"../Collection.js\").CollectionEvent} */evt.element;\n  }\n}\nvar tempSegment = [];\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @api\n */\nvar Snap = /** @class */function (_super) {\n  __extends(Snap, _super);\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  function Snap(opt_options) {\n    var _this = this;\n    var options = opt_options ? opt_options : {};\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */options;\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n    _this = _super.call(this, pointerOptions) || this;\n    /**\n     * @type {import(\"../source/Vector.js\").default}\n     * @private\n     */\n    _this.source_ = options.source ? options.source : null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.edge_ = options.edge !== undefined ? options.edge : true;\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>}\n     * @private\n     */\n    _this.features_ = options.features ? options.features : null;\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    _this.featuresListenerKeys_ = [];\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    _this.featureChangeListenerKeys_ = {};\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    _this.indexedFeaturesExtents_ = {};\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    _this.pendingFeatures_ = {};\n    /**\n     * @type {number}\n     * @private\n     */\n    _this.pixelTolerance_ = options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n    /**\n     * Segment RTree for each layer\n     * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n     * @private\n     */\n    _this.rBush_ = new RBush();\n    /**\n     * @const\n     * @private\n     * @type {Object<string, function(import(\"../Feature.js\").default, import(\"../geom/Geometry.js\").default): void>}\n     */\n    _this.SEGMENT_WRITERS_ = {\n      'Point': _this.writePointGeometry_.bind(_this),\n      'LineString': _this.writeLineStringGeometry_.bind(_this),\n      'LinearRing': _this.writeLineStringGeometry_.bind(_this),\n      'Polygon': _this.writePolygonGeometry_.bind(_this),\n      'MultiPoint': _this.writeMultiPointGeometry_.bind(_this),\n      'MultiLineString': _this.writeMultiLineStringGeometry_.bind(_this),\n      'MultiPolygon': _this.writeMultiPolygonGeometry_.bind(_this),\n      'GeometryCollection': _this.writeGeometryCollectionGeometry_.bind(_this),\n      'Circle': _this.writeCircleGeometry_.bind(_this)\n    };\n    return _this;\n  }\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean=} opt_listen Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  Snap.prototype.addFeature = function (feature, opt_listen) {\n    var register = opt_listen !== undefined ? opt_listen : true;\n    var feature_uid = getUid(feature);\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (segmentWriter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n        segmentWriter(feature, geometry);\n      }\n    }\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(feature, EventType.CHANGE, this.handleFeatureChange_, this);\n    }\n  };\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  Snap.prototype.forEachFeatureAdd_ = function (feature) {\n    this.addFeature(feature);\n  };\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  Snap.prototype.forEachFeatureRemove_ = function (feature) {\n    this.removeFeature(feature);\n  };\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  Snap.prototype.getFeatures_ = function () {\n    var features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  };\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  Snap.prototype.handleEvent = function (evt) {\n    var result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result.snapped) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n    }\n    return _super.prototype.handleEvent.call(this, evt);\n  };\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureAdd_ = function (evt) {\n    var feature = getFeatureFromEvent(evt);\n    this.addFeature(feature);\n  };\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureRemove_ = function (evt) {\n    var feature = getFeatureFromEvent(evt);\n    this.removeFeature(feature);\n  };\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureChange_ = function (evt) {\n    var feature = /** @type {import(\"../Feature.js\").default} */evt.target;\n    if (this.handlingDownUpSequence) {\n      var uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  };\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  Snap.prototype.handleUpEvent = function (evt) {\n    var featuresToUpdate = getValues(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  };\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  Snap.prototype.removeFeature = function (feature, opt_unlisten) {\n    var unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n    var feature_uid = getUid(feature);\n    var extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      var rBush = this.rBush_;\n      var nodesToRemove_1 = [];\n      rBush.forEachInExtent(extent, function (node) {\n        if (feature === node.feature) {\n          nodesToRemove_1.push(node);\n        }\n      });\n      for (var i = nodesToRemove_1.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove_1[i]);\n      }\n    }\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  };\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  Snap.prototype.setMap = function (map) {\n    var currentMap = this.getMap();\n    var keys = this.featuresListenerKeys_;\n    var features = /** @type {Array<import(\"../Feature.js\").default>} */this.getFeatures_();\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      features.forEach(this.forEachFeatureRemove_.bind(this));\n    }\n    _super.prototype.setMap.call(this, map);\n    if (map) {\n      if (this.features_) {\n        keys.push(listen(this.features_, CollectionEventType.ADD, this.handleFeatureAdd_, this), listen(this.features_, CollectionEventType.REMOVE, this.handleFeatureRemove_, this));\n      } else if (this.source_) {\n        keys.push(listen(this.source_, VectorEventType.ADDFEATURE, this.handleFeatureAdd_, this), listen(this.source_, VectorEventType.REMOVEFEATURE, this.handleFeatureRemove_, this));\n      }\n      features.forEach(this.forEachFeatureAdd_.bind(this));\n    }\n  };\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @return {Result} Snap result\n   */\n  Snap.prototype.snapTo = function (pixel, pixelCoordinate, map) {\n    var lowerLeft = map.getCoordinateFromPixel([pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n    var upperRight = map.getCoordinateFromPixel([pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n    var box = boundingExtent([lowerLeft, upperRight]);\n    var segments = this.rBush_.getInExtent(box);\n    // If snapping on vertices only, don't consider circles\n    if (this.vertex_ && !this.edge_) {\n      segments = segments.filter(function (segment) {\n        return segment.feature.getGeometry().getType() !== GeometryType.CIRCLE;\n      });\n    }\n    var snapped = false;\n    var vertex = null;\n    var vertexPixel = null;\n    if (segments.length === 0) {\n      return {\n        snapped: snapped,\n        vertex: vertex,\n        vertexPixel: vertexPixel\n      };\n    }\n    var projection = map.getView().getProjection();\n    var projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n    var closestSegmentData;\n    var minSquaredDistance = Infinity;\n    for (var i = 0; i < segments.length; ++i) {\n      var segmentData = segments[i];\n      tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n      tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n      var delta = squaredDistanceToSegment(projectedCoordinate, tempSegment);\n      if (delta < minSquaredDistance) {\n        closestSegmentData = segmentData;\n        minSquaredDistance = delta;\n      }\n    }\n    var closestSegment = closestSegmentData.segment;\n    if (this.vertex_ && !this.edge_) {\n      var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      var squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n      var squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n      var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      if (dist <= this.pixelTolerance_) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      var isCircle = closestSegmentData.feature.getGeometry().getType() === GeometryType.CIRCLE;\n      if (isCircle) {\n        var circleGeometry = closestSegmentData.feature.getGeometry();\n        var userProjection = getUserProjection();\n        if (userProjection) {\n          circleGeometry = circleGeometry.clone().transform(userProjection, projection);\n        }\n        vertex = toUserCoordinate(closestOnCircle(projectedCoordinate, /** @type {import(\"../geom/Circle.js\").default} */circleGeometry), projection);\n      } else {\n        tempSegment[0] = fromUserCoordinate(closestSegment[0], projection);\n        tempSegment[1] = fromUserCoordinate(closestSegment[1], projection);\n        vertex = toUserCoordinate(closestOnSegment(projectedCoordinate, tempSegment), projection);\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          if (dist <= this.pixelTolerance_) {\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n    return {\n      snapped: snapped,\n      vertex: vertex,\n      vertexPixel: vertexPixel\n    };\n  };\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  Snap.prototype.updateFeature_ = function (feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  };\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeCircleGeometry_ = function (feature, geometry) {\n    var projection = this.getMap().getView().getProjection();\n    var circleGeometry = geometry;\n    var userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */circleGeometry.clone().transform(userProjection, projection);\n    }\n    var polygon = fromCircle(circleGeometry);\n    if (userProjection) {\n      polygon.transform(projection, userProjection);\n    }\n    var coordinates = polygon.getCoordinates()[0];\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = {\n        feature: feature,\n        segment: segment\n      };\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeGeometryCollectionGeometry_ = function (feature, geometry) {\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0; i < geometries.length; ++i) {\n      var segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n      if (segmentWriter) {\n        segmentWriter(feature, geometries[i]);\n      }\n    }\n  };\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeLineStringGeometry_ = function (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = {\n        feature: feature,\n        segment: segment\n      };\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiLineStringGeometry_ = function (feature, geometry) {\n    var lines = geometry.getCoordinates();\n    for (var j = 0, jj = lines.length; j < jj; ++j) {\n      var coordinates = lines[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = {\n          feature: feature,\n          segment: segment\n        };\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiPointGeometry_ = function (feature, geometry) {\n    var points = geometry.getCoordinates();\n    for (var i = 0, ii = points.length; i < ii; ++i) {\n      var coordinates = points[i];\n      var segmentData = {\n        feature: feature,\n        segment: [coordinates, coordinates]\n      };\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  };\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiPolygonGeometry_ = function (feature, geometry) {\n    var polygons = geometry.getCoordinates();\n    for (var k = 0, kk = polygons.length; k < kk; ++k) {\n      var rings = polygons[k];\n      for (var j = 0, jj = rings.length; j < jj; ++j) {\n        var coordinates = rings[j];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          var segment = coordinates.slice(i, i + 2);\n          var segmentData = {\n            feature: feature,\n            segment: segment\n          };\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  };\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writePointGeometry_ = function (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    var segmentData = {\n      feature: feature,\n      segment: [coordinates, coordinates]\n    };\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  };\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writePolygonGeometry_ = function (feature, geometry) {\n    var rings = geometry.getCoordinates();\n    for (var j = 0, jj = rings.length; j < jj; ++j) {\n      var coordinates = rings[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = {\n          feature: feature,\n          segment: segment\n        };\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n  return Snap;\n}(PointerInteraction);\nexport default Snap;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport Event from '../events/Event.js';\nimport InteractionProperty from './Property.js';\nimport PointerInteraction from './Pointer.js';\nimport { TRUE } from '../functions.js';\nimport { getChangeEventType } from '../Object.js';\nimport { includes } from '../array.js';\n/**\n * @enum {string}\n */\nvar TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n/**\n * @typedef {Object} Options\n * @property {Collection<import(\"../Feature.js\").default>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nvar TranslateEvent = /** @class */function (_super) {\n  __extends(TranslateEvent, _super);\n  /**\n   * @param {TranslateEventType} type Type.\n   * @param {Collection<import(\"../Feature.js\").default>} features The features translated.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} startCoordinate The original coordinates before.translation started\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   */\n  function TranslateEvent(type, features, coordinate, startCoordinate, mapBrowserEvent) {\n    var _this = _super.call(this, type) || this;\n    /**\n     * The features being translated.\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @api\n     */\n    _this.features = features;\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    _this.coordinate = coordinate;\n    /**\n     * The coordinate of the start position before translation started.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    _this.startCoordinate = startCoordinate;\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    _this.mapBrowserEvent = mapBrowserEvent;\n    return _this;\n  }\n  return TranslateEvent;\n}(Event);\nexport { TranslateEvent };\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @fires TranslateEvent\n * @api\n */\nvar Translate = /** @class */function (_super) {\n  __extends(Translate, _super);\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  function Translate(opt_options) {\n    var _this = this;\n    var options = opt_options ? opt_options : {};\n    _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */options) || this;\n    /**\n     * The last position we translated to.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    _this.lastCoordinate_ = null;\n    /**\n     * The start position before translation started.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    _this.startCoordinate_ = null;\n    /**\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @private\n     */\n    _this.features_ = options.features !== undefined ? options.features : null;\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n    var layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        var layers_1 = options.layers;\n        layerFilter = function (layer) {\n          return includes(layers_1, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\n     */\n    _this.layerFilter_ = layerFilter;\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    _this.filter_ = options.filter ? options.filter : TRUE;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n    /**\n     * @type {import(\"../Feature.js\").default}\n     * @private\n     */\n    _this.lastFeature_ = null;\n    _this.addEventListener(getChangeEventType(InteractionProperty.ACTIVE), _this.handleActiveChanged_);\n    return _this;\n  }\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  Translate.prototype.handleDownEvent = function (event) {\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n    if (!this.lastCoordinate_ && this.lastFeature_) {\n      this.startCoordinate_ = event.coordinate;\n      this.lastCoordinate_ = event.coordinate;\n      this.handleMoveEvent(event);\n      var features = this.features_ || new Collection([this.lastFeature_]);\n      this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATESTART, features, event.coordinate, this.startCoordinate_, event));\n      return true;\n    }\n    return false;\n  };\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  Translate.prototype.handleUpEvent = function (event) {\n    if (this.lastCoordinate_) {\n      this.lastCoordinate_ = null;\n      this.handleMoveEvent(event);\n      var features = this.features_ || new Collection([this.lastFeature_]);\n      this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATEEND, features, event.coordinate, this.startCoordinate_, event));\n      // cleanup\n      this.startCoordinate_ = null;\n      return true;\n    }\n    return false;\n  };\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  Translate.prototype.handleDragEvent = function (event) {\n    if (this.lastCoordinate_) {\n      var newCoordinate = event.coordinate;\n      var deltaX_1 = newCoordinate[0] - this.lastCoordinate_[0];\n      var deltaY_1 = newCoordinate[1] - this.lastCoordinate_[1];\n      var features = this.features_ || new Collection([this.lastFeature_]);\n      features.forEach(function (feature) {\n        var geom = feature.getGeometry();\n        geom.translate(deltaX_1, deltaY_1);\n        feature.setGeometry(geom);\n      });\n      this.lastCoordinate_ = newCoordinate;\n      this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATING, features, newCoordinate, this.startCoordinate_, event));\n    }\n  };\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  Translate.prototype.handleMoveEvent = function (event) {\n    var elem = event.map.getViewport();\n    // Change the cursor to grab/grabbing if hovering any of the features managed\n    // by the interaction\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n    } else {\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  };\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {import(\"../PluggableMap.js\").default} map Map to test the intersection on.\n   * @return {import(\"../Feature.js\").default} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  Translate.prototype.featuresAtPixel_ = function (pixel, map) {\n    return map.forEachFeatureAtPixel(pixel, function (feature, layer) {\n      if (this.filter_(feature, layer)) {\n        if (!this.features_ || includes(this.features_.getArray(), feature)) {\n          return feature;\n        }\n      }\n    }.bind(this), {\n      layerFilter: this.layerFilter_,\n      hitTolerance: this.hitTolerance_\n    });\n  };\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  Translate.prototype.getHitTolerance = function () {\n    return this.hitTolerance_;\n  };\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  Translate.prototype.setHitTolerance = function (hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  };\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  Translate.prototype.setMap = function (map) {\n    var oldMap = this.getMap();\n    _super.prototype.setMap.call(this, map);\n    this.updateState_(oldMap);\n  };\n  /**\n   * @private\n   */\n  Translate.prototype.handleActiveChanged_ = function () {\n    this.updateState_(null);\n  };\n  /**\n   * @param {import(\"../PluggableMap.js\").default} oldMap Old map.\n   * @private\n   */\n  Translate.prototype.updateState_ = function (oldMap) {\n    var map = this.getMap();\n    var active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        var elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  };\n  return Translate;\n}(PointerInteraction);\nexport default Translate;\n", "/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  var options = opt_options ? opt_options : {};\n  var interactions = new Collection();\n  var kinetic = new Kinetic(-0.005, 0.05, 100);\n  var altShiftDragRotate = options.altShiftDragRotate !== undefined ? options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n  var doubleClickZoom = options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n  var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      onFocusOnly: options.onFocusOnly,\n      kinetic: kinetic\n    }));\n  }\n  var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n  var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      duration: options.zoomDuration\n    }));\n  }\n  var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n  var mouseWheelZoom = options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      onFocusOnly: options.onFocusOnly,\n      duration: options.zoomDuration\n    }));\n  }\n  var shiftDragZoom = options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n  return interactions;\n}\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport { assign } from './obj.js';\nimport { defaults as defaultControls } from './control.js';\nimport { defaults as defaultInteractions } from './interaction.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */function (_super) {\n  __extends(Map, _super);\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  function Map(options) {\n    var _this = this;\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true\n      });\n    }\n    _this = _super.call(this, options) || this;\n    return _this;\n  }\n  Map.prototype.createRenderer = function () {\n    return new CompositeMapRenderer(this);\n  };\n  return Map;\n}(PluggableMap);\nexport default Map;\n"],
  "mappings": "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",
  "names": ["d", "b", "Interaction", "__extends", "d", "b", "DoubleClickZoom", "__extends", "d", "b", "PointerInteraction", "__extends", "d", "b", "DragPan", "centroid", "distance", "__extends", "d", "b", "DragRotate", "__extends", "d", "b", "RenderBox", "__extends", "d", "b", "DragBoxEvent", "__extends", "DragBox", "__extends", "d", "b", "DragZoom", "__extends", "d", "b", "KeyboardPan", "__extends", "d", "b", "KeyboardZoom", "Kinetic", "__extends", "d", "b", "MouseWheelZoom", "__extends", "d", "b", "PinchRotate", "centroid", "__extends", "d", "b", "PinchZoom", "distance", "centroid", "__extends", "d", "b", "DragAndDropEvent", "__extends", "DragAndDrop", "__extends", "d", "b", "DragRotateAndZoom", "__extends", "d", "b", "Circle", "squaredDistance", "rotate", "__extends", "d", "b", "Feature", "__extends", "d", "b", "LineString", "__extends", "d", "b", "MultiLineString", "__extends", "d", "b", "MultiPoint", "squaredDistance", "linearRingss", "__extends", "d", "b", "MultiPolygon", "linearRingss", "__extends", "d", "b", "Mode", "DrawEvent", "__extends", "Draw", "Mode", "squaredDistance", "Vector_default", "Mode", "__extends", "d", "b", "ExtentEvent", "__extends", "Extent", "Vector_default", "squaredDistance", "__extends", "d", "b", "ModifyEvent", "__extends", "Modify", "Vector_default", "getDefaultStyleFunction", "equals", "buffer", "squaredDistance", "__extends", "d", "b", "SelectEvent", "__extends", "Select", "getDefaultStyleFunction", "feature", "__extends", "d", "b", "tempSegment", "Snap", "squaredDistance", "__extends", "d", "b", "TranslateEvent", "__extends", "Translate", "defaults", "__extends", "d", "b", "Map", "defaults"]
}

{
  "version": 3,
  "sources": ["../../../../../../node_modules/ol/render/EventType.js", "../../../../../../node_modules/ol/layer/Property.js", "../../../../../../node_modules/ol/layer/Base.js", "../../../../../../node_modules/ol/layer/Layer.js", "../../../../../../node_modules/ol/render/Event.js"],
  "sourcesContent": ["/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete'\n};\n", "/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source'\n};\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { clamp } from '../math.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */function (_super) {\n  __extends(BaseLayer, _super);\n  /**\n   * @param {Options} options Layer options.\n   */\n  function BaseLayer(options) {\n    var _this = _super.call(this) || this;\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = assign({}, options);\n    properties[LayerProperty.OPACITY] = options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n    properties[LayerProperty.VISIBLE] = options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] = options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] = options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] = options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] = options.maxZoom !== undefined ? options.maxZoom : Infinity;\n    /**\n     * @type {string}\n     * @private\n     */\n    _this.className_ = properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n    _this.setProperties(properties);\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    _this.state_ = null;\n    return _this;\n  }\n  /**\n   * @return {string} CSS class name.\n   */\n  BaseLayer.prototype.getClassName = function () {\n    return this.className_;\n  };\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean=} opt_managed Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  BaseLayer.prototype.getLayerState = function (opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    var state = this.state_ || (/** @type {?} */{\n      layer: this,\n      managed: opt_managed === undefined ? true : opt_managed\n    });\n    var zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex !== undefined ? zIndex : state.managed === false ? Infinity : 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n    return state;\n  };\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  BaseLayer.prototype.getLayersArray = function (opt_array) {\n    return abstract();\n  };\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n    return abstract();\n  };\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getExtent = function () {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */this.get(LayerProperty.EXTENT);\n  };\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMaxResolution = function () {\n    return /** @type {number} */this.get(LayerProperty.MAX_RESOLUTION);\n  };\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMinResolution = function () {\n    return /** @type {number} */this.get(LayerProperty.MIN_RESOLUTION);\n  };\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMinZoom = function () {\n    return /** @type {number} */this.get(LayerProperty.MIN_ZOOM);\n  };\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMaxZoom = function () {\n    return /** @type {number} */this.get(LayerProperty.MAX_ZOOM);\n  };\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getOpacity = function () {\n    return /** @type {number} */this.get(LayerProperty.OPACITY);\n  };\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  BaseLayer.prototype.getSourceState = function () {\n    return abstract();\n  };\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getVisible = function () {\n    return /** @type {boolean} */this.get(LayerProperty.VISIBLE);\n  };\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getZIndex = function () {\n    return /** @type {number} */this.get(LayerProperty.Z_INDEX);\n  };\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setExtent = function (extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  };\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  };\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMinResolution = function (minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  };\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMaxZoom = function (maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  };\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMinZoom = function (minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  };\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setOpacity = function (opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  };\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setVisible = function (visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  };\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setZIndex = function (zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  };\n  /**\n   * Clean up.\n   */\n  BaseLayer.prototype.disposeInternal = function () {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    _super.prototype.disposeInternal.call(this);\n  };\n  return BaseLayer;\n}(BaseObject);\nexport default BaseLayer;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n * @property {number} minZoom\n * @property {number} maxZoom\n */\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nvar Layer = /** @class */function (_super) {\n  __extends(Layer, _super);\n  /**\n   * @param {Options} options Layer options.\n   */\n  function Layer(options) {\n    var _this = this;\n    var baseOptions = assign({}, options);\n    delete baseOptions.source;\n    _this = _super.call(this, baseOptions) || this;\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    _this.mapPrecomposeKey_ = null;\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    _this.mapRenderKey_ = null;\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    _this.sourceChangeKey_ = null;\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    _this.renderer_ = null;\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      _this.render = options.render;\n    }\n    if (options.map) {\n      _this.setMap(options.map);\n    }\n    _this.addEventListener(getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_);\n    var source = options.source ? (/** @type {SourceType} */options.source) : null;\n    _this.setSource(source);\n    return _this;\n  }\n  /**\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  Layer.prototype.getLayersArray = function (opt_array) {\n    var array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  };\n  /**\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  Layer.prototype.getLayerStatesArray = function (opt_states) {\n    var states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  };\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  Layer.prototype.getSource = function () {\n    return /** @type {SourceType} */this.get(LayerProperty.SOURCE) || null;\n  };\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  Layer.prototype.getSourceState = function () {\n    var source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  };\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourceChange_ = function () {\n    this.changed();\n  };\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourcePropertyChange_ = function () {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    var source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n    }\n    this.changed();\n  };\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  Layer.prototype.getFeatures = function (pixel) {\n    return this.renderer_.getFeatures(pixel);\n  };\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  Layer.prototype.render = function (frameState, target) {\n    var layerRenderer = this.getRenderer();\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  };\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Layer.prototype.setMap = function (map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n        var renderEvent = /** @type {import(\"../render/Event.js\").default} */evt;\n        var layerStatesArray = renderEvent.frameState.layerStatesArray;\n        var layerState = this.getLayerState(false);\n        // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n        assert(!layerStatesArray.some(function (arrayLayerState) {\n          return arrayLayerState.layer === layerState.layer;\n        }), 67);\n        layerStatesArray.push(layerState);\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  };\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  Layer.prototype.setSource = function (source) {\n    this.set(LayerProperty.SOURCE, source);\n  };\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  Layer.prototype.getRenderer = function () {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  };\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  Layer.prototype.hasRenderer = function () {\n    return !!this.renderer_;\n  };\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  Layer.prototype.createRenderer = function () {\n    return null;\n  };\n  /**\n   * Clean up.\n   */\n  Layer.prototype.disposeInternal = function () {\n    this.setSource(null);\n    _super.prototype.disposeInternal.call(this);\n  };\n  return Layer;\n}(BaseLayer);\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  var resolution = viewState.resolution;\n  if (resolution < layerState.minResolution || resolution >= layerState.maxResolution) {\n    return false;\n  }\n  var zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\nexport default Layer;\n", "/**\n * @module ol/render/Event\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */function (_super) {\n  __extends(RenderEvent, _super);\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n   * @param {?CanvasRenderingContext2D=} opt_context Context.\n   */\n  function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    var _this = _super.call(this, type) || this;\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    _this.inversePixelTransform = opt_inversePixelTransform;\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    _this.frameState = opt_frameState;\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    _this.context = opt_context;\n    return _this;\n  }\n  return RenderEvent;\n}(Event);\nexport default RenderEvent;\n"],
  "mappings": "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",
  "names": ["EventType_default", "d", "b", "BaseLayer", "__extends", "d", "b", "Layer", "EventType_default", "__extends", "d", "b", "RenderEvent", "Event_default"]
}

{
  "version": 3,
  "sources": ["../../../../../../node_modules/ol/Disposable.js", "../../../../../../node_modules/ol/array.js", "../../../../../../node_modules/ol/functions.js", "../../../../../../node_modules/ol/events/Event.js", "../../../../../../node_modules/ol/ObjectEventType.js", "../../../../../../node_modules/ol/events/EventType.js", "../../../../../../node_modules/ol/events.js", "../../../../../../node_modules/ol/events/Target.js", "../../../../../../node_modules/ol/Observable.js", "../../../../../../node_modules/ol/Object.js"],
  "sourcesContent": ["/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */function () {\n  function Disposable() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n  /**\n   * Clean up.\n   */\n  Disposable.prototype.dispose = function () {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  };\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  Disposable.prototype.disposeInternal = function () {};\n  return Disposable;\n}();\nexport default Disposable;\n", "/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  var mid, cmp;\n  var comparator = opt_comparator || numberSafeCompareFunction;\n  var low = 0;\n  var high = haystack.length;\n  var found = false;\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n  /* Key not found. */\n  return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  var n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    var i = void 0;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    var tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  var extension = Array.isArray(data) ? data : [data];\n  var length = extension.length;\n  for (var i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  var i = arr.indexOf(obj);\n  var found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  var length = arr.length >>> 0;\n  var value;\n  for (var i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  var len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (var i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  var length = arr.length;\n  var tmp = Array(arr.length);\n  var i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {\n      index: i,\n      value: arr[i]\n    };\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  var index;\n  var found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  var compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    var res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n", "/**\n * @module ol/functions\n */\nimport { equals as arrayEquals } from './array.js';\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  var called = false;\n  /** @type {ReturnType} */\n  var lastResult;\n  /** @type {Array<any>} */\n  var lastArgs;\n  var lastThis;\n  return function () {\n    var nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n", "/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar BaseEvent = /** @class */function () {\n  /**\n   * @param {string} type Type.\n   */\n  function BaseEvent(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  BaseEvent.prototype.preventDefault = function () {\n    this.propagationStopped = true;\n  };\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  BaseEvent.prototype.stopPropagation = function () {\n    this.propagationStopped = true;\n  };\n  return BaseEvent;\n}();\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\nexport default BaseEvent;\n", "/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n", "/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel'\n};\n", "/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent\n */\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    var originalListener_1 = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener_1.apply(this, arguments);\n    };\n  }\n  var eventsKey = {\n    target: target,\n    type: type,\n    listener: listener\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport { VOID } from '../functions.js';\nimport { clear } from '../obj.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */function (_super) {\n  __extends(Target, _super);\n  /**\n   * @param {*=} opt_target Default event target for dispatched events.\n   */\n  function Target(opt_target) {\n    var _this = _super.call(this) || this;\n    /**\n     * @private\n     * @type {*}\n     */\n    _this.eventTarget_ = opt_target;\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    _this.pendingRemovals_ = null;\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    _this.dispatching_ = null;\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    _this.listeners_ = null;\n    return _this;\n  }\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  Target.prototype.addEventListener = function (type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    var listeners = this.listeners_ || (this.listeners_ = {});\n    var listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  };\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  Target.prototype.dispatchEvent = function (event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    var evt = typeof event === 'string' ? new Event(event) : event;\n    var type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    var listeners = this.listeners_ && this.listeners_[type];\n    var propagate;\n    if (listeners) {\n      var dispatching = this.dispatching_ || (this.dispatching_ = {});\n      var pendingRemovals = this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */listeners[i].handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */listeners[i].call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        var pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  };\n  /**\n   * Clean up.\n   */\n  Target.prototype.disposeInternal = function () {\n    this.listeners_ && clear(this.listeners_);\n  };\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  Target.prototype.getListeners = function (type) {\n    return this.listeners_ && this.listeners_[type] || undefined;\n  };\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  Target.prototype.hasListener = function (opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type ? opt_type in this.listeners_ : Object.keys(this.listeners_).length > 0;\n  };\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  Target.prototype.removeEventListener = function (type, listener) {\n    var listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  };\n  return Target;\n}(Disposable);\nexport default Target;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { listen, listenOnce, unlistenByKey } from './events.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nvar Observable = /** @class */function (_super) {\n  __extends(Observable, _super);\n  function Observable() {\n    var _this = _super.call(this) || this;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.revision_ = 0;\n    return _this;\n  }\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  Observable.prototype.changed = function () {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  };\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  Observable.prototype.getRevision = function () {\n    return this.revision_;\n  };\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.on = function (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */type, listener);\n    }\n  };\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.once = function (type, listener) {\n    var key;\n    if (Array.isArray(type)) {\n      var len = type.length;\n      key = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */type, listener);\n    }\n    /** @type {Object} */\n    listener.ol_key = key;\n    return key;\n  };\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  Observable.prototype.un = function (type, listener) {\n    var key = /** @type {Object} */listener.ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (var i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  };\n  return Observable;\n}(EventTarget);\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (var i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */key);\n  }\n}\nexport default Observable;\n", "var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport { assign, isEmpty } from './obj.js';\nimport { getUid } from './util.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */function (_super) {\n  __extends(ObjectEvent, _super);\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  function ObjectEvent(type, key, oldValue) {\n    var _this = _super.call(this, type) || this;\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    _this.key = key;\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    _this.oldValue = oldValue;\n    return _this;\n  }\n  return ObjectEvent;\n}(Event);\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */function (_super) {\n  __extends(BaseObject, _super);\n  /**\n   * @param {Object<string, *>=} opt_values An object with key-value pairs.\n   */\n  function BaseObject(opt_values) {\n    var _this = _super.call(this) || this;\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(_this);\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    _this.values_ = null;\n    if (opt_values !== undefined) {\n      _this.setProperties(opt_values);\n    }\n    return _this;\n  }\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  BaseObject.prototype.get = function (key) {\n    var value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  };\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  BaseObject.prototype.getKeys = function () {\n    return this.values_ && Object.keys(this.values_) || [];\n  };\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  BaseObject.prototype.getProperties = function () {\n    return this.values_ && assign({}, this.values_) || {};\n  };\n  /**\n   * @return {boolean} The object has properties.\n   */\n  BaseObject.prototype.hasProperties = function () {\n    return !!this.values_;\n  };\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  BaseObject.prototype.notify = function (key, oldValue) {\n    var eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  };\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.set = function (key, value, opt_silent) {\n    var values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      var oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.setProperties = function (values, opt_silent) {\n    for (var key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  };\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  BaseObject.prototype.applyProperties = function (source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  };\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.unset = function (key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      var oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n  return BaseObject;\n}(Observable);\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ? changeEventTypeCache[key] : changeEventTypeCache[key] = 'change:' + key;\n}\nexport default BaseObject;\n"],
  "mappings": "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",
  "names": ["Disposable", "BaseEvent", "d", "b", "Target", "__extends", "d", "b", "Observable", "__extends", "d", "b", "ObjectEvent", "__extends", "BaseObject"]
}
